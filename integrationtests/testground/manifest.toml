name = "go-threads"

[defaults]
builder = "exec:go"
runner = "local:exec"

[builders]
"docker:go" = {enabled = true, enable_go_build_cache = true}
"exec:go" = { enabled = true }

[runners]
"local:docker"  = { enabled = true }
"local:exec"    = { enabled = true }
"cluster:k8s"   = { enabled = true }

[global.build_config]
  enable_go_build_cache = true

[[testcases]]
name = "sync-threads"
instances = { min = 1, max = 500, default = 1 }
  [testcases.params]
    records = { type = "int", desc = "number of random records to be created for each thread", default = 10 }
    verbose = { type = "int", desc = "verbose level of on screen logs, 0-3", default = 0 }
    test-timeout = { type = "string", desc = "how long each test is allowed to run", default = "1m" }
    late-start = { type = "boolean", desc = "start client in a later stage, used by composition", default = false }
    early-stop = { type = "boolean", desc = "stop client in an early stage, used by composition", default = false }

[[testcases]]
name = "bitswap-sync-race"
instances = { min = 1, max = 500, default = 1 }
  [testcases.params]
    records = { type = "int", desc = "number of random records to be created for each thread", default = 10 }
    verbose = { type = "int", desc = "verbose level of on screen logs, 0-3", default = 0 }
    test-timeout = { type = "string", desc = "how long each test is allowed to run", default = "1m" }
    first = { type = "boolean", desc = "start client in a later stage, used by composition", default = false }
    second = { type = "boolean", desc = "stop client in an early stage, used by composition", default = false }
