// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api.proto

package api_pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetHostIDRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetHostIDRequest) Reset()         { *m = GetHostIDRequest{} }
func (m *GetHostIDRequest) String() string { return proto.CompactTextString(m) }
func (*GetHostIDRequest) ProtoMessage()    {}
func (*GetHostIDRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{0}
}

func (m *GetHostIDRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetHostIDRequest.Unmarshal(m, b)
}
func (m *GetHostIDRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetHostIDRequest.Marshal(b, m, deterministic)
}
func (m *GetHostIDRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetHostIDRequest.Merge(m, src)
}
func (m *GetHostIDRequest) XXX_Size() int {
	return xxx_messageInfo_GetHostIDRequest.Size(m)
}
func (m *GetHostIDRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetHostIDRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetHostIDRequest proto.InternalMessageInfo

type GetHostIDReply struct {
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetHostIDReply) Reset()         { *m = GetHostIDReply{} }
func (m *GetHostIDReply) String() string { return proto.CompactTextString(m) }
func (*GetHostIDReply) ProtoMessage()    {}
func (*GetHostIDReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{1}
}

func (m *GetHostIDReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetHostIDReply.Unmarshal(m, b)
}
func (m *GetHostIDReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetHostIDReply.Marshal(b, m, deterministic)
}
func (m *GetHostIDReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetHostIDReply.Merge(m, src)
}
func (m *GetHostIDReply) XXX_Size() int {
	return xxx_messageInfo_GetHostIDReply.Size(m)
}
func (m *GetHostIDReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetHostIDReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetHostIDReply proto.InternalMessageInfo

func (m *GetHostIDReply) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

type AddThreadRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddThreadRequest) Reset()         { *m = AddThreadRequest{} }
func (m *AddThreadRequest) String() string { return proto.CompactTextString(m) }
func (*AddThreadRequest) ProtoMessage()    {}
func (*AddThreadRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{2}
}

func (m *AddThreadRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddThreadRequest.Unmarshal(m, b)
}
func (m *AddThreadRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddThreadRequest.Marshal(b, m, deterministic)
}
func (m *AddThreadRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddThreadRequest.Merge(m, src)
}
func (m *AddThreadRequest) XXX_Size() int {
	return xxx_messageInfo_AddThreadRequest.Size(m)
}
func (m *AddThreadRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddThreadRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddThreadRequest proto.InternalMessageInfo

type AddThreadReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddThreadReply) Reset()         { *m = AddThreadReply{} }
func (m *AddThreadReply) String() string { return proto.CompactTextString(m) }
func (*AddThreadReply) ProtoMessage()    {}
func (*AddThreadReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{3}
}

func (m *AddThreadReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddThreadReply.Unmarshal(m, b)
}
func (m *AddThreadReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddThreadReply.Marshal(b, m, deterministic)
}
func (m *AddThreadReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddThreadReply.Merge(m, src)
}
func (m *AddThreadReply) XXX_Size() int {
	return xxx_messageInfo_AddThreadReply.Size(m)
}
func (m *AddThreadReply) XXX_DiscardUnknown() {
	xxx_messageInfo_AddThreadReply.DiscardUnknown(m)
}

var xxx_messageInfo_AddThreadReply proto.InternalMessageInfo

type PullThreadRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PullThreadRequest) Reset()         { *m = PullThreadRequest{} }
func (m *PullThreadRequest) String() string { return proto.CompactTextString(m) }
func (*PullThreadRequest) ProtoMessage()    {}
func (*PullThreadRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{4}
}

func (m *PullThreadRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PullThreadRequest.Unmarshal(m, b)
}
func (m *PullThreadRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PullThreadRequest.Marshal(b, m, deterministic)
}
func (m *PullThreadRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PullThreadRequest.Merge(m, src)
}
func (m *PullThreadRequest) XXX_Size() int {
	return xxx_messageInfo_PullThreadRequest.Size(m)
}
func (m *PullThreadRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PullThreadRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PullThreadRequest proto.InternalMessageInfo

type PullThreadReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PullThreadReply) Reset()         { *m = PullThreadReply{} }
func (m *PullThreadReply) String() string { return proto.CompactTextString(m) }
func (*PullThreadReply) ProtoMessage()    {}
func (*PullThreadReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{5}
}

func (m *PullThreadReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PullThreadReply.Unmarshal(m, b)
}
func (m *PullThreadReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PullThreadReply.Marshal(b, m, deterministic)
}
func (m *PullThreadReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PullThreadReply.Merge(m, src)
}
func (m *PullThreadReply) XXX_Size() int {
	return xxx_messageInfo_PullThreadReply.Size(m)
}
func (m *PullThreadReply) XXX_DiscardUnknown() {
	xxx_messageInfo_PullThreadReply.DiscardUnknown(m)
}

var xxx_messageInfo_PullThreadReply proto.InternalMessageInfo

type DeleteThreadRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteThreadRequest) Reset()         { *m = DeleteThreadRequest{} }
func (m *DeleteThreadRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteThreadRequest) ProtoMessage()    {}
func (*DeleteThreadRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{6}
}

func (m *DeleteThreadRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteThreadRequest.Unmarshal(m, b)
}
func (m *DeleteThreadRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteThreadRequest.Marshal(b, m, deterministic)
}
func (m *DeleteThreadRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteThreadRequest.Merge(m, src)
}
func (m *DeleteThreadRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteThreadRequest.Size(m)
}
func (m *DeleteThreadRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteThreadRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteThreadRequest proto.InternalMessageInfo

type DeleteThreadReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteThreadReply) Reset()         { *m = DeleteThreadReply{} }
func (m *DeleteThreadReply) String() string { return proto.CompactTextString(m) }
func (*DeleteThreadReply) ProtoMessage()    {}
func (*DeleteThreadReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{7}
}

func (m *DeleteThreadReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteThreadReply.Unmarshal(m, b)
}
func (m *DeleteThreadReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteThreadReply.Marshal(b, m, deterministic)
}
func (m *DeleteThreadReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteThreadReply.Merge(m, src)
}
func (m *DeleteThreadReply) XXX_Size() int {
	return xxx_messageInfo_DeleteThreadReply.Size(m)
}
func (m *DeleteThreadReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteThreadReply.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteThreadReply proto.InternalMessageInfo

type AddFollowerRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddFollowerRequest) Reset()         { *m = AddFollowerRequest{} }
func (m *AddFollowerRequest) String() string { return proto.CompactTextString(m) }
func (*AddFollowerRequest) ProtoMessage()    {}
func (*AddFollowerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{8}
}

func (m *AddFollowerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddFollowerRequest.Unmarshal(m, b)
}
func (m *AddFollowerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddFollowerRequest.Marshal(b, m, deterministic)
}
func (m *AddFollowerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddFollowerRequest.Merge(m, src)
}
func (m *AddFollowerRequest) XXX_Size() int {
	return xxx_messageInfo_AddFollowerRequest.Size(m)
}
func (m *AddFollowerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddFollowerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddFollowerRequest proto.InternalMessageInfo

type AddFollowerReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddFollowerReply) Reset()         { *m = AddFollowerReply{} }
func (m *AddFollowerReply) String() string { return proto.CompactTextString(m) }
func (*AddFollowerReply) ProtoMessage()    {}
func (*AddFollowerReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{9}
}

func (m *AddFollowerReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddFollowerReply.Unmarshal(m, b)
}
func (m *AddFollowerReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddFollowerReply.Marshal(b, m, deterministic)
}
func (m *AddFollowerReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddFollowerReply.Merge(m, src)
}
func (m *AddFollowerReply) XXX_Size() int {
	return xxx_messageInfo_AddFollowerReply.Size(m)
}
func (m *AddFollowerReply) XXX_DiscardUnknown() {
	xxx_messageInfo_AddFollowerReply.DiscardUnknown(m)
}

var xxx_messageInfo_AddFollowerReply proto.InternalMessageInfo

type AddRecordRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddRecordRequest) Reset()         { *m = AddRecordRequest{} }
func (m *AddRecordRequest) String() string { return proto.CompactTextString(m) }
func (*AddRecordRequest) ProtoMessage()    {}
func (*AddRecordRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{10}
}

func (m *AddRecordRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddRecordRequest.Unmarshal(m, b)
}
func (m *AddRecordRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddRecordRequest.Marshal(b, m, deterministic)
}
func (m *AddRecordRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddRecordRequest.Merge(m, src)
}
func (m *AddRecordRequest) XXX_Size() int {
	return xxx_messageInfo_AddRecordRequest.Size(m)
}
func (m *AddRecordRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddRecordRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddRecordRequest proto.InternalMessageInfo

type AddRecordReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddRecordReply) Reset()         { *m = AddRecordReply{} }
func (m *AddRecordReply) String() string { return proto.CompactTextString(m) }
func (*AddRecordReply) ProtoMessage()    {}
func (*AddRecordReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{11}
}

func (m *AddRecordReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddRecordReply.Unmarshal(m, b)
}
func (m *AddRecordReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddRecordReply.Marshal(b, m, deterministic)
}
func (m *AddRecordReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddRecordReply.Merge(m, src)
}
func (m *AddRecordReply) XXX_Size() int {
	return xxx_messageInfo_AddRecordReply.Size(m)
}
func (m *AddRecordReply) XXX_DiscardUnknown() {
	xxx_messageInfo_AddRecordReply.DiscardUnknown(m)
}

var xxx_messageInfo_AddRecordReply proto.InternalMessageInfo

type GetRecordRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRecordRequest) Reset()         { *m = GetRecordRequest{} }
func (m *GetRecordRequest) String() string { return proto.CompactTextString(m) }
func (*GetRecordRequest) ProtoMessage()    {}
func (*GetRecordRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{12}
}

func (m *GetRecordRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRecordRequest.Unmarshal(m, b)
}
func (m *GetRecordRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRecordRequest.Marshal(b, m, deterministic)
}
func (m *GetRecordRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRecordRequest.Merge(m, src)
}
func (m *GetRecordRequest) XXX_Size() int {
	return xxx_messageInfo_GetRecordRequest.Size(m)
}
func (m *GetRecordRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRecordRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRecordRequest proto.InternalMessageInfo

type GetRecordReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRecordReply) Reset()         { *m = GetRecordReply{} }
func (m *GetRecordReply) String() string { return proto.CompactTextString(m) }
func (*GetRecordReply) ProtoMessage()    {}
func (*GetRecordReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{13}
}

func (m *GetRecordReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRecordReply.Unmarshal(m, b)
}
func (m *GetRecordReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRecordReply.Marshal(b, m, deterministic)
}
func (m *GetRecordReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRecordReply.Merge(m, src)
}
func (m *GetRecordReply) XXX_Size() int {
	return xxx_messageInfo_GetRecordReply.Size(m)
}
func (m *GetRecordReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRecordReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetRecordReply proto.InternalMessageInfo

type SubscribeRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubscribeRequest) Reset()         { *m = SubscribeRequest{} }
func (m *SubscribeRequest) String() string { return proto.CompactTextString(m) }
func (*SubscribeRequest) ProtoMessage()    {}
func (*SubscribeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{14}
}

func (m *SubscribeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeRequest.Unmarshal(m, b)
}
func (m *SubscribeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeRequest.Marshal(b, m, deterministic)
}
func (m *SubscribeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeRequest.Merge(m, src)
}
func (m *SubscribeRequest) XXX_Size() int {
	return xxx_messageInfo_SubscribeRequest.Size(m)
}
func (m *SubscribeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeRequest proto.InternalMessageInfo

type SubscribeReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubscribeReply) Reset()         { *m = SubscribeReply{} }
func (m *SubscribeReply) String() string { return proto.CompactTextString(m) }
func (*SubscribeReply) ProtoMessage()    {}
func (*SubscribeReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{15}
}

func (m *SubscribeReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeReply.Unmarshal(m, b)
}
func (m *SubscribeReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeReply.Marshal(b, m, deterministic)
}
func (m *SubscribeReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeReply.Merge(m, src)
}
func (m *SubscribeReply) XXX_Size() int {
	return xxx_messageInfo_SubscribeReply.Size(m)
}
func (m *SubscribeReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeReply.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeReply proto.InternalMessageInfo

func init() {
	proto.RegisterType((*GetHostIDRequest)(nil), "api.pb.GetHostIDRequest")
	proto.RegisterType((*GetHostIDReply)(nil), "api.pb.GetHostIDReply")
	proto.RegisterType((*AddThreadRequest)(nil), "api.pb.AddThreadRequest")
	proto.RegisterType((*AddThreadReply)(nil), "api.pb.AddThreadReply")
	proto.RegisterType((*PullThreadRequest)(nil), "api.pb.PullThreadRequest")
	proto.RegisterType((*PullThreadReply)(nil), "api.pb.PullThreadReply")
	proto.RegisterType((*DeleteThreadRequest)(nil), "api.pb.DeleteThreadRequest")
	proto.RegisterType((*DeleteThreadReply)(nil), "api.pb.DeleteThreadReply")
	proto.RegisterType((*AddFollowerRequest)(nil), "api.pb.AddFollowerRequest")
	proto.RegisterType((*AddFollowerReply)(nil), "api.pb.AddFollowerReply")
	proto.RegisterType((*AddRecordRequest)(nil), "api.pb.AddRecordRequest")
	proto.RegisterType((*AddRecordReply)(nil), "api.pb.AddRecordReply")
	proto.RegisterType((*GetRecordRequest)(nil), "api.pb.GetRecordRequest")
	proto.RegisterType((*GetRecordReply)(nil), "api.pb.GetRecordReply")
	proto.RegisterType((*SubscribeRequest)(nil), "api.pb.SubscribeRequest")
	proto.RegisterType((*SubscribeReply)(nil), "api.pb.SubscribeReply")
}

func init() { proto.RegisterFile("api.proto", fileDescriptor_00212fb1f9d3bf1c) }

var fileDescriptor_00212fb1f9d3bf1c = []byte{
	// 380 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x93, 0x4f, 0x4f, 0xab, 0x40,
	0x14, 0xc5, 0xa1, 0xef, 0xa5, 0x09, 0xf7, 0xbd, 0x60, 0x3b, 0xf5, 0x4f, 0x8b, 0x0b, 0x1b, 0x56,
	0xae, 0x88, 0xd1, 0xad, 0x89, 0xa1, 0x41, 0x5b, 0x76, 0x0d, 0x74, 0xdf, 0x14, 0xb8, 0x51, 0x92,
	0x49, 0xc0, 0x61, 0xaa, 0xf6, 0xe3, 0xe8, 0x27, 0x35, 0x74, 0x4a, 0x99, 0x99, 0xb2, 0x23, 0xe7,
	0x9e, 0x39, 0xdc, 0xfc, 0xce, 0x0c, 0x58, 0x9b, 0x32, 0xf7, 0x4a, 0x56, 0xf0, 0x82, 0xf4, 0xf7,
	0x9f, 0x89, 0x4b, 0x60, 0x30, 0x47, 0xbe, 0x28, 0x2a, 0x1e, 0x06, 0x11, 0xbe, 0x6f, 0xb1, 0xe2,
	0xee, 0x14, 0x6c, 0x49, 0x2b, 0xe9, 0x8e, 0xd8, 0xd0, 0x0b, 0x83, 0xb1, 0x39, 0x35, 0x6f, 0xad,
	0xa8, 0x17, 0x06, 0xf5, 0x29, 0x3f, 0xcb, 0x56, 0x6f, 0x0c, 0x37, 0x59, 0x73, 0x6a, 0x00, 0xb6,
	0xa4, 0x95, 0x74, 0xe7, 0x8e, 0x60, 0xb8, 0xdc, 0x52, 0xaa, 0xda, 0x86, 0x70, 0x26, 0x8b, 0xb5,
	0xef, 0x02, 0x46, 0x01, 0x52, 0xe4, 0xa8, 0x3a, 0x47, 0x30, 0x54, 0xe5, 0xda, 0x7b, 0x0e, 0xc4,
	0xcf, 0xb2, 0x97, 0x82, 0xd2, 0xe2, 0x13, 0x59, 0x63, 0x15, 0xfb, 0xb4, 0x6a, 0xed, 0x14, 0x5a,
	0x84, 0x69, 0xc1, 0xb4, 0x1d, 0x1b, 0xed, 0xe0, 0x9a, 0x23, 0x3f, 0x71, 0x49, 0xda, 0xc1, 0x15,
	0x6f, 0x93, 0x2a, 0x65, 0x79, 0x82, 0x92, 0x4b, 0xd2, 0x4a, 0xba, 0xbb, 0xff, 0xfe, 0x0b, 0x7f,
	0xfc, 0x65, 0x48, 0x9e, 0xc0, 0x3a, 0xf2, 0x23, 0x63, 0x4f, 0x90, 0xf6, 0x74, 0xcc, 0xce, 0x65,
	0xc7, 0xa4, 0xfe, 0x99, 0x51, 0x07, 0x1c, 0x51, 0xb6, 0x01, 0x3a, 0xf1, 0x36, 0x40, 0xe3, 0x6e,
	0x90, 0x19, 0x40, 0x0b, 0x99, 0x4c, 0x1a, 0xdf, 0x49, 0x1b, 0xce, 0x55, 0xd7, 0x48, 0x64, 0x2c,
	0xe0, 0xbf, 0x8c, 0x9f, 0x5c, 0x37, 0xd6, 0x8e, 0xae, 0x9c, 0x49, 0xf7, 0x50, 0x24, 0x3d, 0xc3,
	0x3f, 0xa9, 0x1d, 0xe2, 0x48, 0x6b, 0x6b, 0x45, 0x3a, 0xe3, 0xce, 0x99, 0x4c, 0x45, 0xd4, 0xa2,
	0x50, 0x51, 0xda, 0x53, 0xa8, 0xc8, 0x1d, 0x1a, 0x87, 0x5e, 0xf4, 0x00, 0xbd, 0x7e, 0xa5, 0x17,
	0x35, 0xc0, 0x07, 0xeb, 0x58, 0x79, 0x1b, 0xa0, 0xdf, 0x8c, 0x36, 0x40, 0xbd, 0x1f, 0xae, 0x71,
	0x67, 0xce, 0x1e, 0xe1, 0x26, 0x2f, 0x3c, 0x8e, 0x5f, 0x3c, 0xa7, 0xe8, 0xf1, 0x3d, 0xa7, 0x6a,
	0x5d, 0x21, 0xfb, 0xc8, 0x53, 0x5c, 0xbf, 0xb2, 0x32, 0x9d, 0xd9, 0x82, 0x5e, 0x15, 0x0b, 0x71,
	0x69, 0xfe, 0xf4, 0xfa, 0xab, 0x45, 0x14, 0xc4, 0x71, 0xd2, 0xdf, 0x3f, 0xde, 0x87, 0xdf, 0x00,
	0x00, 0x00, 0xff, 0xff, 0xb9, 0xe9, 0x8e, 0x3a, 0xc9, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// APIClient is the client API for API service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type APIClient interface {
	GetHostID(ctx context.Context, in *GetHostIDRequest, opts ...grpc.CallOption) (*GetHostIDReply, error)
	AddThread(ctx context.Context, in *AddThreadRequest, opts ...grpc.CallOption) (*AddThreadReply, error)
	PullThread(ctx context.Context, in *PullThreadRequest, opts ...grpc.CallOption) (*PullThreadReply, error)
	DeleteThread(ctx context.Context, in *DeleteThreadRequest, opts ...grpc.CallOption) (*DeleteThreadReply, error)
	AddFollower(ctx context.Context, in *AddFollowerRequest, opts ...grpc.CallOption) (*AddFollowerReply, error)
	AddRecord(ctx context.Context, in *AddRecordRequest, opts ...grpc.CallOption) (*AddRecordReply, error)
	GetRecord(ctx context.Context, in *GetRecordRequest, opts ...grpc.CallOption) (*GetRecordReply, error)
	Subscribe(ctx context.Context, in *SubscribeRequest, opts ...grpc.CallOption) (API_SubscribeClient, error)
}

type aPIClient struct {
	cc *grpc.ClientConn
}

func NewAPIClient(cc *grpc.ClientConn) APIClient {
	return &aPIClient{cc}
}

func (c *aPIClient) GetHostID(ctx context.Context, in *GetHostIDRequest, opts ...grpc.CallOption) (*GetHostIDReply, error) {
	out := new(GetHostIDReply)
	err := c.cc.Invoke(ctx, "/api.pb.API/GetHostID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) AddThread(ctx context.Context, in *AddThreadRequest, opts ...grpc.CallOption) (*AddThreadReply, error) {
	out := new(AddThreadReply)
	err := c.cc.Invoke(ctx, "/api.pb.API/AddThread", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) PullThread(ctx context.Context, in *PullThreadRequest, opts ...grpc.CallOption) (*PullThreadReply, error) {
	out := new(PullThreadReply)
	err := c.cc.Invoke(ctx, "/api.pb.API/PullThread", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) DeleteThread(ctx context.Context, in *DeleteThreadRequest, opts ...grpc.CallOption) (*DeleteThreadReply, error) {
	out := new(DeleteThreadReply)
	err := c.cc.Invoke(ctx, "/api.pb.API/DeleteThread", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) AddFollower(ctx context.Context, in *AddFollowerRequest, opts ...grpc.CallOption) (*AddFollowerReply, error) {
	out := new(AddFollowerReply)
	err := c.cc.Invoke(ctx, "/api.pb.API/AddFollower", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) AddRecord(ctx context.Context, in *AddRecordRequest, opts ...grpc.CallOption) (*AddRecordReply, error) {
	out := new(AddRecordReply)
	err := c.cc.Invoke(ctx, "/api.pb.API/AddRecord", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) GetRecord(ctx context.Context, in *GetRecordRequest, opts ...grpc.CallOption) (*GetRecordReply, error) {
	out := new(GetRecordReply)
	err := c.cc.Invoke(ctx, "/api.pb.API/GetRecord", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) Subscribe(ctx context.Context, in *SubscribeRequest, opts ...grpc.CallOption) (API_SubscribeClient, error) {
	stream, err := c.cc.NewStream(ctx, &_API_serviceDesc.Streams[0], "/api.pb.API/Subscribe", opts...)
	if err != nil {
		return nil, err
	}
	x := &aPISubscribeClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type API_SubscribeClient interface {
	Recv() (*SubscribeReply, error)
	grpc.ClientStream
}

type aPISubscribeClient struct {
	grpc.ClientStream
}

func (x *aPISubscribeClient) Recv() (*SubscribeReply, error) {
	m := new(SubscribeReply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// APIServer is the server API for API service.
type APIServer interface {
	GetHostID(context.Context, *GetHostIDRequest) (*GetHostIDReply, error)
	AddThread(context.Context, *AddThreadRequest) (*AddThreadReply, error)
	PullThread(context.Context, *PullThreadRequest) (*PullThreadReply, error)
	DeleteThread(context.Context, *DeleteThreadRequest) (*DeleteThreadReply, error)
	AddFollower(context.Context, *AddFollowerRequest) (*AddFollowerReply, error)
	AddRecord(context.Context, *AddRecordRequest) (*AddRecordReply, error)
	GetRecord(context.Context, *GetRecordRequest) (*GetRecordReply, error)
	Subscribe(*SubscribeRequest, API_SubscribeServer) error
}

// UnimplementedAPIServer can be embedded to have forward compatible implementations.
type UnimplementedAPIServer struct {
}

func (*UnimplementedAPIServer) GetHostID(ctx context.Context, req *GetHostIDRequest) (*GetHostIDReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetHostID not implemented")
}
func (*UnimplementedAPIServer) AddThread(ctx context.Context, req *AddThreadRequest) (*AddThreadReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddThread not implemented")
}
func (*UnimplementedAPIServer) PullThread(ctx context.Context, req *PullThreadRequest) (*PullThreadReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PullThread not implemented")
}
func (*UnimplementedAPIServer) DeleteThread(ctx context.Context, req *DeleteThreadRequest) (*DeleteThreadReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteThread not implemented")
}
func (*UnimplementedAPIServer) AddFollower(ctx context.Context, req *AddFollowerRequest) (*AddFollowerReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddFollower not implemented")
}
func (*UnimplementedAPIServer) AddRecord(ctx context.Context, req *AddRecordRequest) (*AddRecordReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddRecord not implemented")
}
func (*UnimplementedAPIServer) GetRecord(ctx context.Context, req *GetRecordRequest) (*GetRecordReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRecord not implemented")
}
func (*UnimplementedAPIServer) Subscribe(req *SubscribeRequest, srv API_SubscribeServer) error {
	return status.Errorf(codes.Unimplemented, "method Subscribe not implemented")
}

func RegisterAPIServer(s *grpc.Server, srv APIServer) {
	s.RegisterService(&_API_serviceDesc, srv)
}

func _API_GetHostID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetHostIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).GetHostID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.pb.API/GetHostID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).GetHostID(ctx, req.(*GetHostIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_AddThread_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddThreadRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).AddThread(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.pb.API/AddThread",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).AddThread(ctx, req.(*AddThreadRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_PullThread_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PullThreadRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).PullThread(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.pb.API/PullThread",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).PullThread(ctx, req.(*PullThreadRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_DeleteThread_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteThreadRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).DeleteThread(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.pb.API/DeleteThread",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).DeleteThread(ctx, req.(*DeleteThreadRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_AddFollower_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddFollowerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).AddFollower(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.pb.API/AddFollower",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).AddFollower(ctx, req.(*AddFollowerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_AddRecord_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddRecordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).AddRecord(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.pb.API/AddRecord",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).AddRecord(ctx, req.(*AddRecordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_GetRecord_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRecordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).GetRecord(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.pb.API/GetRecord",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).GetRecord(ctx, req.(*GetRecordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_Subscribe_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(SubscribeRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(APIServer).Subscribe(m, &aPISubscribeServer{stream})
}

type API_SubscribeServer interface {
	Send(*SubscribeReply) error
	grpc.ServerStream
}

type aPISubscribeServer struct {
	grpc.ServerStream
}

func (x *aPISubscribeServer) Send(m *SubscribeReply) error {
	return x.ServerStream.SendMsg(m)
}

var _API_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.pb.API",
	HandlerType: (*APIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetHostID",
			Handler:    _API_GetHostID_Handler,
		},
		{
			MethodName: "AddThread",
			Handler:    _API_AddThread_Handler,
		},
		{
			MethodName: "PullThread",
			Handler:    _API_PullThread_Handler,
		},
		{
			MethodName: "DeleteThread",
			Handler:    _API_DeleteThread_Handler,
		},
		{
			MethodName: "AddFollower",
			Handler:    _API_AddFollower_Handler,
		},
		{
			MethodName: "AddRecord",
			Handler:    _API_AddRecord_Handler,
		},
		{
			MethodName: "GetRecord",
			Handler:    _API_GetRecord_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Subscribe",
			Handler:       _API_Subscribe_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "api.proto",
}
