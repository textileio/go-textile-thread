name: Publish gRPC Libs
on:
  release:
    types: [published]
jobs:

  publish_grpc_libs:
    name: Publish gRPC Libs
    runs-on: ubuntu-latest
    container:
      image:  google/dart:latest
    steps:
      - name: Check out code
        uses: actions/checkout@v1
      - name: Get latest tag
        id: latesttag
        uses: "WyriHaximus/github-action-get-previous-tag@master"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
      - name: Install build tools
        run: |
          apt-get update && apt-get install -y build-essential
      - name: Set up Go
        uses: actions/setup-go@v1
        with:
          go-version: 1.13
      - name: Setup env
        run: |
          echo "::set-env name=GOPATH::$(go env GOPATH)"
          echo "::add-path::$(go env GOPATH)/bin"
      - name: Set up Node
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'
          registry-url: 'https://registry.npmjs.org'
      - name: Install protoc
        uses: Arduino/actions/setup-protoc@master
        with:
          version: '3.11.2'
      - name: Install Go protoc plugins
        run: |
          export GO111MODULE=off
          go get github.com/golang/protobuf/protoc-gen-go
      - name: Get JS dependencies
        run: |
          cd api/pb/javascript && npm install
          cd ../../../net/api/pb/javascript && npm install
          npm install -g json
          npm install -g yaml-cli
      - name: Get Dart dependencies
        run: |
          cd api/pb/dart
          pub get
          pub global activate protoc_plugin
      - name: Protoc generate API
        run: |
          cd api/pb
          make clean && make
      - name: Protoc generate Service
        run: |
          cd net/api/pb
          make clean && make
      - name: Publish JS API
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
        run: |
          cd api/pb/javascript
          json -I -f package.json -e 'this.version=("${{ steps.latesttag.outputs.tag }}").replace("v", "")'
          npm publish --access=public
      - name: Publish JS Service
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
        run: |
          cd net/api/pb/javascript
          json -I -f package.json -e 'this.version=("${{ steps.latesttag.outputs.tag }}").replace("v", "")'
          npm publish --access=public
      - name: Publish Dart API
        env:
          PUB_CREDENTIALS: ${{ secrets.PUB_CREDENTIALS }}
        run: |
          sed -e "s/api\/pb\/dart\/lib//g" -i.replace .gitignore
          cd api/pb/dart
          yaml json read ../javascript/package.json > package.yml
          yaml set pubspec.yaml version $(yaml get package.yml version) > tmp.yml
          mv tmp.yml pubspec.yaml
          rm package.yml
          echo "$PUB_CREDENTIALS" > ~/.pub-cache/credentials.json
          pub publish -f
