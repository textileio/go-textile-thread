// Code generated by protoc-gen-go. DO NOT EDIT.
// source: threads.proto

package threads_pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ListenRequest_Filter_Action int32

const (
	ListenRequest_Filter_ALL    ListenRequest_Filter_Action = 0
	ListenRequest_Filter_CREATE ListenRequest_Filter_Action = 1
	ListenRequest_Filter_SAVE   ListenRequest_Filter_Action = 2
	ListenRequest_Filter_DELETE ListenRequest_Filter_Action = 3
)

var ListenRequest_Filter_Action_name = map[int32]string{
	0: "ALL",
	1: "CREATE",
	2: "SAVE",
	3: "DELETE",
}

var ListenRequest_Filter_Action_value = map[string]int32{
	"ALL":    0,
	"CREATE": 1,
	"SAVE":   2,
	"DELETE": 3,
}

func (x ListenRequest_Filter_Action) String() string {
	return proto.EnumName(ListenRequest_Filter_Action_name, int32(x))
}

func (ListenRequest_Filter_Action) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f2ba358bb2150022, []int{46, 0, 0}
}

type ListenReply_Action int32

const (
	ListenReply_CREATE ListenReply_Action = 0
	ListenReply_SAVE   ListenReply_Action = 1
	ListenReply_DELETE ListenReply_Action = 2
)

var ListenReply_Action_name = map[int32]string{
	0: "CREATE",
	1: "SAVE",
	2: "DELETE",
}

var ListenReply_Action_value = map[string]int32{
	"CREATE": 0,
	"SAVE":   1,
	"DELETE": 2,
}

func (x ListenReply_Action) String() string {
	return proto.EnumName(ListenReply_Action_name, int32(x))
}

func (ListenReply_Action) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f2ba358bb2150022, []int{47, 0}
}

type GetTokenRequest struct {
	// Types that are valid to be assigned to Payload:
	//	*GetTokenRequest_Key
	//	*GetTokenRequest_Signature
	Payload              isGetTokenRequest_Payload `protobuf_oneof:"payload"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *GetTokenRequest) Reset()         { *m = GetTokenRequest{} }
func (m *GetTokenRequest) String() string { return proto.CompactTextString(m) }
func (*GetTokenRequest) ProtoMessage()    {}
func (*GetTokenRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f2ba358bb2150022, []int{0}
}

func (m *GetTokenRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTokenRequest.Unmarshal(m, b)
}
func (m *GetTokenRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTokenRequest.Marshal(b, m, deterministic)
}
func (m *GetTokenRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTokenRequest.Merge(m, src)
}
func (m *GetTokenRequest) XXX_Size() int {
	return xxx_messageInfo_GetTokenRequest.Size(m)
}
func (m *GetTokenRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTokenRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTokenRequest proto.InternalMessageInfo

type isGetTokenRequest_Payload interface {
	isGetTokenRequest_Payload()
}

type GetTokenRequest_Key struct {
	Key string `protobuf:"bytes,1,opt,name=key,proto3,oneof"`
}

type GetTokenRequest_Signature struct {
	Signature []byte `protobuf:"bytes,2,opt,name=signature,proto3,oneof"`
}

func (*GetTokenRequest_Key) isGetTokenRequest_Payload() {}

func (*GetTokenRequest_Signature) isGetTokenRequest_Payload() {}

func (m *GetTokenRequest) GetPayload() isGetTokenRequest_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *GetTokenRequest) GetKey() string {
	if x, ok := m.GetPayload().(*GetTokenRequest_Key); ok {
		return x.Key
	}
	return ""
}

func (m *GetTokenRequest) GetSignature() []byte {
	if x, ok := m.GetPayload().(*GetTokenRequest_Signature); ok {
		return x.Signature
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*GetTokenRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*GetTokenRequest_Key)(nil),
		(*GetTokenRequest_Signature)(nil),
	}
}

type GetTokenReply struct {
	// Types that are valid to be assigned to Payload:
	//	*GetTokenReply_Challenge
	//	*GetTokenReply_Token
	Payload              isGetTokenReply_Payload `protobuf_oneof:"payload"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *GetTokenReply) Reset()         { *m = GetTokenReply{} }
func (m *GetTokenReply) String() string { return proto.CompactTextString(m) }
func (*GetTokenReply) ProtoMessage()    {}
func (*GetTokenReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_f2ba358bb2150022, []int{1}
}

func (m *GetTokenReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTokenReply.Unmarshal(m, b)
}
func (m *GetTokenReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTokenReply.Marshal(b, m, deterministic)
}
func (m *GetTokenReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTokenReply.Merge(m, src)
}
func (m *GetTokenReply) XXX_Size() int {
	return xxx_messageInfo_GetTokenReply.Size(m)
}
func (m *GetTokenReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTokenReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetTokenReply proto.InternalMessageInfo

type isGetTokenReply_Payload interface {
	isGetTokenReply_Payload()
}

type GetTokenReply_Challenge struct {
	Challenge []byte `protobuf:"bytes,1,opt,name=challenge,proto3,oneof"`
}

type GetTokenReply_Token struct {
	Token string `protobuf:"bytes,2,opt,name=token,proto3,oneof"`
}

func (*GetTokenReply_Challenge) isGetTokenReply_Payload() {}

func (*GetTokenReply_Token) isGetTokenReply_Payload() {}

func (m *GetTokenReply) GetPayload() isGetTokenReply_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *GetTokenReply) GetChallenge() []byte {
	if x, ok := m.GetPayload().(*GetTokenReply_Challenge); ok {
		return x.Challenge
	}
	return nil
}

func (m *GetTokenReply) GetToken() string {
	if x, ok := m.GetPayload().(*GetTokenReply_Token); ok {
		return x.Token
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*GetTokenReply) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*GetTokenReply_Challenge)(nil),
		(*GetTokenReply_Token)(nil),
	}
}

type NewDBRequest struct {
	DbID                 []byte              `protobuf:"bytes,1,opt,name=dbID,proto3" json:"dbID,omitempty"`
	Collections          []*CollectionConfig `protobuf:"bytes,2,rep,name=collections,proto3" json:"collections,omitempty"`
	Name                 string              `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *NewDBRequest) Reset()         { *m = NewDBRequest{} }
func (m *NewDBRequest) String() string { return proto.CompactTextString(m) }
func (*NewDBRequest) ProtoMessage()    {}
func (*NewDBRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f2ba358bb2150022, []int{2}
}

func (m *NewDBRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewDBRequest.Unmarshal(m, b)
}
func (m *NewDBRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewDBRequest.Marshal(b, m, deterministic)
}
func (m *NewDBRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewDBRequest.Merge(m, src)
}
func (m *NewDBRequest) XXX_Size() int {
	return xxx_messageInfo_NewDBRequest.Size(m)
}
func (m *NewDBRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NewDBRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NewDBRequest proto.InternalMessageInfo

func (m *NewDBRequest) GetDbID() []byte {
	if m != nil {
		return m.DbID
	}
	return nil
}

func (m *NewDBRequest) GetCollections() []*CollectionConfig {
	if m != nil {
		return m.Collections
	}
	return nil
}

func (m *NewDBRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type NewDBFromAddrRequest struct {
	Addr                 []byte              `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
	Key                  []byte              `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Collections          []*CollectionConfig `protobuf:"bytes,3,rep,name=collections,proto3" json:"collections,omitempty"`
	Name                 string              `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Block                bool                `protobuf:"varint,5,opt,name=block,proto3" json:"block,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *NewDBFromAddrRequest) Reset()         { *m = NewDBFromAddrRequest{} }
func (m *NewDBFromAddrRequest) String() string { return proto.CompactTextString(m) }
func (*NewDBFromAddrRequest) ProtoMessage()    {}
func (*NewDBFromAddrRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f2ba358bb2150022, []int{3}
}

func (m *NewDBFromAddrRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewDBFromAddrRequest.Unmarshal(m, b)
}
func (m *NewDBFromAddrRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewDBFromAddrRequest.Marshal(b, m, deterministic)
}
func (m *NewDBFromAddrRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewDBFromAddrRequest.Merge(m, src)
}
func (m *NewDBFromAddrRequest) XXX_Size() int {
	return xxx_messageInfo_NewDBFromAddrRequest.Size(m)
}
func (m *NewDBFromAddrRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NewDBFromAddrRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NewDBFromAddrRequest proto.InternalMessageInfo

func (m *NewDBFromAddrRequest) GetAddr() []byte {
	if m != nil {
		return m.Addr
	}
	return nil
}

func (m *NewDBFromAddrRequest) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *NewDBFromAddrRequest) GetCollections() []*CollectionConfig {
	if m != nil {
		return m.Collections
	}
	return nil
}

func (m *NewDBFromAddrRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *NewDBFromAddrRequest) GetBlock() bool {
	if m != nil {
		return m.Block
	}
	return false
}

type CollectionConfig struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Schema               []byte   `protobuf:"bytes,2,opt,name=schema,proto3" json:"schema,omitempty"`
	Indexes              []*Index `protobuf:"bytes,3,rep,name=indexes,proto3" json:"indexes,omitempty"`
	WriteValidator       string   `protobuf:"bytes,4,opt,name=writeValidator,proto3" json:"writeValidator,omitempty"`
	ReadFilter           string   `protobuf:"bytes,5,opt,name=readFilter,proto3" json:"readFilter,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CollectionConfig) Reset()         { *m = CollectionConfig{} }
func (m *CollectionConfig) String() string { return proto.CompactTextString(m) }
func (*CollectionConfig) ProtoMessage()    {}
func (*CollectionConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_f2ba358bb2150022, []int{4}
}

func (m *CollectionConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CollectionConfig.Unmarshal(m, b)
}
func (m *CollectionConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CollectionConfig.Marshal(b, m, deterministic)
}
func (m *CollectionConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CollectionConfig.Merge(m, src)
}
func (m *CollectionConfig) XXX_Size() int {
	return xxx_messageInfo_CollectionConfig.Size(m)
}
func (m *CollectionConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_CollectionConfig.DiscardUnknown(m)
}

var xxx_messageInfo_CollectionConfig proto.InternalMessageInfo

func (m *CollectionConfig) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CollectionConfig) GetSchema() []byte {
	if m != nil {
		return m.Schema
	}
	return nil
}

func (m *CollectionConfig) GetIndexes() []*Index {
	if m != nil {
		return m.Indexes
	}
	return nil
}

func (m *CollectionConfig) GetWriteValidator() string {
	if m != nil {
		return m.WriteValidator
	}
	return ""
}

func (m *CollectionConfig) GetReadFilter() string {
	if m != nil {
		return m.ReadFilter
	}
	return ""
}

type Index struct {
	Path                 string   `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Unique               bool     `protobuf:"varint,2,opt,name=unique,proto3" json:"unique,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Index) Reset()         { *m = Index{} }
func (m *Index) String() string { return proto.CompactTextString(m) }
func (*Index) ProtoMessage()    {}
func (*Index) Descriptor() ([]byte, []int) {
	return fileDescriptor_f2ba358bb2150022, []int{5}
}

func (m *Index) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Index.Unmarshal(m, b)
}
func (m *Index) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Index.Marshal(b, m, deterministic)
}
func (m *Index) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Index.Merge(m, src)
}
func (m *Index) XXX_Size() int {
	return xxx_messageInfo_Index.Size(m)
}
func (m *Index) XXX_DiscardUnknown() {
	xxx_messageInfo_Index.DiscardUnknown(m)
}

var xxx_messageInfo_Index proto.InternalMessageInfo

func (m *Index) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *Index) GetUnique() bool {
	if m != nil {
		return m.Unique
	}
	return false
}

type NewDBReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewDBReply) Reset()         { *m = NewDBReply{} }
func (m *NewDBReply) String() string { return proto.CompactTextString(m) }
func (*NewDBReply) ProtoMessage()    {}
func (*NewDBReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_f2ba358bb2150022, []int{6}
}

func (m *NewDBReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewDBReply.Unmarshal(m, b)
}
func (m *NewDBReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewDBReply.Marshal(b, m, deterministic)
}
func (m *NewDBReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewDBReply.Merge(m, src)
}
func (m *NewDBReply) XXX_Size() int {
	return xxx_messageInfo_NewDBReply.Size(m)
}
func (m *NewDBReply) XXX_DiscardUnknown() {
	xxx_messageInfo_NewDBReply.DiscardUnknown(m)
}

var xxx_messageInfo_NewDBReply proto.InternalMessageInfo

type ListDBsRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListDBsRequest) Reset()         { *m = ListDBsRequest{} }
func (m *ListDBsRequest) String() string { return proto.CompactTextString(m) }
func (*ListDBsRequest) ProtoMessage()    {}
func (*ListDBsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f2ba358bb2150022, []int{7}
}

func (m *ListDBsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListDBsRequest.Unmarshal(m, b)
}
func (m *ListDBsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListDBsRequest.Marshal(b, m, deterministic)
}
func (m *ListDBsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDBsRequest.Merge(m, src)
}
func (m *ListDBsRequest) XXX_Size() int {
	return xxx_messageInfo_ListDBsRequest.Size(m)
}
func (m *ListDBsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDBsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListDBsRequest proto.InternalMessageInfo

type ListDBsReply struct {
	Dbs                  []*ListDBsReply_DB `protobuf:"bytes,1,rep,name=dbs,proto3" json:"dbs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *ListDBsReply) Reset()         { *m = ListDBsReply{} }
func (m *ListDBsReply) String() string { return proto.CompactTextString(m) }
func (*ListDBsReply) ProtoMessage()    {}
func (*ListDBsReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_f2ba358bb2150022, []int{8}
}

func (m *ListDBsReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListDBsReply.Unmarshal(m, b)
}
func (m *ListDBsReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListDBsReply.Marshal(b, m, deterministic)
}
func (m *ListDBsReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDBsReply.Merge(m, src)
}
func (m *ListDBsReply) XXX_Size() int {
	return xxx_messageInfo_ListDBsReply.Size(m)
}
func (m *ListDBsReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDBsReply.DiscardUnknown(m)
}

var xxx_messageInfo_ListDBsReply proto.InternalMessageInfo

func (m *ListDBsReply) GetDbs() []*ListDBsReply_DB {
	if m != nil {
		return m.Dbs
	}
	return nil
}

type ListDBsReply_DB struct {
	DbID                 []byte          `protobuf:"bytes,1,opt,name=dbID,proto3" json:"dbID,omitempty"`
	Info                 *GetDBInfoReply `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ListDBsReply_DB) Reset()         { *m = ListDBsReply_DB{} }
func (m *ListDBsReply_DB) String() string { return proto.CompactTextString(m) }
func (*ListDBsReply_DB) ProtoMessage()    {}
func (*ListDBsReply_DB) Descriptor() ([]byte, []int) {
	return fileDescriptor_f2ba358bb2150022, []int{8, 0}
}

func (m *ListDBsReply_DB) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListDBsReply_DB.Unmarshal(m, b)
}
func (m *ListDBsReply_DB) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListDBsReply_DB.Marshal(b, m, deterministic)
}
func (m *ListDBsReply_DB) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDBsReply_DB.Merge(m, src)
}
func (m *ListDBsReply_DB) XXX_Size() int {
	return xxx_messageInfo_ListDBsReply_DB.Size(m)
}
func (m *ListDBsReply_DB) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDBsReply_DB.DiscardUnknown(m)
}

var xxx_messageInfo_ListDBsReply_DB proto.InternalMessageInfo

func (m *ListDBsReply_DB) GetDbID() []byte {
	if m != nil {
		return m.DbID
	}
	return nil
}

func (m *ListDBsReply_DB) GetInfo() *GetDBInfoReply {
	if m != nil {
		return m.Info
	}
	return nil
}

type GetDBInfoRequest struct {
	DbID                 []byte   `protobuf:"bytes,1,opt,name=dbID,proto3" json:"dbID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDBInfoRequest) Reset()         { *m = GetDBInfoRequest{} }
func (m *GetDBInfoRequest) String() string { return proto.CompactTextString(m) }
func (*GetDBInfoRequest) ProtoMessage()    {}
func (*GetDBInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f2ba358bb2150022, []int{9}
}

func (m *GetDBInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDBInfoRequest.Unmarshal(m, b)
}
func (m *GetDBInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDBInfoRequest.Marshal(b, m, deterministic)
}
func (m *GetDBInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDBInfoRequest.Merge(m, src)
}
func (m *GetDBInfoRequest) XXX_Size() int {
	return xxx_messageInfo_GetDBInfoRequest.Size(m)
}
func (m *GetDBInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDBInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetDBInfoRequest proto.InternalMessageInfo

func (m *GetDBInfoRequest) GetDbID() []byte {
	if m != nil {
		return m.DbID
	}
	return nil
}

type GetDBInfoReply struct {
	Addrs                [][]byte `protobuf:"bytes,1,rep,name=addrs,proto3" json:"addrs,omitempty"`
	Key                  []byte   `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDBInfoReply) Reset()         { *m = GetDBInfoReply{} }
func (m *GetDBInfoReply) String() string { return proto.CompactTextString(m) }
func (*GetDBInfoReply) ProtoMessage()    {}
func (*GetDBInfoReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_f2ba358bb2150022, []int{10}
}

func (m *GetDBInfoReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDBInfoReply.Unmarshal(m, b)
}
func (m *GetDBInfoReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDBInfoReply.Marshal(b, m, deterministic)
}
func (m *GetDBInfoReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDBInfoReply.Merge(m, src)
}
func (m *GetDBInfoReply) XXX_Size() int {
	return xxx_messageInfo_GetDBInfoReply.Size(m)
}
func (m *GetDBInfoReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDBInfoReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetDBInfoReply proto.InternalMessageInfo

func (m *GetDBInfoReply) GetAddrs() [][]byte {
	if m != nil {
		return m.Addrs
	}
	return nil
}

func (m *GetDBInfoReply) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *GetDBInfoReply) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type DeleteDBRequest struct {
	DbID                 []byte   `protobuf:"bytes,1,opt,name=dbID,proto3" json:"dbID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteDBRequest) Reset()         { *m = DeleteDBRequest{} }
func (m *DeleteDBRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteDBRequest) ProtoMessage()    {}
func (*DeleteDBRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f2ba358bb2150022, []int{11}
}

func (m *DeleteDBRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteDBRequest.Unmarshal(m, b)
}
func (m *DeleteDBRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteDBRequest.Marshal(b, m, deterministic)
}
func (m *DeleteDBRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteDBRequest.Merge(m, src)
}
func (m *DeleteDBRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteDBRequest.Size(m)
}
func (m *DeleteDBRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteDBRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteDBRequest proto.InternalMessageInfo

func (m *DeleteDBRequest) GetDbID() []byte {
	if m != nil {
		return m.DbID
	}
	return nil
}

type DeleteDBReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteDBReply) Reset()         { *m = DeleteDBReply{} }
func (m *DeleteDBReply) String() string { return proto.CompactTextString(m) }
func (*DeleteDBReply) ProtoMessage()    {}
func (*DeleteDBReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_f2ba358bb2150022, []int{12}
}

func (m *DeleteDBReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteDBReply.Unmarshal(m, b)
}
func (m *DeleteDBReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteDBReply.Marshal(b, m, deterministic)
}
func (m *DeleteDBReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteDBReply.Merge(m, src)
}
func (m *DeleteDBReply) XXX_Size() int {
	return xxx_messageInfo_DeleteDBReply.Size(m)
}
func (m *DeleteDBReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteDBReply.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteDBReply proto.InternalMessageInfo

type NewCollectionRequest struct {
	DbID                 []byte            `protobuf:"bytes,1,opt,name=dbID,proto3" json:"dbID,omitempty"`
	Config               *CollectionConfig `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *NewCollectionRequest) Reset()         { *m = NewCollectionRequest{} }
func (m *NewCollectionRequest) String() string { return proto.CompactTextString(m) }
func (*NewCollectionRequest) ProtoMessage()    {}
func (*NewCollectionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f2ba358bb2150022, []int{13}
}

func (m *NewCollectionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewCollectionRequest.Unmarshal(m, b)
}
func (m *NewCollectionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewCollectionRequest.Marshal(b, m, deterministic)
}
func (m *NewCollectionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewCollectionRequest.Merge(m, src)
}
func (m *NewCollectionRequest) XXX_Size() int {
	return xxx_messageInfo_NewCollectionRequest.Size(m)
}
func (m *NewCollectionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NewCollectionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NewCollectionRequest proto.InternalMessageInfo

func (m *NewCollectionRequest) GetDbID() []byte {
	if m != nil {
		return m.DbID
	}
	return nil
}

func (m *NewCollectionRequest) GetConfig() *CollectionConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

type NewCollectionReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewCollectionReply) Reset()         { *m = NewCollectionReply{} }
func (m *NewCollectionReply) String() string { return proto.CompactTextString(m) }
func (*NewCollectionReply) ProtoMessage()    {}
func (*NewCollectionReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_f2ba358bb2150022, []int{14}
}

func (m *NewCollectionReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewCollectionReply.Unmarshal(m, b)
}
func (m *NewCollectionReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewCollectionReply.Marshal(b, m, deterministic)
}
func (m *NewCollectionReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewCollectionReply.Merge(m, src)
}
func (m *NewCollectionReply) XXX_Size() int {
	return xxx_messageInfo_NewCollectionReply.Size(m)
}
func (m *NewCollectionReply) XXX_DiscardUnknown() {
	xxx_messageInfo_NewCollectionReply.DiscardUnknown(m)
}

var xxx_messageInfo_NewCollectionReply proto.InternalMessageInfo

type UpdateCollectionRequest struct {
	DbID                 []byte            `protobuf:"bytes,1,opt,name=dbID,proto3" json:"dbID,omitempty"`
	Config               *CollectionConfig `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *UpdateCollectionRequest) Reset()         { *m = UpdateCollectionRequest{} }
func (m *UpdateCollectionRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateCollectionRequest) ProtoMessage()    {}
func (*UpdateCollectionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f2ba358bb2150022, []int{15}
}

func (m *UpdateCollectionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateCollectionRequest.Unmarshal(m, b)
}
func (m *UpdateCollectionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateCollectionRequest.Marshal(b, m, deterministic)
}
func (m *UpdateCollectionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateCollectionRequest.Merge(m, src)
}
func (m *UpdateCollectionRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateCollectionRequest.Size(m)
}
func (m *UpdateCollectionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateCollectionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateCollectionRequest proto.InternalMessageInfo

func (m *UpdateCollectionRequest) GetDbID() []byte {
	if m != nil {
		return m.DbID
	}
	return nil
}

func (m *UpdateCollectionRequest) GetConfig() *CollectionConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

type UpdateCollectionReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateCollectionReply) Reset()         { *m = UpdateCollectionReply{} }
func (m *UpdateCollectionReply) String() string { return proto.CompactTextString(m) }
func (*UpdateCollectionReply) ProtoMessage()    {}
func (*UpdateCollectionReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_f2ba358bb2150022, []int{16}
}

func (m *UpdateCollectionReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateCollectionReply.Unmarshal(m, b)
}
func (m *UpdateCollectionReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateCollectionReply.Marshal(b, m, deterministic)
}
func (m *UpdateCollectionReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateCollectionReply.Merge(m, src)
}
func (m *UpdateCollectionReply) XXX_Size() int {
	return xxx_messageInfo_UpdateCollectionReply.Size(m)
}
func (m *UpdateCollectionReply) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateCollectionReply.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateCollectionReply proto.InternalMessageInfo

type DeleteCollectionRequest struct {
	DbID                 []byte   `protobuf:"bytes,1,opt,name=dbID,proto3" json:"dbID,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteCollectionRequest) Reset()         { *m = DeleteCollectionRequest{} }
func (m *DeleteCollectionRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteCollectionRequest) ProtoMessage()    {}
func (*DeleteCollectionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f2ba358bb2150022, []int{17}
}

func (m *DeleteCollectionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteCollectionRequest.Unmarshal(m, b)
}
func (m *DeleteCollectionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteCollectionRequest.Marshal(b, m, deterministic)
}
func (m *DeleteCollectionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteCollectionRequest.Merge(m, src)
}
func (m *DeleteCollectionRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteCollectionRequest.Size(m)
}
func (m *DeleteCollectionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteCollectionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteCollectionRequest proto.InternalMessageInfo

func (m *DeleteCollectionRequest) GetDbID() []byte {
	if m != nil {
		return m.DbID
	}
	return nil
}

func (m *DeleteCollectionRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type DeleteCollectionReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteCollectionReply) Reset()         { *m = DeleteCollectionReply{} }
func (m *DeleteCollectionReply) String() string { return proto.CompactTextString(m) }
func (*DeleteCollectionReply) ProtoMessage()    {}
func (*DeleteCollectionReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_f2ba358bb2150022, []int{18}
}

func (m *DeleteCollectionReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteCollectionReply.Unmarshal(m, b)
}
func (m *DeleteCollectionReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteCollectionReply.Marshal(b, m, deterministic)
}
func (m *DeleteCollectionReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteCollectionReply.Merge(m, src)
}
func (m *DeleteCollectionReply) XXX_Size() int {
	return xxx_messageInfo_DeleteCollectionReply.Size(m)
}
func (m *DeleteCollectionReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteCollectionReply.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteCollectionReply proto.InternalMessageInfo

type GetCollectionInfoRequest struct {
	DbID                 []byte   `protobuf:"bytes,1,opt,name=dbID,proto3" json:"dbID,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCollectionInfoRequest) Reset()         { *m = GetCollectionInfoRequest{} }
func (m *GetCollectionInfoRequest) String() string { return proto.CompactTextString(m) }
func (*GetCollectionInfoRequest) ProtoMessage()    {}
func (*GetCollectionInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f2ba358bb2150022, []int{19}
}

func (m *GetCollectionInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCollectionInfoRequest.Unmarshal(m, b)
}
func (m *GetCollectionInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCollectionInfoRequest.Marshal(b, m, deterministic)
}
func (m *GetCollectionInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCollectionInfoRequest.Merge(m, src)
}
func (m *GetCollectionInfoRequest) XXX_Size() int {
	return xxx_messageInfo_GetCollectionInfoRequest.Size(m)
}
func (m *GetCollectionInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCollectionInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetCollectionInfoRequest proto.InternalMessageInfo

func (m *GetCollectionInfoRequest) GetDbID() []byte {
	if m != nil {
		return m.DbID
	}
	return nil
}

func (m *GetCollectionInfoRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type GetCollectionInfoReply struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Schema               []byte   `protobuf:"bytes,2,opt,name=schema,proto3" json:"schema,omitempty"`
	Indexes              []*Index `protobuf:"bytes,3,rep,name=indexes,proto3" json:"indexes,omitempty"`
	WriteValidator       string   `protobuf:"bytes,4,opt,name=writeValidator,proto3" json:"writeValidator,omitempty"`
	ReadFilter           string   `protobuf:"bytes,5,opt,name=readFilter,proto3" json:"readFilter,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCollectionInfoReply) Reset()         { *m = GetCollectionInfoReply{} }
func (m *GetCollectionInfoReply) String() string { return proto.CompactTextString(m) }
func (*GetCollectionInfoReply) ProtoMessage()    {}
func (*GetCollectionInfoReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_f2ba358bb2150022, []int{20}
}

func (m *GetCollectionInfoReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCollectionInfoReply.Unmarshal(m, b)
}
func (m *GetCollectionInfoReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCollectionInfoReply.Marshal(b, m, deterministic)
}
func (m *GetCollectionInfoReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCollectionInfoReply.Merge(m, src)
}
func (m *GetCollectionInfoReply) XXX_Size() int {
	return xxx_messageInfo_GetCollectionInfoReply.Size(m)
}
func (m *GetCollectionInfoReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCollectionInfoReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetCollectionInfoReply proto.InternalMessageInfo

func (m *GetCollectionInfoReply) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GetCollectionInfoReply) GetSchema() []byte {
	if m != nil {
		return m.Schema
	}
	return nil
}

func (m *GetCollectionInfoReply) GetIndexes() []*Index {
	if m != nil {
		return m.Indexes
	}
	return nil
}

func (m *GetCollectionInfoReply) GetWriteValidator() string {
	if m != nil {
		return m.WriteValidator
	}
	return ""
}

func (m *GetCollectionInfoReply) GetReadFilter() string {
	if m != nil {
		return m.ReadFilter
	}
	return ""
}

type GetCollectionIndexesRequest struct {
	DbID                 []byte   `protobuf:"bytes,1,opt,name=dbID,proto3" json:"dbID,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCollectionIndexesRequest) Reset()         { *m = GetCollectionIndexesRequest{} }
func (m *GetCollectionIndexesRequest) String() string { return proto.CompactTextString(m) }
func (*GetCollectionIndexesRequest) ProtoMessage()    {}
func (*GetCollectionIndexesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f2ba358bb2150022, []int{21}
}

func (m *GetCollectionIndexesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCollectionIndexesRequest.Unmarshal(m, b)
}
func (m *GetCollectionIndexesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCollectionIndexesRequest.Marshal(b, m, deterministic)
}
func (m *GetCollectionIndexesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCollectionIndexesRequest.Merge(m, src)
}
func (m *GetCollectionIndexesRequest) XXX_Size() int {
	return xxx_messageInfo_GetCollectionIndexesRequest.Size(m)
}
func (m *GetCollectionIndexesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCollectionIndexesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetCollectionIndexesRequest proto.InternalMessageInfo

func (m *GetCollectionIndexesRequest) GetDbID() []byte {
	if m != nil {
		return m.DbID
	}
	return nil
}

func (m *GetCollectionIndexesRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type GetCollectionIndexesReply struct {
	Indexes              []*Index `protobuf:"bytes,1,rep,name=indexes,proto3" json:"indexes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCollectionIndexesReply) Reset()         { *m = GetCollectionIndexesReply{} }
func (m *GetCollectionIndexesReply) String() string { return proto.CompactTextString(m) }
func (*GetCollectionIndexesReply) ProtoMessage()    {}
func (*GetCollectionIndexesReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_f2ba358bb2150022, []int{22}
}

func (m *GetCollectionIndexesReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCollectionIndexesReply.Unmarshal(m, b)
}
func (m *GetCollectionIndexesReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCollectionIndexesReply.Marshal(b, m, deterministic)
}
func (m *GetCollectionIndexesReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCollectionIndexesReply.Merge(m, src)
}
func (m *GetCollectionIndexesReply) XXX_Size() int {
	return xxx_messageInfo_GetCollectionIndexesReply.Size(m)
}
func (m *GetCollectionIndexesReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCollectionIndexesReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetCollectionIndexesReply proto.InternalMessageInfo

func (m *GetCollectionIndexesReply) GetIndexes() []*Index {
	if m != nil {
		return m.Indexes
	}
	return nil
}

type ListCollectionsRequest struct {
	DbID                 []byte   `protobuf:"bytes,1,opt,name=dbID,proto3" json:"dbID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListCollectionsRequest) Reset()         { *m = ListCollectionsRequest{} }
func (m *ListCollectionsRequest) String() string { return proto.CompactTextString(m) }
func (*ListCollectionsRequest) ProtoMessage()    {}
func (*ListCollectionsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f2ba358bb2150022, []int{23}
}

func (m *ListCollectionsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListCollectionsRequest.Unmarshal(m, b)
}
func (m *ListCollectionsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListCollectionsRequest.Marshal(b, m, deterministic)
}
func (m *ListCollectionsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListCollectionsRequest.Merge(m, src)
}
func (m *ListCollectionsRequest) XXX_Size() int {
	return xxx_messageInfo_ListCollectionsRequest.Size(m)
}
func (m *ListCollectionsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListCollectionsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListCollectionsRequest proto.InternalMessageInfo

func (m *ListCollectionsRequest) GetDbID() []byte {
	if m != nil {
		return m.DbID
	}
	return nil
}

type ListCollectionsReply struct {
	Collections          []*GetCollectionInfoReply `protobuf:"bytes,1,rep,name=collections,proto3" json:"collections,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *ListCollectionsReply) Reset()         { *m = ListCollectionsReply{} }
func (m *ListCollectionsReply) String() string { return proto.CompactTextString(m) }
func (*ListCollectionsReply) ProtoMessage()    {}
func (*ListCollectionsReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_f2ba358bb2150022, []int{24}
}

func (m *ListCollectionsReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListCollectionsReply.Unmarshal(m, b)
}
func (m *ListCollectionsReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListCollectionsReply.Marshal(b, m, deterministic)
}
func (m *ListCollectionsReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListCollectionsReply.Merge(m, src)
}
func (m *ListCollectionsReply) XXX_Size() int {
	return xxx_messageInfo_ListCollectionsReply.Size(m)
}
func (m *ListCollectionsReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ListCollectionsReply.DiscardUnknown(m)
}

var xxx_messageInfo_ListCollectionsReply proto.InternalMessageInfo

func (m *ListCollectionsReply) GetCollections() []*GetCollectionInfoReply {
	if m != nil {
		return m.Collections
	}
	return nil
}

type CreateRequest struct {
	DbID                 []byte   `protobuf:"bytes,1,opt,name=dbID,proto3" json:"dbID,omitempty"`
	CollectionName       string   `protobuf:"bytes,2,opt,name=collectionName,proto3" json:"collectionName,omitempty"`
	Instances            [][]byte `protobuf:"bytes,3,rep,name=instances,proto3" json:"instances,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateRequest) Reset()         { *m = CreateRequest{} }
func (m *CreateRequest) String() string { return proto.CompactTextString(m) }
func (*CreateRequest) ProtoMessage()    {}
func (*CreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f2ba358bb2150022, []int{25}
}

func (m *CreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRequest.Unmarshal(m, b)
}
func (m *CreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRequest.Marshal(b, m, deterministic)
}
func (m *CreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRequest.Merge(m, src)
}
func (m *CreateRequest) XXX_Size() int {
	return xxx_messageInfo_CreateRequest.Size(m)
}
func (m *CreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRequest proto.InternalMessageInfo

func (m *CreateRequest) GetDbID() []byte {
	if m != nil {
		return m.DbID
	}
	return nil
}

func (m *CreateRequest) GetCollectionName() string {
	if m != nil {
		return m.CollectionName
	}
	return ""
}

func (m *CreateRequest) GetInstances() [][]byte {
	if m != nil {
		return m.Instances
	}
	return nil
}

type CreateReply struct {
	InstanceIDs          []string `protobuf:"bytes,1,rep,name=instanceIDs,proto3" json:"instanceIDs,omitempty"`
	TransactionError     string   `protobuf:"bytes,2,opt,name=transactionError,proto3" json:"transactionError,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateReply) Reset()         { *m = CreateReply{} }
func (m *CreateReply) String() string { return proto.CompactTextString(m) }
func (*CreateReply) ProtoMessage()    {}
func (*CreateReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_f2ba358bb2150022, []int{26}
}

func (m *CreateReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateReply.Unmarshal(m, b)
}
func (m *CreateReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateReply.Marshal(b, m, deterministic)
}
func (m *CreateReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateReply.Merge(m, src)
}
func (m *CreateReply) XXX_Size() int {
	return xxx_messageInfo_CreateReply.Size(m)
}
func (m *CreateReply) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateReply.DiscardUnknown(m)
}

var xxx_messageInfo_CreateReply proto.InternalMessageInfo

func (m *CreateReply) GetInstanceIDs() []string {
	if m != nil {
		return m.InstanceIDs
	}
	return nil
}

func (m *CreateReply) GetTransactionError() string {
	if m != nil {
		return m.TransactionError
	}
	return ""
}

type VerifyRequest struct {
	DbID                 []byte   `protobuf:"bytes,1,opt,name=dbID,proto3" json:"dbID,omitempty"`
	CollectionName       string   `protobuf:"bytes,2,opt,name=collectionName,proto3" json:"collectionName,omitempty"`
	Instances            [][]byte `protobuf:"bytes,3,rep,name=instances,proto3" json:"instances,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VerifyRequest) Reset()         { *m = VerifyRequest{} }
func (m *VerifyRequest) String() string { return proto.CompactTextString(m) }
func (*VerifyRequest) ProtoMessage()    {}
func (*VerifyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f2ba358bb2150022, []int{27}
}

func (m *VerifyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VerifyRequest.Unmarshal(m, b)
}
func (m *VerifyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VerifyRequest.Marshal(b, m, deterministic)
}
func (m *VerifyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VerifyRequest.Merge(m, src)
}
func (m *VerifyRequest) XXX_Size() int {
	return xxx_messageInfo_VerifyRequest.Size(m)
}
func (m *VerifyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VerifyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VerifyRequest proto.InternalMessageInfo

func (m *VerifyRequest) GetDbID() []byte {
	if m != nil {
		return m.DbID
	}
	return nil
}

func (m *VerifyRequest) GetCollectionName() string {
	if m != nil {
		return m.CollectionName
	}
	return ""
}

func (m *VerifyRequest) GetInstances() [][]byte {
	if m != nil {
		return m.Instances
	}
	return nil
}

type VerifyReply struct {
	TransactionError     string   `protobuf:"bytes,1,opt,name=transactionError,proto3" json:"transactionError,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VerifyReply) Reset()         { *m = VerifyReply{} }
func (m *VerifyReply) String() string { return proto.CompactTextString(m) }
func (*VerifyReply) ProtoMessage()    {}
func (*VerifyReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_f2ba358bb2150022, []int{28}
}

func (m *VerifyReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VerifyReply.Unmarshal(m, b)
}
func (m *VerifyReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VerifyReply.Marshal(b, m, deterministic)
}
func (m *VerifyReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VerifyReply.Merge(m, src)
}
func (m *VerifyReply) XXX_Size() int {
	return xxx_messageInfo_VerifyReply.Size(m)
}
func (m *VerifyReply) XXX_DiscardUnknown() {
	xxx_messageInfo_VerifyReply.DiscardUnknown(m)
}

var xxx_messageInfo_VerifyReply proto.InternalMessageInfo

func (m *VerifyReply) GetTransactionError() string {
	if m != nil {
		return m.TransactionError
	}
	return ""
}

type SaveRequest struct {
	DbID                 []byte   `protobuf:"bytes,1,opt,name=dbID,proto3" json:"dbID,omitempty"`
	CollectionName       string   `protobuf:"bytes,2,opt,name=collectionName,proto3" json:"collectionName,omitempty"`
	Instances            [][]byte `protobuf:"bytes,3,rep,name=instances,proto3" json:"instances,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SaveRequest) Reset()         { *m = SaveRequest{} }
func (m *SaveRequest) String() string { return proto.CompactTextString(m) }
func (*SaveRequest) ProtoMessage()    {}
func (*SaveRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f2ba358bb2150022, []int{29}
}

func (m *SaveRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SaveRequest.Unmarshal(m, b)
}
func (m *SaveRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SaveRequest.Marshal(b, m, deterministic)
}
func (m *SaveRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SaveRequest.Merge(m, src)
}
func (m *SaveRequest) XXX_Size() int {
	return xxx_messageInfo_SaveRequest.Size(m)
}
func (m *SaveRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SaveRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SaveRequest proto.InternalMessageInfo

func (m *SaveRequest) GetDbID() []byte {
	if m != nil {
		return m.DbID
	}
	return nil
}

func (m *SaveRequest) GetCollectionName() string {
	if m != nil {
		return m.CollectionName
	}
	return ""
}

func (m *SaveRequest) GetInstances() [][]byte {
	if m != nil {
		return m.Instances
	}
	return nil
}

type SaveReply struct {
	TransactionError     string   `protobuf:"bytes,1,opt,name=transactionError,proto3" json:"transactionError,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SaveReply) Reset()         { *m = SaveReply{} }
func (m *SaveReply) String() string { return proto.CompactTextString(m) }
func (*SaveReply) ProtoMessage()    {}
func (*SaveReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_f2ba358bb2150022, []int{30}
}

func (m *SaveReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SaveReply.Unmarshal(m, b)
}
func (m *SaveReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SaveReply.Marshal(b, m, deterministic)
}
func (m *SaveReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SaveReply.Merge(m, src)
}
func (m *SaveReply) XXX_Size() int {
	return xxx_messageInfo_SaveReply.Size(m)
}
func (m *SaveReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SaveReply.DiscardUnknown(m)
}

var xxx_messageInfo_SaveReply proto.InternalMessageInfo

func (m *SaveReply) GetTransactionError() string {
	if m != nil {
		return m.TransactionError
	}
	return ""
}

type DeleteRequest struct {
	DbID                 []byte   `protobuf:"bytes,1,opt,name=dbID,proto3" json:"dbID,omitempty"`
	CollectionName       string   `protobuf:"bytes,2,opt,name=collectionName,proto3" json:"collectionName,omitempty"`
	InstanceIDs          []string `protobuf:"bytes,3,rep,name=instanceIDs,proto3" json:"instanceIDs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteRequest) Reset()         { *m = DeleteRequest{} }
func (m *DeleteRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteRequest) ProtoMessage()    {}
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f2ba358bb2150022, []int{31}
}

func (m *DeleteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteRequest.Unmarshal(m, b)
}
func (m *DeleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteRequest.Marshal(b, m, deterministic)
}
func (m *DeleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteRequest.Merge(m, src)
}
func (m *DeleteRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteRequest.Size(m)
}
func (m *DeleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteRequest proto.InternalMessageInfo

func (m *DeleteRequest) GetDbID() []byte {
	if m != nil {
		return m.DbID
	}
	return nil
}

func (m *DeleteRequest) GetCollectionName() string {
	if m != nil {
		return m.CollectionName
	}
	return ""
}

func (m *DeleteRequest) GetInstanceIDs() []string {
	if m != nil {
		return m.InstanceIDs
	}
	return nil
}

type DeleteReply struct {
	TransactionError     string   `protobuf:"bytes,1,opt,name=transactionError,proto3" json:"transactionError,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteReply) Reset()         { *m = DeleteReply{} }
func (m *DeleteReply) String() string { return proto.CompactTextString(m) }
func (*DeleteReply) ProtoMessage()    {}
func (*DeleteReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_f2ba358bb2150022, []int{32}
}

func (m *DeleteReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteReply.Unmarshal(m, b)
}
func (m *DeleteReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteReply.Marshal(b, m, deterministic)
}
func (m *DeleteReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteReply.Merge(m, src)
}
func (m *DeleteReply) XXX_Size() int {
	return xxx_messageInfo_DeleteReply.Size(m)
}
func (m *DeleteReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteReply.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteReply proto.InternalMessageInfo

func (m *DeleteReply) GetTransactionError() string {
	if m != nil {
		return m.TransactionError
	}
	return ""
}

type HasRequest struct {
	DbID                 []byte   `protobuf:"bytes,1,opt,name=dbID,proto3" json:"dbID,omitempty"`
	CollectionName       string   `protobuf:"bytes,2,opt,name=collectionName,proto3" json:"collectionName,omitempty"`
	InstanceIDs          []string `protobuf:"bytes,3,rep,name=instanceIDs,proto3" json:"instanceIDs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HasRequest) Reset()         { *m = HasRequest{} }
func (m *HasRequest) String() string { return proto.CompactTextString(m) }
func (*HasRequest) ProtoMessage()    {}
func (*HasRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f2ba358bb2150022, []int{33}
}

func (m *HasRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HasRequest.Unmarshal(m, b)
}
func (m *HasRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HasRequest.Marshal(b, m, deterministic)
}
func (m *HasRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HasRequest.Merge(m, src)
}
func (m *HasRequest) XXX_Size() int {
	return xxx_messageInfo_HasRequest.Size(m)
}
func (m *HasRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HasRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HasRequest proto.InternalMessageInfo

func (m *HasRequest) GetDbID() []byte {
	if m != nil {
		return m.DbID
	}
	return nil
}

func (m *HasRequest) GetCollectionName() string {
	if m != nil {
		return m.CollectionName
	}
	return ""
}

func (m *HasRequest) GetInstanceIDs() []string {
	if m != nil {
		return m.InstanceIDs
	}
	return nil
}

type HasReply struct {
	Exists               bool     `protobuf:"varint,1,opt,name=exists,proto3" json:"exists,omitempty"`
	TransactionError     string   `protobuf:"bytes,2,opt,name=transactionError,proto3" json:"transactionError,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HasReply) Reset()         { *m = HasReply{} }
func (m *HasReply) String() string { return proto.CompactTextString(m) }
func (*HasReply) ProtoMessage()    {}
func (*HasReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_f2ba358bb2150022, []int{34}
}

func (m *HasReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HasReply.Unmarshal(m, b)
}
func (m *HasReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HasReply.Marshal(b, m, deterministic)
}
func (m *HasReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HasReply.Merge(m, src)
}
func (m *HasReply) XXX_Size() int {
	return xxx_messageInfo_HasReply.Size(m)
}
func (m *HasReply) XXX_DiscardUnknown() {
	xxx_messageInfo_HasReply.DiscardUnknown(m)
}

var xxx_messageInfo_HasReply proto.InternalMessageInfo

func (m *HasReply) GetExists() bool {
	if m != nil {
		return m.Exists
	}
	return false
}

func (m *HasReply) GetTransactionError() string {
	if m != nil {
		return m.TransactionError
	}
	return ""
}

type FindRequest struct {
	DbID                 []byte   `protobuf:"bytes,1,opt,name=dbID,proto3" json:"dbID,omitempty"`
	CollectionName       string   `protobuf:"bytes,2,opt,name=collectionName,proto3" json:"collectionName,omitempty"`
	QueryJSON            []byte   `protobuf:"bytes,3,opt,name=queryJSON,proto3" json:"queryJSON,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindRequest) Reset()         { *m = FindRequest{} }
func (m *FindRequest) String() string { return proto.CompactTextString(m) }
func (*FindRequest) ProtoMessage()    {}
func (*FindRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f2ba358bb2150022, []int{35}
}

func (m *FindRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindRequest.Unmarshal(m, b)
}
func (m *FindRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindRequest.Marshal(b, m, deterministic)
}
func (m *FindRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindRequest.Merge(m, src)
}
func (m *FindRequest) XXX_Size() int {
	return xxx_messageInfo_FindRequest.Size(m)
}
func (m *FindRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FindRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FindRequest proto.InternalMessageInfo

func (m *FindRequest) GetDbID() []byte {
	if m != nil {
		return m.DbID
	}
	return nil
}

func (m *FindRequest) GetCollectionName() string {
	if m != nil {
		return m.CollectionName
	}
	return ""
}

func (m *FindRequest) GetQueryJSON() []byte {
	if m != nil {
		return m.QueryJSON
	}
	return nil
}

type FindReply struct {
	Instances            [][]byte `protobuf:"bytes,1,rep,name=instances,proto3" json:"instances,omitempty"`
	TransactionError     string   `protobuf:"bytes,2,opt,name=transactionError,proto3" json:"transactionError,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindReply) Reset()         { *m = FindReply{} }
func (m *FindReply) String() string { return proto.CompactTextString(m) }
func (*FindReply) ProtoMessage()    {}
func (*FindReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_f2ba358bb2150022, []int{36}
}

func (m *FindReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindReply.Unmarshal(m, b)
}
func (m *FindReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindReply.Marshal(b, m, deterministic)
}
func (m *FindReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindReply.Merge(m, src)
}
func (m *FindReply) XXX_Size() int {
	return xxx_messageInfo_FindReply.Size(m)
}
func (m *FindReply) XXX_DiscardUnknown() {
	xxx_messageInfo_FindReply.DiscardUnknown(m)
}

var xxx_messageInfo_FindReply proto.InternalMessageInfo

func (m *FindReply) GetInstances() [][]byte {
	if m != nil {
		return m.Instances
	}
	return nil
}

func (m *FindReply) GetTransactionError() string {
	if m != nil {
		return m.TransactionError
	}
	return ""
}

type FindByIDRequest struct {
	DbID                 []byte   `protobuf:"bytes,1,opt,name=dbID,proto3" json:"dbID,omitempty"`
	CollectionName       string   `protobuf:"bytes,2,opt,name=collectionName,proto3" json:"collectionName,omitempty"`
	InstanceID           string   `protobuf:"bytes,3,opt,name=instanceID,proto3" json:"instanceID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindByIDRequest) Reset()         { *m = FindByIDRequest{} }
func (m *FindByIDRequest) String() string { return proto.CompactTextString(m) }
func (*FindByIDRequest) ProtoMessage()    {}
func (*FindByIDRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f2ba358bb2150022, []int{37}
}

func (m *FindByIDRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindByIDRequest.Unmarshal(m, b)
}
func (m *FindByIDRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindByIDRequest.Marshal(b, m, deterministic)
}
func (m *FindByIDRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindByIDRequest.Merge(m, src)
}
func (m *FindByIDRequest) XXX_Size() int {
	return xxx_messageInfo_FindByIDRequest.Size(m)
}
func (m *FindByIDRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FindByIDRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FindByIDRequest proto.InternalMessageInfo

func (m *FindByIDRequest) GetDbID() []byte {
	if m != nil {
		return m.DbID
	}
	return nil
}

func (m *FindByIDRequest) GetCollectionName() string {
	if m != nil {
		return m.CollectionName
	}
	return ""
}

func (m *FindByIDRequest) GetInstanceID() string {
	if m != nil {
		return m.InstanceID
	}
	return ""
}

type FindByIDReply struct {
	Instance             []byte   `protobuf:"bytes,1,opt,name=instance,proto3" json:"instance,omitempty"`
	TransactionError     string   `protobuf:"bytes,2,opt,name=transactionError,proto3" json:"transactionError,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindByIDReply) Reset()         { *m = FindByIDReply{} }
func (m *FindByIDReply) String() string { return proto.CompactTextString(m) }
func (*FindByIDReply) ProtoMessage()    {}
func (*FindByIDReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_f2ba358bb2150022, []int{38}
}

func (m *FindByIDReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindByIDReply.Unmarshal(m, b)
}
func (m *FindByIDReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindByIDReply.Marshal(b, m, deterministic)
}
func (m *FindByIDReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindByIDReply.Merge(m, src)
}
func (m *FindByIDReply) XXX_Size() int {
	return xxx_messageInfo_FindByIDReply.Size(m)
}
func (m *FindByIDReply) XXX_DiscardUnknown() {
	xxx_messageInfo_FindByIDReply.DiscardUnknown(m)
}

var xxx_messageInfo_FindByIDReply proto.InternalMessageInfo

func (m *FindByIDReply) GetInstance() []byte {
	if m != nil {
		return m.Instance
	}
	return nil
}

func (m *FindByIDReply) GetTransactionError() string {
	if m != nil {
		return m.TransactionError
	}
	return ""
}

type DiscardRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DiscardRequest) Reset()         { *m = DiscardRequest{} }
func (m *DiscardRequest) String() string { return proto.CompactTextString(m) }
func (*DiscardRequest) ProtoMessage()    {}
func (*DiscardRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f2ba358bb2150022, []int{39}
}

func (m *DiscardRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiscardRequest.Unmarshal(m, b)
}
func (m *DiscardRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiscardRequest.Marshal(b, m, deterministic)
}
func (m *DiscardRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiscardRequest.Merge(m, src)
}
func (m *DiscardRequest) XXX_Size() int {
	return xxx_messageInfo_DiscardRequest.Size(m)
}
func (m *DiscardRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DiscardRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DiscardRequest proto.InternalMessageInfo

type DiscardReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DiscardReply) Reset()         { *m = DiscardReply{} }
func (m *DiscardReply) String() string { return proto.CompactTextString(m) }
func (*DiscardReply) ProtoMessage()    {}
func (*DiscardReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_f2ba358bb2150022, []int{40}
}

func (m *DiscardReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiscardReply.Unmarshal(m, b)
}
func (m *DiscardReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiscardReply.Marshal(b, m, deterministic)
}
func (m *DiscardReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiscardReply.Merge(m, src)
}
func (m *DiscardReply) XXX_Size() int {
	return xxx_messageInfo_DiscardReply.Size(m)
}
func (m *DiscardReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DiscardReply.DiscardUnknown(m)
}

var xxx_messageInfo_DiscardReply proto.InternalMessageInfo

type StartTransactionRequest struct {
	DbID                 []byte   `protobuf:"bytes,1,opt,name=dbID,proto3" json:"dbID,omitempty"`
	CollectionName       string   `protobuf:"bytes,2,opt,name=collectionName,proto3" json:"collectionName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StartTransactionRequest) Reset()         { *m = StartTransactionRequest{} }
func (m *StartTransactionRequest) String() string { return proto.CompactTextString(m) }
func (*StartTransactionRequest) ProtoMessage()    {}
func (*StartTransactionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f2ba358bb2150022, []int{41}
}

func (m *StartTransactionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartTransactionRequest.Unmarshal(m, b)
}
func (m *StartTransactionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartTransactionRequest.Marshal(b, m, deterministic)
}
func (m *StartTransactionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartTransactionRequest.Merge(m, src)
}
func (m *StartTransactionRequest) XXX_Size() int {
	return xxx_messageInfo_StartTransactionRequest.Size(m)
}
func (m *StartTransactionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StartTransactionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StartTransactionRequest proto.InternalMessageInfo

func (m *StartTransactionRequest) GetDbID() []byte {
	if m != nil {
		return m.DbID
	}
	return nil
}

func (m *StartTransactionRequest) GetCollectionName() string {
	if m != nil {
		return m.CollectionName
	}
	return ""
}

type ReadTransactionRequest struct {
	// Types that are valid to be assigned to Option:
	//	*ReadTransactionRequest_StartTransactionRequest
	//	*ReadTransactionRequest_HasRequest
	//	*ReadTransactionRequest_FindRequest
	//	*ReadTransactionRequest_FindByIDRequest
	Option               isReadTransactionRequest_Option `protobuf_oneof:"option"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *ReadTransactionRequest) Reset()         { *m = ReadTransactionRequest{} }
func (m *ReadTransactionRequest) String() string { return proto.CompactTextString(m) }
func (*ReadTransactionRequest) ProtoMessage()    {}
func (*ReadTransactionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f2ba358bb2150022, []int{42}
}

func (m *ReadTransactionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadTransactionRequest.Unmarshal(m, b)
}
func (m *ReadTransactionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadTransactionRequest.Marshal(b, m, deterministic)
}
func (m *ReadTransactionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadTransactionRequest.Merge(m, src)
}
func (m *ReadTransactionRequest) XXX_Size() int {
	return xxx_messageInfo_ReadTransactionRequest.Size(m)
}
func (m *ReadTransactionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadTransactionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReadTransactionRequest proto.InternalMessageInfo

type isReadTransactionRequest_Option interface {
	isReadTransactionRequest_Option()
}

type ReadTransactionRequest_StartTransactionRequest struct {
	StartTransactionRequest *StartTransactionRequest `protobuf:"bytes,1,opt,name=startTransactionRequest,proto3,oneof"`
}

type ReadTransactionRequest_HasRequest struct {
	HasRequest *HasRequest `protobuf:"bytes,2,opt,name=hasRequest,proto3,oneof"`
}

type ReadTransactionRequest_FindRequest struct {
	FindRequest *FindRequest `protobuf:"bytes,3,opt,name=findRequest,proto3,oneof"`
}

type ReadTransactionRequest_FindByIDRequest struct {
	FindByIDRequest *FindByIDRequest `protobuf:"bytes,4,opt,name=findByIDRequest,proto3,oneof"`
}

func (*ReadTransactionRequest_StartTransactionRequest) isReadTransactionRequest_Option() {}

func (*ReadTransactionRequest_HasRequest) isReadTransactionRequest_Option() {}

func (*ReadTransactionRequest_FindRequest) isReadTransactionRequest_Option() {}

func (*ReadTransactionRequest_FindByIDRequest) isReadTransactionRequest_Option() {}

func (m *ReadTransactionRequest) GetOption() isReadTransactionRequest_Option {
	if m != nil {
		return m.Option
	}
	return nil
}

func (m *ReadTransactionRequest) GetStartTransactionRequest() *StartTransactionRequest {
	if x, ok := m.GetOption().(*ReadTransactionRequest_StartTransactionRequest); ok {
		return x.StartTransactionRequest
	}
	return nil
}

func (m *ReadTransactionRequest) GetHasRequest() *HasRequest {
	if x, ok := m.GetOption().(*ReadTransactionRequest_HasRequest); ok {
		return x.HasRequest
	}
	return nil
}

func (m *ReadTransactionRequest) GetFindRequest() *FindRequest {
	if x, ok := m.GetOption().(*ReadTransactionRequest_FindRequest); ok {
		return x.FindRequest
	}
	return nil
}

func (m *ReadTransactionRequest) GetFindByIDRequest() *FindByIDRequest {
	if x, ok := m.GetOption().(*ReadTransactionRequest_FindByIDRequest); ok {
		return x.FindByIDRequest
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ReadTransactionRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ReadTransactionRequest_StartTransactionRequest)(nil),
		(*ReadTransactionRequest_HasRequest)(nil),
		(*ReadTransactionRequest_FindRequest)(nil),
		(*ReadTransactionRequest_FindByIDRequest)(nil),
	}
}

type ReadTransactionReply struct {
	// Types that are valid to be assigned to Option:
	//	*ReadTransactionReply_HasReply
	//	*ReadTransactionReply_FindReply
	//	*ReadTransactionReply_FindByIDReply
	Option               isReadTransactionReply_Option `protobuf_oneof:"option"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *ReadTransactionReply) Reset()         { *m = ReadTransactionReply{} }
func (m *ReadTransactionReply) String() string { return proto.CompactTextString(m) }
func (*ReadTransactionReply) ProtoMessage()    {}
func (*ReadTransactionReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_f2ba358bb2150022, []int{43}
}

func (m *ReadTransactionReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadTransactionReply.Unmarshal(m, b)
}
func (m *ReadTransactionReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadTransactionReply.Marshal(b, m, deterministic)
}
func (m *ReadTransactionReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadTransactionReply.Merge(m, src)
}
func (m *ReadTransactionReply) XXX_Size() int {
	return xxx_messageInfo_ReadTransactionReply.Size(m)
}
func (m *ReadTransactionReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadTransactionReply.DiscardUnknown(m)
}

var xxx_messageInfo_ReadTransactionReply proto.InternalMessageInfo

type isReadTransactionReply_Option interface {
	isReadTransactionReply_Option()
}

type ReadTransactionReply_HasReply struct {
	HasReply *HasReply `protobuf:"bytes,1,opt,name=hasReply,proto3,oneof"`
}

type ReadTransactionReply_FindReply struct {
	FindReply *FindReply `protobuf:"bytes,2,opt,name=findReply,proto3,oneof"`
}

type ReadTransactionReply_FindByIDReply struct {
	FindByIDReply *FindByIDReply `protobuf:"bytes,3,opt,name=findByIDReply,proto3,oneof"`
}

func (*ReadTransactionReply_HasReply) isReadTransactionReply_Option() {}

func (*ReadTransactionReply_FindReply) isReadTransactionReply_Option() {}

func (*ReadTransactionReply_FindByIDReply) isReadTransactionReply_Option() {}

func (m *ReadTransactionReply) GetOption() isReadTransactionReply_Option {
	if m != nil {
		return m.Option
	}
	return nil
}

func (m *ReadTransactionReply) GetHasReply() *HasReply {
	if x, ok := m.GetOption().(*ReadTransactionReply_HasReply); ok {
		return x.HasReply
	}
	return nil
}

func (m *ReadTransactionReply) GetFindReply() *FindReply {
	if x, ok := m.GetOption().(*ReadTransactionReply_FindReply); ok {
		return x.FindReply
	}
	return nil
}

func (m *ReadTransactionReply) GetFindByIDReply() *FindByIDReply {
	if x, ok := m.GetOption().(*ReadTransactionReply_FindByIDReply); ok {
		return x.FindByIDReply
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ReadTransactionReply) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ReadTransactionReply_HasReply)(nil),
		(*ReadTransactionReply_FindReply)(nil),
		(*ReadTransactionReply_FindByIDReply)(nil),
	}
}

type WriteTransactionRequest struct {
	// Types that are valid to be assigned to Option:
	//	*WriteTransactionRequest_StartTransactionRequest
	//	*WriteTransactionRequest_CreateRequest
	//	*WriteTransactionRequest_VerifyRequest
	//	*WriteTransactionRequest_SaveRequest
	//	*WriteTransactionRequest_DeleteRequest
	//	*WriteTransactionRequest_HasRequest
	//	*WriteTransactionRequest_FindRequest
	//	*WriteTransactionRequest_FindByIDRequest
	//	*WriteTransactionRequest_DiscardRequest
	Option               isWriteTransactionRequest_Option `protobuf_oneof:"option"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *WriteTransactionRequest) Reset()         { *m = WriteTransactionRequest{} }
func (m *WriteTransactionRequest) String() string { return proto.CompactTextString(m) }
func (*WriteTransactionRequest) ProtoMessage()    {}
func (*WriteTransactionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f2ba358bb2150022, []int{44}
}

func (m *WriteTransactionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteTransactionRequest.Unmarshal(m, b)
}
func (m *WriteTransactionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteTransactionRequest.Marshal(b, m, deterministic)
}
func (m *WriteTransactionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteTransactionRequest.Merge(m, src)
}
func (m *WriteTransactionRequest) XXX_Size() int {
	return xxx_messageInfo_WriteTransactionRequest.Size(m)
}
func (m *WriteTransactionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteTransactionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WriteTransactionRequest proto.InternalMessageInfo

type isWriteTransactionRequest_Option interface {
	isWriteTransactionRequest_Option()
}

type WriteTransactionRequest_StartTransactionRequest struct {
	StartTransactionRequest *StartTransactionRequest `protobuf:"bytes,1,opt,name=startTransactionRequest,proto3,oneof"`
}

type WriteTransactionRequest_CreateRequest struct {
	CreateRequest *CreateRequest `protobuf:"bytes,2,opt,name=createRequest,proto3,oneof"`
}

type WriteTransactionRequest_VerifyRequest struct {
	VerifyRequest *VerifyRequest `protobuf:"bytes,8,opt,name=verifyRequest,proto3,oneof"`
}

type WriteTransactionRequest_SaveRequest struct {
	SaveRequest *SaveRequest `protobuf:"bytes,3,opt,name=saveRequest,proto3,oneof"`
}

type WriteTransactionRequest_DeleteRequest struct {
	DeleteRequest *DeleteRequest `protobuf:"bytes,4,opt,name=deleteRequest,proto3,oneof"`
}

type WriteTransactionRequest_HasRequest struct {
	HasRequest *HasRequest `protobuf:"bytes,5,opt,name=hasRequest,proto3,oneof"`
}

type WriteTransactionRequest_FindRequest struct {
	FindRequest *FindRequest `protobuf:"bytes,6,opt,name=findRequest,proto3,oneof"`
}

type WriteTransactionRequest_FindByIDRequest struct {
	FindByIDRequest *FindByIDRequest `protobuf:"bytes,7,opt,name=findByIDRequest,proto3,oneof"`
}

type WriteTransactionRequest_DiscardRequest struct {
	DiscardRequest *DiscardRequest `protobuf:"bytes,9,opt,name=discardRequest,proto3,oneof"`
}

func (*WriteTransactionRequest_StartTransactionRequest) isWriteTransactionRequest_Option() {}

func (*WriteTransactionRequest_CreateRequest) isWriteTransactionRequest_Option() {}

func (*WriteTransactionRequest_VerifyRequest) isWriteTransactionRequest_Option() {}

func (*WriteTransactionRequest_SaveRequest) isWriteTransactionRequest_Option() {}

func (*WriteTransactionRequest_DeleteRequest) isWriteTransactionRequest_Option() {}

func (*WriteTransactionRequest_HasRequest) isWriteTransactionRequest_Option() {}

func (*WriteTransactionRequest_FindRequest) isWriteTransactionRequest_Option() {}

func (*WriteTransactionRequest_FindByIDRequest) isWriteTransactionRequest_Option() {}

func (*WriteTransactionRequest_DiscardRequest) isWriteTransactionRequest_Option() {}

func (m *WriteTransactionRequest) GetOption() isWriteTransactionRequest_Option {
	if m != nil {
		return m.Option
	}
	return nil
}

func (m *WriteTransactionRequest) GetStartTransactionRequest() *StartTransactionRequest {
	if x, ok := m.GetOption().(*WriteTransactionRequest_StartTransactionRequest); ok {
		return x.StartTransactionRequest
	}
	return nil
}

func (m *WriteTransactionRequest) GetCreateRequest() *CreateRequest {
	if x, ok := m.GetOption().(*WriteTransactionRequest_CreateRequest); ok {
		return x.CreateRequest
	}
	return nil
}

func (m *WriteTransactionRequest) GetVerifyRequest() *VerifyRequest {
	if x, ok := m.GetOption().(*WriteTransactionRequest_VerifyRequest); ok {
		return x.VerifyRequest
	}
	return nil
}

func (m *WriteTransactionRequest) GetSaveRequest() *SaveRequest {
	if x, ok := m.GetOption().(*WriteTransactionRequest_SaveRequest); ok {
		return x.SaveRequest
	}
	return nil
}

func (m *WriteTransactionRequest) GetDeleteRequest() *DeleteRequest {
	if x, ok := m.GetOption().(*WriteTransactionRequest_DeleteRequest); ok {
		return x.DeleteRequest
	}
	return nil
}

func (m *WriteTransactionRequest) GetHasRequest() *HasRequest {
	if x, ok := m.GetOption().(*WriteTransactionRequest_HasRequest); ok {
		return x.HasRequest
	}
	return nil
}

func (m *WriteTransactionRequest) GetFindRequest() *FindRequest {
	if x, ok := m.GetOption().(*WriteTransactionRequest_FindRequest); ok {
		return x.FindRequest
	}
	return nil
}

func (m *WriteTransactionRequest) GetFindByIDRequest() *FindByIDRequest {
	if x, ok := m.GetOption().(*WriteTransactionRequest_FindByIDRequest); ok {
		return x.FindByIDRequest
	}
	return nil
}

func (m *WriteTransactionRequest) GetDiscardRequest() *DiscardRequest {
	if x, ok := m.GetOption().(*WriteTransactionRequest_DiscardRequest); ok {
		return x.DiscardRequest
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*WriteTransactionRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*WriteTransactionRequest_StartTransactionRequest)(nil),
		(*WriteTransactionRequest_CreateRequest)(nil),
		(*WriteTransactionRequest_VerifyRequest)(nil),
		(*WriteTransactionRequest_SaveRequest)(nil),
		(*WriteTransactionRequest_DeleteRequest)(nil),
		(*WriteTransactionRequest_HasRequest)(nil),
		(*WriteTransactionRequest_FindRequest)(nil),
		(*WriteTransactionRequest_FindByIDRequest)(nil),
		(*WriteTransactionRequest_DiscardRequest)(nil),
	}
}

type WriteTransactionReply struct {
	// Types that are valid to be assigned to Option:
	//	*WriteTransactionReply_CreateReply
	//	*WriteTransactionReply_VerifyReply
	//	*WriteTransactionReply_SaveReply
	//	*WriteTransactionReply_DeleteReply
	//	*WriteTransactionReply_HasReply
	//	*WriteTransactionReply_FindReply
	//	*WriteTransactionReply_FindByIDReply
	//	*WriteTransactionReply_DiscardReply
	Option               isWriteTransactionReply_Option `protobuf_oneof:"option"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *WriteTransactionReply) Reset()         { *m = WriteTransactionReply{} }
func (m *WriteTransactionReply) String() string { return proto.CompactTextString(m) }
func (*WriteTransactionReply) ProtoMessage()    {}
func (*WriteTransactionReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_f2ba358bb2150022, []int{45}
}

func (m *WriteTransactionReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteTransactionReply.Unmarshal(m, b)
}
func (m *WriteTransactionReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteTransactionReply.Marshal(b, m, deterministic)
}
func (m *WriteTransactionReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteTransactionReply.Merge(m, src)
}
func (m *WriteTransactionReply) XXX_Size() int {
	return xxx_messageInfo_WriteTransactionReply.Size(m)
}
func (m *WriteTransactionReply) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteTransactionReply.DiscardUnknown(m)
}

var xxx_messageInfo_WriteTransactionReply proto.InternalMessageInfo

type isWriteTransactionReply_Option interface {
	isWriteTransactionReply_Option()
}

type WriteTransactionReply_CreateReply struct {
	CreateReply *CreateReply `protobuf:"bytes,1,opt,name=createReply,proto3,oneof"`
}

type WriteTransactionReply_VerifyReply struct {
	VerifyReply *VerifyReply `protobuf:"bytes,7,opt,name=verifyReply,proto3,oneof"`
}

type WriteTransactionReply_SaveReply struct {
	SaveReply *SaveReply `protobuf:"bytes,2,opt,name=saveReply,proto3,oneof"`
}

type WriteTransactionReply_DeleteReply struct {
	DeleteReply *DeleteReply `protobuf:"bytes,3,opt,name=deleteReply,proto3,oneof"`
}

type WriteTransactionReply_HasReply struct {
	HasReply *HasReply `protobuf:"bytes,4,opt,name=hasReply,proto3,oneof"`
}

type WriteTransactionReply_FindReply struct {
	FindReply *FindReply `protobuf:"bytes,5,opt,name=findReply,proto3,oneof"`
}

type WriteTransactionReply_FindByIDReply struct {
	FindByIDReply *FindByIDReply `protobuf:"bytes,6,opt,name=findByIDReply,proto3,oneof"`
}

type WriteTransactionReply_DiscardReply struct {
	DiscardReply *DiscardReply `protobuf:"bytes,8,opt,name=discardReply,proto3,oneof"`
}

func (*WriteTransactionReply_CreateReply) isWriteTransactionReply_Option() {}

func (*WriteTransactionReply_VerifyReply) isWriteTransactionReply_Option() {}

func (*WriteTransactionReply_SaveReply) isWriteTransactionReply_Option() {}

func (*WriteTransactionReply_DeleteReply) isWriteTransactionReply_Option() {}

func (*WriteTransactionReply_HasReply) isWriteTransactionReply_Option() {}

func (*WriteTransactionReply_FindReply) isWriteTransactionReply_Option() {}

func (*WriteTransactionReply_FindByIDReply) isWriteTransactionReply_Option() {}

func (*WriteTransactionReply_DiscardReply) isWriteTransactionReply_Option() {}

func (m *WriteTransactionReply) GetOption() isWriteTransactionReply_Option {
	if m != nil {
		return m.Option
	}
	return nil
}

func (m *WriteTransactionReply) GetCreateReply() *CreateReply {
	if x, ok := m.GetOption().(*WriteTransactionReply_CreateReply); ok {
		return x.CreateReply
	}
	return nil
}

func (m *WriteTransactionReply) GetVerifyReply() *VerifyReply {
	if x, ok := m.GetOption().(*WriteTransactionReply_VerifyReply); ok {
		return x.VerifyReply
	}
	return nil
}

func (m *WriteTransactionReply) GetSaveReply() *SaveReply {
	if x, ok := m.GetOption().(*WriteTransactionReply_SaveReply); ok {
		return x.SaveReply
	}
	return nil
}

func (m *WriteTransactionReply) GetDeleteReply() *DeleteReply {
	if x, ok := m.GetOption().(*WriteTransactionReply_DeleteReply); ok {
		return x.DeleteReply
	}
	return nil
}

func (m *WriteTransactionReply) GetHasReply() *HasReply {
	if x, ok := m.GetOption().(*WriteTransactionReply_HasReply); ok {
		return x.HasReply
	}
	return nil
}

func (m *WriteTransactionReply) GetFindReply() *FindReply {
	if x, ok := m.GetOption().(*WriteTransactionReply_FindReply); ok {
		return x.FindReply
	}
	return nil
}

func (m *WriteTransactionReply) GetFindByIDReply() *FindByIDReply {
	if x, ok := m.GetOption().(*WriteTransactionReply_FindByIDReply); ok {
		return x.FindByIDReply
	}
	return nil
}

func (m *WriteTransactionReply) GetDiscardReply() *DiscardReply {
	if x, ok := m.GetOption().(*WriteTransactionReply_DiscardReply); ok {
		return x.DiscardReply
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*WriteTransactionReply) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*WriteTransactionReply_CreateReply)(nil),
		(*WriteTransactionReply_VerifyReply)(nil),
		(*WriteTransactionReply_SaveReply)(nil),
		(*WriteTransactionReply_DeleteReply)(nil),
		(*WriteTransactionReply_HasReply)(nil),
		(*WriteTransactionReply_FindReply)(nil),
		(*WriteTransactionReply_FindByIDReply)(nil),
		(*WriteTransactionReply_DiscardReply)(nil),
	}
}

type ListenRequest struct {
	DbID                 []byte                  `protobuf:"bytes,1,opt,name=dbID,proto3" json:"dbID,omitempty"`
	Filters              []*ListenRequest_Filter `protobuf:"bytes,2,rep,name=filters,proto3" json:"filters,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *ListenRequest) Reset()         { *m = ListenRequest{} }
func (m *ListenRequest) String() string { return proto.CompactTextString(m) }
func (*ListenRequest) ProtoMessage()    {}
func (*ListenRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f2ba358bb2150022, []int{46}
}

func (m *ListenRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListenRequest.Unmarshal(m, b)
}
func (m *ListenRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListenRequest.Marshal(b, m, deterministic)
}
func (m *ListenRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListenRequest.Merge(m, src)
}
func (m *ListenRequest) XXX_Size() int {
	return xxx_messageInfo_ListenRequest.Size(m)
}
func (m *ListenRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListenRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListenRequest proto.InternalMessageInfo

func (m *ListenRequest) GetDbID() []byte {
	if m != nil {
		return m.DbID
	}
	return nil
}

func (m *ListenRequest) GetFilters() []*ListenRequest_Filter {
	if m != nil {
		return m.Filters
	}
	return nil
}

type ListenRequest_Filter struct {
	CollectionName       string                      `protobuf:"bytes,1,opt,name=collectionName,proto3" json:"collectionName,omitempty"`
	InstanceID           string                      `protobuf:"bytes,2,opt,name=instanceID,proto3" json:"instanceID,omitempty"`
	Action               ListenRequest_Filter_Action `protobuf:"varint,3,opt,name=action,proto3,enum=threads.pb.ListenRequest_Filter_Action" json:"action,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *ListenRequest_Filter) Reset()         { *m = ListenRequest_Filter{} }
func (m *ListenRequest_Filter) String() string { return proto.CompactTextString(m) }
func (*ListenRequest_Filter) ProtoMessage()    {}
func (*ListenRequest_Filter) Descriptor() ([]byte, []int) {
	return fileDescriptor_f2ba358bb2150022, []int{46, 0}
}

func (m *ListenRequest_Filter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListenRequest_Filter.Unmarshal(m, b)
}
func (m *ListenRequest_Filter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListenRequest_Filter.Marshal(b, m, deterministic)
}
func (m *ListenRequest_Filter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListenRequest_Filter.Merge(m, src)
}
func (m *ListenRequest_Filter) XXX_Size() int {
	return xxx_messageInfo_ListenRequest_Filter.Size(m)
}
func (m *ListenRequest_Filter) XXX_DiscardUnknown() {
	xxx_messageInfo_ListenRequest_Filter.DiscardUnknown(m)
}

var xxx_messageInfo_ListenRequest_Filter proto.InternalMessageInfo

func (m *ListenRequest_Filter) GetCollectionName() string {
	if m != nil {
		return m.CollectionName
	}
	return ""
}

func (m *ListenRequest_Filter) GetInstanceID() string {
	if m != nil {
		return m.InstanceID
	}
	return ""
}

func (m *ListenRequest_Filter) GetAction() ListenRequest_Filter_Action {
	if m != nil {
		return m.Action
	}
	return ListenRequest_Filter_ALL
}

type ListenReply struct {
	CollectionName       string             `protobuf:"bytes,1,opt,name=collectionName,proto3" json:"collectionName,omitempty"`
	InstanceID           string             `protobuf:"bytes,2,opt,name=instanceID,proto3" json:"instanceID,omitempty"`
	Action               ListenReply_Action `protobuf:"varint,3,opt,name=action,proto3,enum=threads.pb.ListenReply_Action" json:"action,omitempty"`
	Instance             []byte             `protobuf:"bytes,4,opt,name=instance,proto3" json:"instance,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *ListenReply) Reset()         { *m = ListenReply{} }
func (m *ListenReply) String() string { return proto.CompactTextString(m) }
func (*ListenReply) ProtoMessage()    {}
func (*ListenReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_f2ba358bb2150022, []int{47}
}

func (m *ListenReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListenReply.Unmarshal(m, b)
}
func (m *ListenReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListenReply.Marshal(b, m, deterministic)
}
func (m *ListenReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListenReply.Merge(m, src)
}
func (m *ListenReply) XXX_Size() int {
	return xxx_messageInfo_ListenReply.Size(m)
}
func (m *ListenReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ListenReply.DiscardUnknown(m)
}

var xxx_messageInfo_ListenReply proto.InternalMessageInfo

func (m *ListenReply) GetCollectionName() string {
	if m != nil {
		return m.CollectionName
	}
	return ""
}

func (m *ListenReply) GetInstanceID() string {
	if m != nil {
		return m.InstanceID
	}
	return ""
}

func (m *ListenReply) GetAction() ListenReply_Action {
	if m != nil {
		return m.Action
	}
	return ListenReply_CREATE
}

func (m *ListenReply) GetInstance() []byte {
	if m != nil {
		return m.Instance
	}
	return nil
}

func init() {
	proto.RegisterEnum("threads.pb.ListenRequest_Filter_Action", ListenRequest_Filter_Action_name, ListenRequest_Filter_Action_value)
	proto.RegisterEnum("threads.pb.ListenReply_Action", ListenReply_Action_name, ListenReply_Action_value)
	proto.RegisterType((*GetTokenRequest)(nil), "threads.pb.GetTokenRequest")
	proto.RegisterType((*GetTokenReply)(nil), "threads.pb.GetTokenReply")
	proto.RegisterType((*NewDBRequest)(nil), "threads.pb.NewDBRequest")
	proto.RegisterType((*NewDBFromAddrRequest)(nil), "threads.pb.NewDBFromAddrRequest")
	proto.RegisterType((*CollectionConfig)(nil), "threads.pb.CollectionConfig")
	proto.RegisterType((*Index)(nil), "threads.pb.Index")
	proto.RegisterType((*NewDBReply)(nil), "threads.pb.NewDBReply")
	proto.RegisterType((*ListDBsRequest)(nil), "threads.pb.ListDBsRequest")
	proto.RegisterType((*ListDBsReply)(nil), "threads.pb.ListDBsReply")
	proto.RegisterType((*ListDBsReply_DB)(nil), "threads.pb.ListDBsReply.DB")
	proto.RegisterType((*GetDBInfoRequest)(nil), "threads.pb.GetDBInfoRequest")
	proto.RegisterType((*GetDBInfoReply)(nil), "threads.pb.GetDBInfoReply")
	proto.RegisterType((*DeleteDBRequest)(nil), "threads.pb.DeleteDBRequest")
	proto.RegisterType((*DeleteDBReply)(nil), "threads.pb.DeleteDBReply")
	proto.RegisterType((*NewCollectionRequest)(nil), "threads.pb.NewCollectionRequest")
	proto.RegisterType((*NewCollectionReply)(nil), "threads.pb.NewCollectionReply")
	proto.RegisterType((*UpdateCollectionRequest)(nil), "threads.pb.UpdateCollectionRequest")
	proto.RegisterType((*UpdateCollectionReply)(nil), "threads.pb.UpdateCollectionReply")
	proto.RegisterType((*DeleteCollectionRequest)(nil), "threads.pb.DeleteCollectionRequest")
	proto.RegisterType((*DeleteCollectionReply)(nil), "threads.pb.DeleteCollectionReply")
	proto.RegisterType((*GetCollectionInfoRequest)(nil), "threads.pb.GetCollectionInfoRequest")
	proto.RegisterType((*GetCollectionInfoReply)(nil), "threads.pb.GetCollectionInfoReply")
	proto.RegisterType((*GetCollectionIndexesRequest)(nil), "threads.pb.GetCollectionIndexesRequest")
	proto.RegisterType((*GetCollectionIndexesReply)(nil), "threads.pb.GetCollectionIndexesReply")
	proto.RegisterType((*ListCollectionsRequest)(nil), "threads.pb.ListCollectionsRequest")
	proto.RegisterType((*ListCollectionsReply)(nil), "threads.pb.ListCollectionsReply")
	proto.RegisterType((*CreateRequest)(nil), "threads.pb.CreateRequest")
	proto.RegisterType((*CreateReply)(nil), "threads.pb.CreateReply")
	proto.RegisterType((*VerifyRequest)(nil), "threads.pb.VerifyRequest")
	proto.RegisterType((*VerifyReply)(nil), "threads.pb.VerifyReply")
	proto.RegisterType((*SaveRequest)(nil), "threads.pb.SaveRequest")
	proto.RegisterType((*SaveReply)(nil), "threads.pb.SaveReply")
	proto.RegisterType((*DeleteRequest)(nil), "threads.pb.DeleteRequest")
	proto.RegisterType((*DeleteReply)(nil), "threads.pb.DeleteReply")
	proto.RegisterType((*HasRequest)(nil), "threads.pb.HasRequest")
	proto.RegisterType((*HasReply)(nil), "threads.pb.HasReply")
	proto.RegisterType((*FindRequest)(nil), "threads.pb.FindRequest")
	proto.RegisterType((*FindReply)(nil), "threads.pb.FindReply")
	proto.RegisterType((*FindByIDRequest)(nil), "threads.pb.FindByIDRequest")
	proto.RegisterType((*FindByIDReply)(nil), "threads.pb.FindByIDReply")
	proto.RegisterType((*DiscardRequest)(nil), "threads.pb.DiscardRequest")
	proto.RegisterType((*DiscardReply)(nil), "threads.pb.DiscardReply")
	proto.RegisterType((*StartTransactionRequest)(nil), "threads.pb.StartTransactionRequest")
	proto.RegisterType((*ReadTransactionRequest)(nil), "threads.pb.ReadTransactionRequest")
	proto.RegisterType((*ReadTransactionReply)(nil), "threads.pb.ReadTransactionReply")
	proto.RegisterType((*WriteTransactionRequest)(nil), "threads.pb.WriteTransactionRequest")
	proto.RegisterType((*WriteTransactionReply)(nil), "threads.pb.WriteTransactionReply")
	proto.RegisterType((*ListenRequest)(nil), "threads.pb.ListenRequest")
	proto.RegisterType((*ListenRequest_Filter)(nil), "threads.pb.ListenRequest.Filter")
	proto.RegisterType((*ListenReply)(nil), "threads.pb.ListenReply")
}

func init() { proto.RegisterFile("threads.proto", fileDescriptor_f2ba358bb2150022) }

var fileDescriptor_f2ba358bb2150022 = []byte{
	// 1827 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x59, 0xcd, 0x6f, 0xdb, 0x46,
	0x16, 0x27, 0x25, 0xeb, 0xeb, 0xe9, 0xc3, 0xca, 0xc0, 0x96, 0x64, 0x26, 0x30, 0xb4, 0xb3, 0x9b,
	0xc4, 0xc8, 0xee, 0x0a, 0x81, 0xb3, 0xd9, 0xcd, 0xae, 0x81, 0x6c, 0x25, 0x4b, 0xb1, 0xdc, 0x1a,
	0x6e, 0x40, 0x3b, 0x09, 0x8a, 0xa6, 0x48, 0x68, 0x71, 0x64, 0xb3, 0x96, 0x25, 0x85, 0xa4, 0x9d,
	0xe8, 0x2f, 0x68, 0x8f, 0xbd, 0xf6, 0xda, 0x43, 0xd1, 0x7b, 0x4f, 0x3d, 0x17, 0xe8, 0xb1, 0xb7,
	0xfe, 0x39, 0x05, 0x8a, 0xe1, 0xf0, 0x63, 0x86, 0x1f, 0x72, 0xec, 0x3a, 0x69, 0x6f, 0x9a, 0xe1,
	0xfb, 0x9e, 0xdf, 0x9b, 0xf7, 0xe6, 0x09, 0xca, 0xf6, 0x91, 0x49, 0x34, 0xdd, 0x6a, 0x4d, 0xcd,
	0x89, 0x3d, 0x41, 0xe0, 0x2f, 0x0f, 0xf0, 0x63, 0x58, 0xdc, 0x22, 0xf6, 0xfe, 0xe4, 0x98, 0x8c,
	0x55, 0xf2, 0xea, 0x94, 0x58, 0x36, 0x42, 0x90, 0x3e, 0x26, 0xb3, 0x86, 0xdc, 0x94, 0xd7, 0x0a,
	0x7d, 0x49, 0xa5, 0x0b, 0xb4, 0x0a, 0x05, 0xcb, 0x38, 0x1c, 0x6b, 0xf6, 0xa9, 0x49, 0x1a, 0xa9,
	0xa6, 0xbc, 0x56, 0xea, 0x4b, 0x6a, 0xb0, 0xd5, 0x29, 0x40, 0x6e, 0xaa, 0xcd, 0x46, 0x13, 0x4d,
	0xc7, 0x2a, 0x94, 0x03, 0x89, 0xd3, 0x91, 0xc3, 0x3b, 0x38, 0xd2, 0x46, 0x23, 0x32, 0x3e, 0x24,
	0x8e, 0x54, 0x87, 0xd7, 0xdf, 0x42, 0x35, 0xc8, 0xd8, 0x94, 0xda, 0x91, 0x4b, 0x35, 0xb2, 0x25,
	0x2f, 0xf3, 0x0c, 0x4a, 0xbb, 0xe4, 0x75, 0xb7, 0x13, 0x98, 0xb8, 0xa0, 0x1f, 0x6c, 0x77, 0x99,
	0x34, 0xd5, 0xf9, 0x8d, 0x1e, 0x42, 0x71, 0x30, 0x19, 0x8d, 0xc8, 0xc0, 0x36, 0x26, 0x63, 0xab,
	0x91, 0x6a, 0xa6, 0xd7, 0x8a, 0xeb, 0x37, 0x5a, 0x81, 0xaf, 0xad, 0x4d, 0xff, 0xf3, 0xe6, 0x64,
	0x3c, 0x34, 0x0e, 0x55, 0x9e, 0x81, 0xca, 0x1c, 0x6b, 0x27, 0xa4, 0x91, 0xa6, 0x56, 0xa8, 0xce,
	0x6f, 0xfc, 0xad, 0x0c, 0x4b, 0x8e, 0xe2, 0x47, 0xe6, 0xe4, 0xa4, 0xad, 0xeb, 0x26, 0x67, 0x80,
	0xa6, 0xeb, 0xa6, 0x67, 0x00, 0xfd, 0x8d, 0xaa, 0x2c, 0x6e, 0x4e, 0x74, 0x58, 0xd4, 0x42, 0x26,
	0xa5, 0x2f, 0x6b, 0xd2, 0x42, 0x60, 0x12, 0x5a, 0x82, 0xcc, 0xc1, 0x68, 0x32, 0x38, 0x6e, 0x64,
	0x9a, 0xf2, 0x5a, 0x5e, 0x65, 0x0b, 0xfc, 0xbd, 0x0c, 0xd5, 0xb0, 0x2c, 0x9f, 0x5d, 0xe6, 0xd8,
	0x6b, 0x90, 0xb5, 0x06, 0x47, 0xe4, 0x44, 0x73, 0xed, 0x74, 0x57, 0xe8, 0xef, 0x90, 0x33, 0xc6,
	0x3a, 0x79, 0x43, 0x3c, 0x33, 0xaf, 0xf1, 0x66, 0x6e, 0xd3, 0x4f, 0xaa, 0x47, 0x81, 0x6e, 0x41,
	0xe5, 0xb5, 0x69, 0xd8, 0xe4, 0xa9, 0x36, 0x32, 0x74, 0xcd, 0x9e, 0x98, 0xae, 0x85, 0xa1, 0x5d,
	0xb4, 0x0a, 0x40, 0x45, 0x3c, 0x32, 0x46, 0x36, 0x31, 0x1d, 0x83, 0x0b, 0x2a, 0xb7, 0x83, 0xef,
	0x41, 0xc6, 0x91, 0x4c, 0x2d, 0x9d, 0x6a, 0xf6, 0x91, 0x67, 0x29, 0xfd, 0x4d, 0x2d, 0x3d, 0x1d,
	0x1b, 0xaf, 0x4e, 0x19, 0xde, 0xf2, 0xaa, 0xbb, 0xc2, 0x25, 0x00, 0x17, 0x0b, 0xd3, 0xd1, 0x0c,
	0x57, 0xa1, 0xb2, 0x63, 0x58, 0x76, 0xb7, 0x63, 0xb9, 0x47, 0x83, 0xbf, 0x90, 0xa1, 0xe4, 0x6f,
	0x51, 0xfc, 0xfd, 0x13, 0xd2, 0xfa, 0x81, 0xd5, 0x90, 0x1d, 0xb7, 0xae, 0xf3, 0x6e, 0xf1, 0x64,
	0xad, 0x6e, 0x47, 0xa5, 0x74, 0x4a, 0x1f, 0x52, 0xdd, 0x4e, 0x2c, 0xc2, 0x5a, 0xb0, 0x60, 0x8c,
	0x87, 0x13, 0xc7, 0x9e, 0xe2, 0xba, 0xc2, 0x4b, 0xda, 0x22, 0x76, 0xb7, 0xb3, 0x3d, 0x1e, 0x4e,
	0x1c, 0x59, 0xaa, 0x43, 0x87, 0x6f, 0x41, 0x95, 0xdb, 0x4f, 0x44, 0x2e, 0xde, 0x81, 0x8a, 0xc8,
	0x4f, 0x0f, 0x99, 0x42, 0x8a, 0x19, 0x5d, 0x52, 0xd9, 0x22, 0x06, 0x60, 0x71, 0x98, 0xbd, 0x09,
	0x8b, 0x5d, 0x32, 0x22, 0x36, 0x99, 0x9b, 0x2e, 0x78, 0x11, 0xca, 0x01, 0x19, 0x8d, 0xe4, 0x4b,
	0x07, 0xea, 0x01, 0x88, 0xe6, 0xe5, 0xda, 0xbf, 0x20, 0x3b, 0x70, 0x30, 0xe6, 0xc6, 0x62, 0x3e,
	0xa6, 0x5d, 0x5a, 0xbc, 0x04, 0x28, 0xa4, 0x81, 0xea, 0x1d, 0x40, 0xfd, 0xc9, 0x54, 0xd7, 0x6c,
	0xf2, 0x2e, 0x55, 0xd7, 0x61, 0x39, 0xaa, 0x84, 0x6a, 0x6f, 0x43, 0x9d, 0x85, 0xe1, 0xed, 0xb4,
	0x7b, 0x01, 0x4f, 0x71, 0x01, 0xaf, 0xc3, 0x72, 0x54, 0x04, 0x95, 0xdd, 0x81, 0xc6, 0x16, 0xb1,
	0x83, 0xdd, 0x73, 0x70, 0x10, 0x2b, 0xfc, 0x07, 0x19, 0x6a, 0x31, 0x42, 0x28, 0x48, 0xfe, 0xf4,
	0xe9, 0xdd, 0x83, 0xeb, 0x21, 0xd3, 0x1d, 0xf9, 0x17, 0x0d, 0x41, 0x1f, 0x56, 0xe2, 0xc5, 0xd0,
	0x20, 0x70, 0x8e, 0xc9, 0xe7, 0x39, 0x86, 0xff, 0x01, 0x35, 0x9a, 0xf2, 0x81, 0xa8, 0x79, 0xb6,
	0xe0, 0xe7, 0xb0, 0x14, 0xa1, 0xa6, 0x2a, 0xbb, 0xe2, 0xad, 0xce, 0xd4, 0xe2, 0xd0, 0x6d, 0x10,
	0x73, 0x60, 0xc2, 0xdd, 0x8e, 0x0d, 0x28, 0x6f, 0x9a, 0x44, 0xb3, 0xc9, 0xbc, 0x70, 0xdc, 0x82,
	0x4a, 0xc0, 0xb3, 0x1b, 0x04, 0x26, 0xb4, 0x8b, 0x6e, 0x40, 0xc1, 0x18, 0x5b, 0xb6, 0x36, 0x1e,
	0xb8, 0x07, 0x5c, 0x52, 0x83, 0x0d, 0xfc, 0x29, 0x14, 0x3d, 0x55, 0xd4, 0xfe, 0x26, 0x14, 0xbd,
	0x6f, 0xdb, 0x5d, 0x66, 0x7f, 0x41, 0xe5, 0xb7, 0xd0, 0x1d, 0xa8, 0xda, 0xa6, 0x36, 0xb6, 0x34,
	0x47, 0x43, 0xcf, 0x34, 0x27, 0xa6, 0xab, 0x38, 0xb2, 0x4f, 0xfd, 0x78, 0x4a, 0x4c, 0x63, 0x38,
	0x7b, 0xf7, 0x7e, 0xfc, 0x17, 0x8a, 0x9e, 0x2a, 0xea, 0x47, 0x9c, 0x95, 0x72, 0x82, 0x95, 0x87,
	0x50, 0xdc, 0xd3, 0xce, 0xde, 0x43, 0xac, 0xff, 0x03, 0x05, 0xa6, 0xe8, 0xa2, 0x16, 0x9e, 0x78,
	0xf7, 0xf1, 0x55, 0xd8, 0x18, 0x3a, 0xe2, 0x74, 0xe4, 0x88, 0x69, 0x2c, 0x3d, 0x75, 0x17, 0xb5,
	0xf4, 0x73, 0x80, 0xbe, 0x66, 0xbd, 0x1f, 0x33, 0x77, 0x21, 0xef, 0xe8, 0xa2, 0x36, 0xd6, 0x20,
	0x4b, 0xde, 0x18, 0x96, 0x6d, 0x39, 0xba, 0xf2, 0xaa, 0xbb, 0xba, 0x10, 0x5a, 0x0f, 0xa1, 0xf8,
	0xc8, 0x18, 0xeb, 0x57, 0x84, 0x83, 0x57, 0xa7, 0xc4, 0x9c, 0x7d, 0xb8, 0xf7, 0xf1, 0xae, 0x53,
	0x80, 0x4b, 0x6a, 0xb0, 0x81, 0x9f, 0x40, 0x81, 0x29, 0xa2, 0x96, 0x0b, 0x90, 0x91, 0x43, 0x90,
	0xb9, 0x90, 0xfd, 0x27, 0xb0, 0x48, 0xc5, 0x76, 0x66, 0xdb, 0xdd, 0xab, 0xf0, 0x61, 0x15, 0x20,
	0x88, 0xb6, 0xdb, 0x45, 0x70, 0x3b, 0xf8, 0x19, 0x94, 0x03, 0x75, 0xd4, 0x13, 0x05, 0xf2, 0xde,
	0x67, 0x57, 0xa1, 0xbf, 0xbe, 0x90, 0x1f, 0x55, 0xa8, 0x74, 0x0d, 0x6b, 0xa0, 0x99, 0xde, 0x51,
	0xe0, 0x0a, 0x94, 0xfc, 0x1d, 0x5a, 0x3c, 0x9f, 0x40, 0x7d, 0xcf, 0xd6, 0x4c, 0x7b, 0x3f, 0x60,
	0xbd, 0x02, 0x8f, 0xf1, 0x8f, 0x29, 0xa8, 0xa9, 0x44, 0xd3, 0x63, 0xc4, 0xbe, 0x80, 0xba, 0x15,
	0xaf, 0xd1, 0xd1, 0x54, 0x5c, 0xff, 0x2b, 0x7f, 0xc7, 0x27, 0x18, 0xd7, 0x97, 0xd4, 0x24, 0x29,
	0xe8, 0x01, 0xc0, 0x91, 0x9f, 0x38, 0x6e, 0xfb, 0x52, 0xe3, 0x65, 0x06, 0x69, 0xd5, 0x97, 0x54,
	0x8e, 0x16, 0x6d, 0x40, 0x71, 0x18, 0xc0, 0xd6, 0x39, 0xa8, 0xe2, 0x7a, 0x9d, 0x67, 0xe5, 0x50,
	0xdd, 0x97, 0x54, 0x9e, 0x1a, 0x6d, 0xc1, 0xe2, 0x50, 0xc4, 0x8c, 0x53, 0xcf, 0x43, 0xbd, 0x70,
	0x08, 0x56, 0x7d, 0x49, 0x0d, 0x73, 0x75, 0xf2, 0x90, 0x9d, 0x4c, 0xa9, 0x43, 0xf8, 0x67, 0x19,
	0x96, 0x22, 0x51, 0xa4, 0xf8, 0x58, 0x87, 0xfc, 0x91, 0x9b, 0xaf, 0x6e, 0xd0, 0x96, 0x22, 0x0e,
	0x4e, 0x47, 0xb3, 0xbe, 0xa4, 0xfa, 0x74, 0xe8, 0x3e, 0x14, 0x86, 0x5e, 0xaa, 0xb8, 0x51, 0x59,
	0x8e, 0xba, 0xc6, 0xb8, 0x02, 0x4a, 0xd4, 0x86, 0xf2, 0x90, 0xc7, 0xa6, 0x1b, 0x95, 0x95, 0x78,
	0xa7, 0x18, 0xbb, 0xc8, 0xc1, 0x39, 0xf4, 0x55, 0x06, 0xea, 0xcf, 0x68, 0x77, 0xf3, 0x47, 0xe0,
	0xa2, 0x0d, 0xe5, 0x01, 0xdf, 0x0a, 0xb8, 0x41, 0x10, 0x3c, 0x11, 0x7a, 0x05, 0xea, 0x89, 0xc0,
	0x41, 0x45, 0x9c, 0xf1, 0x55, 0xb8, 0x91, 0x8f, 0x8a, 0x10, 0xca, 0x34, 0x15, 0x21, 0x70, 0x50,
	0x8c, 0x59, 0x41, 0x89, 0x8c, 0xc3, 0x18, 0x57, 0x41, 0x29, 0xc6, 0x38, 0x6a, 0xaa, 0x5f, 0xe7,
	0xab, 0x97, 0x8b, 0x30, 0x41, 0xbf, 0x50, 0xde, 0xa8, 0x7e, 0x81, 0x23, 0x94, 0x1d, 0x99, 0xcb,
	0x67, 0x47, 0xf6, 0xf7, 0x66, 0x47, 0xee, 0x32, 0xd9, 0x81, 0xba, 0x50, 0xd1, 0x85, 0x2b, 0xad,
	0x51, 0x88, 0xbe, 0x13, 0xc5, 0x4b, 0xaf, 0x2f, 0xa9, 0x21, 0x1e, 0x0e, 0x92, 0xbf, 0xa6, 0x61,
	0x39, 0x0a, 0x49, 0x8a, 0xfc, 0x0d, 0x28, 0x0e, 0x82, 0x7e, 0xce, 0x05, 0x61, 0x3d, 0x0e, 0x2d,
	0x0c, 0xf5, 0x3c, 0x35, 0x65, 0x3e, 0x0b, 0x9a, 0x28, 0xd7, 0xd7, 0x7a, 0x1c, 0x4e, 0x5c, 0x66,
	0x8e, 0x9a, 0xa6, 0xaa, 0xe5, 0x75, 0x37, 0x71, 0xa9, 0xea, 0xb7, 0x3e, 0xce, 0x74, 0xc8, 0xef,
	0x83, 0x36, 0xa0, 0xa8, 0x07, 0xcd, 0x46, 0x1c, 0xb4, 0xb8, 0x5e, 0x84, 0xea, 0xe4, 0xa8, 0x85,
	0x2b, 0x65, 0xe1, 0x32, 0x57, 0x4a, 0xe6, 0xf2, 0x57, 0x4a, 0xf6, 0xa2, 0x57, 0x0a, 0x7a, 0x08,
	0x25, 0x9d, 0x2b, 0x63, 0x6e, 0x1e, 0x36, 0x62, 0x31, 0xc0, 0x04, 0x08, 0xf4, 0xdc, 0xf9, 0x7f,
	0x97, 0x82, 0x32, 0x7d, 0x7f, 0x90, 0xb9, 0x75, 0xef, 0x7f, 0x90, 0x1b, 0x3a, 0xaf, 0x2d, 0x6f,
	0xe2, 0xd5, 0x0c, 0x0f, 0x38, 0x7c, 0xfe, 0x16, 0x7b, 0x96, 0xa9, 0x1e, 0x83, 0xf2, 0x93, 0x0c,
	0x59, 0xb6, 0x17, 0x53, 0x3e, 0xe5, 0xb7, 0x68, 0x18, 0x52, 0xe1, 0x86, 0x01, 0xfd, 0x1f, 0xb2,
	0x0c, 0xa9, 0xce, 0x21, 0x57, 0xd6, 0x6f, 0x9f, 0x67, 0x4d, 0xab, 0xcd, 0x80, 0xed, 0xb2, 0xe1,
	0x7b, 0x90, 0x65, 0x3b, 0x28, 0x07, 0xe9, 0xf6, 0xce, 0x4e, 0x55, 0x42, 0x00, 0xd9, 0x4d, 0xb5,
	0xd7, 0xde, 0xef, 0x55, 0x65, 0x94, 0x87, 0x85, 0xbd, 0xf6, 0xd3, 0x5e, 0x35, 0x45, 0x77, 0xbb,
	0xbd, 0x9d, 0xde, 0x7e, 0xaf, 0x9a, 0xc6, 0xbf, 0xc8, 0x50, 0xf4, 0x84, 0xd3, 0x43, 0xb8, 0x2a,
	0x6f, 0xfe, 0x1d, 0xf2, 0x66, 0x35, 0xce, 0x9b, 0xe9, 0x68, 0x16, 0x72, 0x42, 0xe8, 0x92, 0x16,
	0xc4, 0x2e, 0x09, 0xdf, 0xf1, 0x1d, 0x0c, 0xfc, 0x92, 0x7c, 0xbf, 0x64, 0xce, 0xaf, 0xd4, 0xfa,
	0xd7, 0x65, 0x48, 0xb7, 0x1f, 0x6f, 0xa3, 0x3e, 0xe4, 0xbd, 0x91, 0x2a, 0xba, 0x1e, 0x7a, 0x68,
	0xf2, 0xa3, 0x5b, 0x65, 0x25, 0xfe, 0x23, 0xed, 0xa7, 0xa4, 0x35, 0xf9, 0xae, 0x8c, 0x36, 0x20,
	0xe3, 0x0c, 0xcf, 0x90, 0x80, 0x48, 0x7e, 0xb6, 0xaa, 0xd4, 0x62, 0xbe, 0x38, 0x02, 0xd0, 0x47,
	0x50, 0x16, 0x86, 0xa1, 0xa8, 0x19, 0x21, 0x0d, 0xcd, 0x49, 0xe7, 0x08, 0x6b, 0x43, 0xce, 0x1d,
	0xbf, 0x21, 0x25, 0x76, 0x26, 0xc7, 0x04, 0x34, 0x92, 0xe6, 0x75, 0x58, 0x42, 0x5b, 0x50, 0xf0,
	0xe7, 0x66, 0xe8, 0x46, 0xc2, 0x38, 0x8e, 0x89, 0x99, 0x33, 0xac, 0xc3, 0x12, 0xea, 0x42, 0xde,
	0x9b, 0x85, 0x89, 0xf1, 0x0d, 0x0d, 0xd2, 0x94, 0x95, 0xf8, 0x8f, 0x4c, 0xca, 0x9e, 0x13, 0x9e,
	0xe0, 0xe1, 0x1f, 0x09, 0x4f, 0x64, 0xc4, 0xa4, 0xac, 0xce, 0xa1, 0x60, 0x42, 0x9f, 0x43, 0x35,
	0x3c, 0xb8, 0x42, 0x42, 0xbf, 0x91, 0x30, 0x3b, 0x53, 0xfe, 0x32, 0x9f, 0xc8, 0x97, 0x1e, 0x1e,
	0x5d, 0x89, 0xd2, 0x13, 0x66, 0x63, 0xa2, 0xf4, 0xf8, 0xe9, 0x97, 0x84, 0x5e, 0xc0, 0xb5, 0xc8,
	0x24, 0x04, 0xfd, 0xed, 0x9c, 0x41, 0x09, 0x93, 0xff, 0x16, 0xe3, 0x14, 0x2c, 0xa1, 0x63, 0x58,
	0x8a, 0x9b, 0x0c, 0xa1, 0xdb, 0x73, 0xb8, 0xf9, 0x11, 0x94, 0x72, 0xf3, 0x7c, 0x42, 0xaa, 0x29,
	0xfd, 0x65, 0x4a, 0x46, 0x9f, 0xc0, 0x62, 0x68, 0x1c, 0x84, 0x70, 0x18, 0x9c, 0xd1, 0xc9, 0x92,
	0xd2, 0x9c, 0x4b, 0xc3, 0xfc, 0x78, 0x08, 0x59, 0x56, 0xb1, 0x51, 0x72, 0xcf, 0xa7, 0x24, 0x15,
	0x78, 0xc6, 0xcf, 0x8a, 0x36, 0x4a, 0x6e, 0xf8, 0x94, 0xa4, 0x1a, 0x8f, 0x25, 0xf4, 0x00, 0x16,
	0x68, 0xe5, 0x46, 0x49, 0xdd, 0x9e, 0x12, 0x5f, 0xe4, 0x99, 0x66, 0x76, 0xfa, 0x28, 0xb9, 0xd5,
	0x53, 0x92, 0x2a, 0x3d, 0x96, 0xd0, 0x7d, 0x48, 0xf7, 0x35, 0x0b, 0x25, 0xf4, 0x79, 0x4a, 0x6c,
	0xa5, 0x67, 0x06, 0xd3, 0x3a, 0x8c, 0x92, 0x9a, 0x3c, 0x25, 0xbe, 0xda, 0xb3, 0x54, 0xf7, 0x2a,
	0x38, 0x9a, 0xd7, 0xe1, 0x29, 0xc9, 0x45, 0x1f, 0x4b, 0xe8, 0x33, 0x58, 0x0c, 0x3d, 0x7f, 0x44,
	0x2c, 0xc4, 0xbf, 0x30, 0x45, 0x2c, 0xc4, 0xbd, 0x9f, 0xdc, 0x5b, 0xfa, 0x25, 0x54, 0xc3, 0x9d,
	0x9f, 0x98, 0x96, 0x09, 0x4f, 0x15, 0x31, 0x2d, 0x63, 0x9b, 0x47, 0x57, 0xc3, 0x07, 0x90, 0x65,
	0xf5, 0x4b, 0x3c, 0x37, 0xa1, 0x42, 0x8b, 0xe7, 0xc6, 0x95, 0x3b, 0x2c, 0xdd, 0x95, 0x3b, 0x2d,
	0xa8, 0x1b, 0x93, 0x96, 0x4d, 0xde, 0xd8, 0xc6, 0x88, 0x78, 0x84, 0x2f, 0x0e, 0xcd, 0xe9, 0xa0,
	0x93, 0xdb, 0x67, 0xab, 0xc7, 0xf2, 0x37, 0xa9, 0xdc, 0x7e, 0x5f, 0xed, 0xb5, 0xbb, 0x7b, 0x07,
	0x59, 0xe7, 0xbf, 0xc7, 0x7b, 0xbf, 0x05, 0x00, 0x00, 0xff, 0xff, 0x3d, 0x89, 0x03, 0x14, 0x8c,
	0x1c, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// APIClient is the client API for API service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type APIClient interface {
	GetToken(ctx context.Context, opts ...grpc.CallOption) (API_GetTokenClient, error)
	NewDB(ctx context.Context, in *NewDBRequest, opts ...grpc.CallOption) (*NewDBReply, error)
	NewDBFromAddr(ctx context.Context, in *NewDBFromAddrRequest, opts ...grpc.CallOption) (*NewDBReply, error)
	ListDBs(ctx context.Context, in *ListDBsRequest, opts ...grpc.CallOption) (*ListDBsReply, error)
	GetDBInfo(ctx context.Context, in *GetDBInfoRequest, opts ...grpc.CallOption) (*GetDBInfoReply, error)
	DeleteDB(ctx context.Context, in *DeleteDBRequest, opts ...grpc.CallOption) (*DeleteDBReply, error)
	NewCollection(ctx context.Context, in *NewCollectionRequest, opts ...grpc.CallOption) (*NewCollectionReply, error)
	UpdateCollection(ctx context.Context, in *UpdateCollectionRequest, opts ...grpc.CallOption) (*UpdateCollectionReply, error)
	DeleteCollection(ctx context.Context, in *DeleteCollectionRequest, opts ...grpc.CallOption) (*DeleteCollectionReply, error)
	GetCollectionInfo(ctx context.Context, in *GetCollectionInfoRequest, opts ...grpc.CallOption) (*GetCollectionInfoReply, error)
	GetCollectionIndexes(ctx context.Context, in *GetCollectionIndexesRequest, opts ...grpc.CallOption) (*GetCollectionIndexesReply, error)
	ListCollections(ctx context.Context, in *ListCollectionsRequest, opts ...grpc.CallOption) (*ListCollectionsReply, error)
	Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateReply, error)
	Verify(ctx context.Context, in *VerifyRequest, opts ...grpc.CallOption) (*VerifyReply, error)
	Save(ctx context.Context, in *SaveRequest, opts ...grpc.CallOption) (*SaveReply, error)
	Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*DeleteReply, error)
	Has(ctx context.Context, in *HasRequest, opts ...grpc.CallOption) (*HasReply, error)
	Find(ctx context.Context, in *FindRequest, opts ...grpc.CallOption) (*FindReply, error)
	FindByID(ctx context.Context, in *FindByIDRequest, opts ...grpc.CallOption) (*FindByIDReply, error)
	ReadTransaction(ctx context.Context, opts ...grpc.CallOption) (API_ReadTransactionClient, error)
	WriteTransaction(ctx context.Context, opts ...grpc.CallOption) (API_WriteTransactionClient, error)
	Listen(ctx context.Context, in *ListenRequest, opts ...grpc.CallOption) (API_ListenClient, error)
}

type aPIClient struct {
	cc *grpc.ClientConn
}

func NewAPIClient(cc *grpc.ClientConn) APIClient {
	return &aPIClient{cc}
}

func (c *aPIClient) GetToken(ctx context.Context, opts ...grpc.CallOption) (API_GetTokenClient, error) {
	stream, err := c.cc.NewStream(ctx, &_API_serviceDesc.Streams[0], "/threads.pb.API/GetToken", opts...)
	if err != nil {
		return nil, err
	}
	x := &aPIGetTokenClient{stream}
	return x, nil
}

type API_GetTokenClient interface {
	Send(*GetTokenRequest) error
	Recv() (*GetTokenReply, error)
	grpc.ClientStream
}

type aPIGetTokenClient struct {
	grpc.ClientStream
}

func (x *aPIGetTokenClient) Send(m *GetTokenRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *aPIGetTokenClient) Recv() (*GetTokenReply, error) {
	m := new(GetTokenReply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *aPIClient) NewDB(ctx context.Context, in *NewDBRequest, opts ...grpc.CallOption) (*NewDBReply, error) {
	out := new(NewDBReply)
	err := c.cc.Invoke(ctx, "/threads.pb.API/NewDB", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) NewDBFromAddr(ctx context.Context, in *NewDBFromAddrRequest, opts ...grpc.CallOption) (*NewDBReply, error) {
	out := new(NewDBReply)
	err := c.cc.Invoke(ctx, "/threads.pb.API/NewDBFromAddr", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) ListDBs(ctx context.Context, in *ListDBsRequest, opts ...grpc.CallOption) (*ListDBsReply, error) {
	out := new(ListDBsReply)
	err := c.cc.Invoke(ctx, "/threads.pb.API/ListDBs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) GetDBInfo(ctx context.Context, in *GetDBInfoRequest, opts ...grpc.CallOption) (*GetDBInfoReply, error) {
	out := new(GetDBInfoReply)
	err := c.cc.Invoke(ctx, "/threads.pb.API/GetDBInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) DeleteDB(ctx context.Context, in *DeleteDBRequest, opts ...grpc.CallOption) (*DeleteDBReply, error) {
	out := new(DeleteDBReply)
	err := c.cc.Invoke(ctx, "/threads.pb.API/DeleteDB", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) NewCollection(ctx context.Context, in *NewCollectionRequest, opts ...grpc.CallOption) (*NewCollectionReply, error) {
	out := new(NewCollectionReply)
	err := c.cc.Invoke(ctx, "/threads.pb.API/NewCollection", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) UpdateCollection(ctx context.Context, in *UpdateCollectionRequest, opts ...grpc.CallOption) (*UpdateCollectionReply, error) {
	out := new(UpdateCollectionReply)
	err := c.cc.Invoke(ctx, "/threads.pb.API/UpdateCollection", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) DeleteCollection(ctx context.Context, in *DeleteCollectionRequest, opts ...grpc.CallOption) (*DeleteCollectionReply, error) {
	out := new(DeleteCollectionReply)
	err := c.cc.Invoke(ctx, "/threads.pb.API/DeleteCollection", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) GetCollectionInfo(ctx context.Context, in *GetCollectionInfoRequest, opts ...grpc.CallOption) (*GetCollectionInfoReply, error) {
	out := new(GetCollectionInfoReply)
	err := c.cc.Invoke(ctx, "/threads.pb.API/GetCollectionInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Deprecated: Do not use.
func (c *aPIClient) GetCollectionIndexes(ctx context.Context, in *GetCollectionIndexesRequest, opts ...grpc.CallOption) (*GetCollectionIndexesReply, error) {
	out := new(GetCollectionIndexesReply)
	err := c.cc.Invoke(ctx, "/threads.pb.API/GetCollectionIndexes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) ListCollections(ctx context.Context, in *ListCollectionsRequest, opts ...grpc.CallOption) (*ListCollectionsReply, error) {
	out := new(ListCollectionsReply)
	err := c.cc.Invoke(ctx, "/threads.pb.API/ListCollections", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateReply, error) {
	out := new(CreateReply)
	err := c.cc.Invoke(ctx, "/threads.pb.API/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) Verify(ctx context.Context, in *VerifyRequest, opts ...grpc.CallOption) (*VerifyReply, error) {
	out := new(VerifyReply)
	err := c.cc.Invoke(ctx, "/threads.pb.API/Verify", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) Save(ctx context.Context, in *SaveRequest, opts ...grpc.CallOption) (*SaveReply, error) {
	out := new(SaveReply)
	err := c.cc.Invoke(ctx, "/threads.pb.API/Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*DeleteReply, error) {
	out := new(DeleteReply)
	err := c.cc.Invoke(ctx, "/threads.pb.API/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) Has(ctx context.Context, in *HasRequest, opts ...grpc.CallOption) (*HasReply, error) {
	out := new(HasReply)
	err := c.cc.Invoke(ctx, "/threads.pb.API/Has", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) Find(ctx context.Context, in *FindRequest, opts ...grpc.CallOption) (*FindReply, error) {
	out := new(FindReply)
	err := c.cc.Invoke(ctx, "/threads.pb.API/Find", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) FindByID(ctx context.Context, in *FindByIDRequest, opts ...grpc.CallOption) (*FindByIDReply, error) {
	out := new(FindByIDReply)
	err := c.cc.Invoke(ctx, "/threads.pb.API/FindByID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) ReadTransaction(ctx context.Context, opts ...grpc.CallOption) (API_ReadTransactionClient, error) {
	stream, err := c.cc.NewStream(ctx, &_API_serviceDesc.Streams[1], "/threads.pb.API/ReadTransaction", opts...)
	if err != nil {
		return nil, err
	}
	x := &aPIReadTransactionClient{stream}
	return x, nil
}

type API_ReadTransactionClient interface {
	Send(*ReadTransactionRequest) error
	Recv() (*ReadTransactionReply, error)
	grpc.ClientStream
}

type aPIReadTransactionClient struct {
	grpc.ClientStream
}

func (x *aPIReadTransactionClient) Send(m *ReadTransactionRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *aPIReadTransactionClient) Recv() (*ReadTransactionReply, error) {
	m := new(ReadTransactionReply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *aPIClient) WriteTransaction(ctx context.Context, opts ...grpc.CallOption) (API_WriteTransactionClient, error) {
	stream, err := c.cc.NewStream(ctx, &_API_serviceDesc.Streams[2], "/threads.pb.API/WriteTransaction", opts...)
	if err != nil {
		return nil, err
	}
	x := &aPIWriteTransactionClient{stream}
	return x, nil
}

type API_WriteTransactionClient interface {
	Send(*WriteTransactionRequest) error
	Recv() (*WriteTransactionReply, error)
	grpc.ClientStream
}

type aPIWriteTransactionClient struct {
	grpc.ClientStream
}

func (x *aPIWriteTransactionClient) Send(m *WriteTransactionRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *aPIWriteTransactionClient) Recv() (*WriteTransactionReply, error) {
	m := new(WriteTransactionReply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *aPIClient) Listen(ctx context.Context, in *ListenRequest, opts ...grpc.CallOption) (API_ListenClient, error) {
	stream, err := c.cc.NewStream(ctx, &_API_serviceDesc.Streams[3], "/threads.pb.API/Listen", opts...)
	if err != nil {
		return nil, err
	}
	x := &aPIListenClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type API_ListenClient interface {
	Recv() (*ListenReply, error)
	grpc.ClientStream
}

type aPIListenClient struct {
	grpc.ClientStream
}

func (x *aPIListenClient) Recv() (*ListenReply, error) {
	m := new(ListenReply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// APIServer is the server API for API service.
type APIServer interface {
	GetToken(API_GetTokenServer) error
	NewDB(context.Context, *NewDBRequest) (*NewDBReply, error)
	NewDBFromAddr(context.Context, *NewDBFromAddrRequest) (*NewDBReply, error)
	ListDBs(context.Context, *ListDBsRequest) (*ListDBsReply, error)
	GetDBInfo(context.Context, *GetDBInfoRequest) (*GetDBInfoReply, error)
	DeleteDB(context.Context, *DeleteDBRequest) (*DeleteDBReply, error)
	NewCollection(context.Context, *NewCollectionRequest) (*NewCollectionReply, error)
	UpdateCollection(context.Context, *UpdateCollectionRequest) (*UpdateCollectionReply, error)
	DeleteCollection(context.Context, *DeleteCollectionRequest) (*DeleteCollectionReply, error)
	GetCollectionInfo(context.Context, *GetCollectionInfoRequest) (*GetCollectionInfoReply, error)
	GetCollectionIndexes(context.Context, *GetCollectionIndexesRequest) (*GetCollectionIndexesReply, error)
	ListCollections(context.Context, *ListCollectionsRequest) (*ListCollectionsReply, error)
	Create(context.Context, *CreateRequest) (*CreateReply, error)
	Verify(context.Context, *VerifyRequest) (*VerifyReply, error)
	Save(context.Context, *SaveRequest) (*SaveReply, error)
	Delete(context.Context, *DeleteRequest) (*DeleteReply, error)
	Has(context.Context, *HasRequest) (*HasReply, error)
	Find(context.Context, *FindRequest) (*FindReply, error)
	FindByID(context.Context, *FindByIDRequest) (*FindByIDReply, error)
	ReadTransaction(API_ReadTransactionServer) error
	WriteTransaction(API_WriteTransactionServer) error
	Listen(*ListenRequest, API_ListenServer) error
}

// UnimplementedAPIServer can be embedded to have forward compatible implementations.
type UnimplementedAPIServer struct {
}

func (*UnimplementedAPIServer) GetToken(srv API_GetTokenServer) error {
	return status.Errorf(codes.Unimplemented, "method GetToken not implemented")
}
func (*UnimplementedAPIServer) NewDB(ctx context.Context, req *NewDBRequest) (*NewDBReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NewDB not implemented")
}
func (*UnimplementedAPIServer) NewDBFromAddr(ctx context.Context, req *NewDBFromAddrRequest) (*NewDBReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NewDBFromAddr not implemented")
}
func (*UnimplementedAPIServer) ListDBs(ctx context.Context, req *ListDBsRequest) (*ListDBsReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListDBs not implemented")
}
func (*UnimplementedAPIServer) GetDBInfo(ctx context.Context, req *GetDBInfoRequest) (*GetDBInfoReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDBInfo not implemented")
}
func (*UnimplementedAPIServer) DeleteDB(ctx context.Context, req *DeleteDBRequest) (*DeleteDBReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteDB not implemented")
}
func (*UnimplementedAPIServer) NewCollection(ctx context.Context, req *NewCollectionRequest) (*NewCollectionReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NewCollection not implemented")
}
func (*UnimplementedAPIServer) UpdateCollection(ctx context.Context, req *UpdateCollectionRequest) (*UpdateCollectionReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateCollection not implemented")
}
func (*UnimplementedAPIServer) DeleteCollection(ctx context.Context, req *DeleteCollectionRequest) (*DeleteCollectionReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteCollection not implemented")
}
func (*UnimplementedAPIServer) GetCollectionInfo(ctx context.Context, req *GetCollectionInfoRequest) (*GetCollectionInfoReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCollectionInfo not implemented")
}
func (*UnimplementedAPIServer) GetCollectionIndexes(ctx context.Context, req *GetCollectionIndexesRequest) (*GetCollectionIndexesReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCollectionIndexes not implemented")
}
func (*UnimplementedAPIServer) ListCollections(ctx context.Context, req *ListCollectionsRequest) (*ListCollectionsReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListCollections not implemented")
}
func (*UnimplementedAPIServer) Create(ctx context.Context, req *CreateRequest) (*CreateReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedAPIServer) Verify(ctx context.Context, req *VerifyRequest) (*VerifyReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Verify not implemented")
}
func (*UnimplementedAPIServer) Save(ctx context.Context, req *SaveRequest) (*SaveReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Save not implemented")
}
func (*UnimplementedAPIServer) Delete(ctx context.Context, req *DeleteRequest) (*DeleteReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedAPIServer) Has(ctx context.Context, req *HasRequest) (*HasReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Has not implemented")
}
func (*UnimplementedAPIServer) Find(ctx context.Context, req *FindRequest) (*FindReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Find not implemented")
}
func (*UnimplementedAPIServer) FindByID(ctx context.Context, req *FindByIDRequest) (*FindByIDReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindByID not implemented")
}
func (*UnimplementedAPIServer) ReadTransaction(srv API_ReadTransactionServer) error {
	return status.Errorf(codes.Unimplemented, "method ReadTransaction not implemented")
}
func (*UnimplementedAPIServer) WriteTransaction(srv API_WriteTransactionServer) error {
	return status.Errorf(codes.Unimplemented, "method WriteTransaction not implemented")
}
func (*UnimplementedAPIServer) Listen(req *ListenRequest, srv API_ListenServer) error {
	return status.Errorf(codes.Unimplemented, "method Listen not implemented")
}

func RegisterAPIServer(s *grpc.Server, srv APIServer) {
	s.RegisterService(&_API_serviceDesc, srv)
}

func _API_GetToken_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(APIServer).GetToken(&aPIGetTokenServer{stream})
}

type API_GetTokenServer interface {
	Send(*GetTokenReply) error
	Recv() (*GetTokenRequest, error)
	grpc.ServerStream
}

type aPIGetTokenServer struct {
	grpc.ServerStream
}

func (x *aPIGetTokenServer) Send(m *GetTokenReply) error {
	return x.ServerStream.SendMsg(m)
}

func (x *aPIGetTokenServer) Recv() (*GetTokenRequest, error) {
	m := new(GetTokenRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _API_NewDB_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewDBRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).NewDB(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/threads.pb.API/NewDB",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).NewDB(ctx, req.(*NewDBRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_NewDBFromAddr_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewDBFromAddrRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).NewDBFromAddr(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/threads.pb.API/NewDBFromAddr",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).NewDBFromAddr(ctx, req.(*NewDBFromAddrRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_ListDBs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListDBsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).ListDBs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/threads.pb.API/ListDBs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).ListDBs(ctx, req.(*ListDBsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_GetDBInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDBInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).GetDBInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/threads.pb.API/GetDBInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).GetDBInfo(ctx, req.(*GetDBInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_DeleteDB_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteDBRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).DeleteDB(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/threads.pb.API/DeleteDB",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).DeleteDB(ctx, req.(*DeleteDBRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_NewCollection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewCollectionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).NewCollection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/threads.pb.API/NewCollection",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).NewCollection(ctx, req.(*NewCollectionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_UpdateCollection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateCollectionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).UpdateCollection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/threads.pb.API/UpdateCollection",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).UpdateCollection(ctx, req.(*UpdateCollectionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_DeleteCollection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteCollectionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).DeleteCollection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/threads.pb.API/DeleteCollection",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).DeleteCollection(ctx, req.(*DeleteCollectionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_GetCollectionInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCollectionInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).GetCollectionInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/threads.pb.API/GetCollectionInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).GetCollectionInfo(ctx, req.(*GetCollectionInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_GetCollectionIndexes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCollectionIndexesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).GetCollectionIndexes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/threads.pb.API/GetCollectionIndexes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).GetCollectionIndexes(ctx, req.(*GetCollectionIndexesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_ListCollections_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListCollectionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).ListCollections(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/threads.pb.API/ListCollections",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).ListCollections(ctx, req.(*ListCollectionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/threads.pb.API/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).Create(ctx, req.(*CreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_Verify_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VerifyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).Verify(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/threads.pb.API/Verify",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).Verify(ctx, req.(*VerifyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SaveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/threads.pb.API/Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).Save(ctx, req.(*SaveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/threads.pb.API/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).Delete(ctx, req.(*DeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_Has_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HasRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).Has(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/threads.pb.API/Has",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).Has(ctx, req.(*HasRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_Find_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).Find(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/threads.pb.API/Find",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).Find(ctx, req.(*FindRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_FindByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindByIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).FindByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/threads.pb.API/FindByID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).FindByID(ctx, req.(*FindByIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_ReadTransaction_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(APIServer).ReadTransaction(&aPIReadTransactionServer{stream})
}

type API_ReadTransactionServer interface {
	Send(*ReadTransactionReply) error
	Recv() (*ReadTransactionRequest, error)
	grpc.ServerStream
}

type aPIReadTransactionServer struct {
	grpc.ServerStream
}

func (x *aPIReadTransactionServer) Send(m *ReadTransactionReply) error {
	return x.ServerStream.SendMsg(m)
}

func (x *aPIReadTransactionServer) Recv() (*ReadTransactionRequest, error) {
	m := new(ReadTransactionRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _API_WriteTransaction_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(APIServer).WriteTransaction(&aPIWriteTransactionServer{stream})
}

type API_WriteTransactionServer interface {
	Send(*WriteTransactionReply) error
	Recv() (*WriteTransactionRequest, error)
	grpc.ServerStream
}

type aPIWriteTransactionServer struct {
	grpc.ServerStream
}

func (x *aPIWriteTransactionServer) Send(m *WriteTransactionReply) error {
	return x.ServerStream.SendMsg(m)
}

func (x *aPIWriteTransactionServer) Recv() (*WriteTransactionRequest, error) {
	m := new(WriteTransactionRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _API_Listen_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListenRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(APIServer).Listen(m, &aPIListenServer{stream})
}

type API_ListenServer interface {
	Send(*ListenReply) error
	grpc.ServerStream
}

type aPIListenServer struct {
	grpc.ServerStream
}

func (x *aPIListenServer) Send(m *ListenReply) error {
	return x.ServerStream.SendMsg(m)
}

var _API_serviceDesc = grpc.ServiceDesc{
	ServiceName: "threads.pb.API",
	HandlerType: (*APIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "NewDB",
			Handler:    _API_NewDB_Handler,
		},
		{
			MethodName: "NewDBFromAddr",
			Handler:    _API_NewDBFromAddr_Handler,
		},
		{
			MethodName: "ListDBs",
			Handler:    _API_ListDBs_Handler,
		},
		{
			MethodName: "GetDBInfo",
			Handler:    _API_GetDBInfo_Handler,
		},
		{
			MethodName: "DeleteDB",
			Handler:    _API_DeleteDB_Handler,
		},
		{
			MethodName: "NewCollection",
			Handler:    _API_NewCollection_Handler,
		},
		{
			MethodName: "UpdateCollection",
			Handler:    _API_UpdateCollection_Handler,
		},
		{
			MethodName: "DeleteCollection",
			Handler:    _API_DeleteCollection_Handler,
		},
		{
			MethodName: "GetCollectionInfo",
			Handler:    _API_GetCollectionInfo_Handler,
		},
		{
			MethodName: "GetCollectionIndexes",
			Handler:    _API_GetCollectionIndexes_Handler,
		},
		{
			MethodName: "ListCollections",
			Handler:    _API_ListCollections_Handler,
		},
		{
			MethodName: "Create",
			Handler:    _API_Create_Handler,
		},
		{
			MethodName: "Verify",
			Handler:    _API_Verify_Handler,
		},
		{
			MethodName: "Save",
			Handler:    _API_Save_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _API_Delete_Handler,
		},
		{
			MethodName: "Has",
			Handler:    _API_Has_Handler,
		},
		{
			MethodName: "Find",
			Handler:    _API_Find_Handler,
		},
		{
			MethodName: "FindByID",
			Handler:    _API_FindByID_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetToken",
			Handler:       _API_GetToken_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "ReadTransaction",
			Handler:       _API_ReadTransaction_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "WriteTransaction",
			Handler:       _API_WriteTransaction_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "Listen",
			Handler:       _API_Listen_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "threads.proto",
}
