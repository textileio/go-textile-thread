// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api.proto

package api_pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ListenRequest_Filter_Action int32

const (
	ListenRequest_Filter_ALL    ListenRequest_Filter_Action = 0
	ListenRequest_Filter_CREATE ListenRequest_Filter_Action = 1
	ListenRequest_Filter_SAVE   ListenRequest_Filter_Action = 2
	ListenRequest_Filter_DELETE ListenRequest_Filter_Action = 3
)

var ListenRequest_Filter_Action_name = map[int32]string{
	0: "ALL",
	1: "CREATE",
	2: "SAVE",
	3: "DELETE",
}

var ListenRequest_Filter_Action_value = map[string]int32{
	"ALL":    0,
	"CREATE": 1,
	"SAVE":   2,
	"DELETE": 3,
}

func (x ListenRequest_Filter_Action) String() string {
	return proto.EnumName(ListenRequest_Filter_Action_name, int32(x))
}

func (ListenRequest_Filter_Action) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{27, 0, 0}
}

type ListenReply_Action int32

const (
	ListenReply_CREATE ListenReply_Action = 0
	ListenReply_SAVE   ListenReply_Action = 1
	ListenReply_DELETE ListenReply_Action = 2
)

var ListenReply_Action_name = map[int32]string{
	0: "CREATE",
	1: "SAVE",
	2: "DELETE",
}

var ListenReply_Action_value = map[string]int32{
	"CREATE": 0,
	"SAVE":   1,
	"DELETE": 2,
}

func (x ListenReply_Action) String() string {
	return proto.EnumName(ListenReply_Action_name, int32(x))
}

func (ListenReply_Action) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{28, 0}
}

type NewDBRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewDBRequest) Reset()         { *m = NewDBRequest{} }
func (m *NewDBRequest) String() string { return proto.CompactTextString(m) }
func (*NewDBRequest) ProtoMessage()    {}
func (*NewDBRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{0}
}

func (m *NewDBRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewDBRequest.Unmarshal(m, b)
}
func (m *NewDBRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewDBRequest.Marshal(b, m, deterministic)
}
func (m *NewDBRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewDBRequest.Merge(m, src)
}
func (m *NewDBRequest) XXX_Size() int {
	return xxx_messageInfo_NewDBRequest.Size(m)
}
func (m *NewDBRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NewDBRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NewDBRequest proto.InternalMessageInfo

type NewDBReply struct {
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewDBReply) Reset()         { *m = NewDBReply{} }
func (m *NewDBReply) String() string { return proto.CompactTextString(m) }
func (*NewDBReply) ProtoMessage()    {}
func (*NewDBReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{1}
}

func (m *NewDBReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewDBReply.Unmarshal(m, b)
}
func (m *NewDBReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewDBReply.Marshal(b, m, deterministic)
}
func (m *NewDBReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewDBReply.Merge(m, src)
}
func (m *NewDBReply) XXX_Size() int {
	return xxx_messageInfo_NewDBReply.Size(m)
}
func (m *NewDBReply) XXX_DiscardUnknown() {
	xxx_messageInfo_NewDBReply.DiscardUnknown(m)
}

var xxx_messageInfo_NewDBReply proto.InternalMessageInfo

func (m *NewDBReply) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

type RegisterSchemaRequest struct {
	DBID                 string                               `protobuf:"bytes,1,opt,name=DBID,proto3" json:"DBID,omitempty"`
	Name                 string                               `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Schema               string                               `protobuf:"bytes,3,opt,name=schema,proto3" json:"schema,omitempty"`
	Indexes              []*RegisterSchemaRequest_IndexConfig `protobuf:"bytes,4,rep,name=indexes,proto3" json:"indexes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                             `json:"-"`
	XXX_unrecognized     []byte                               `json:"-"`
	XXX_sizecache        int32                                `json:"-"`
}

func (m *RegisterSchemaRequest) Reset()         { *m = RegisterSchemaRequest{} }
func (m *RegisterSchemaRequest) String() string { return proto.CompactTextString(m) }
func (*RegisterSchemaRequest) ProtoMessage()    {}
func (*RegisterSchemaRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{2}
}

func (m *RegisterSchemaRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterSchemaRequest.Unmarshal(m, b)
}
func (m *RegisterSchemaRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterSchemaRequest.Marshal(b, m, deterministic)
}
func (m *RegisterSchemaRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterSchemaRequest.Merge(m, src)
}
func (m *RegisterSchemaRequest) XXX_Size() int {
	return xxx_messageInfo_RegisterSchemaRequest.Size(m)
}
func (m *RegisterSchemaRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterSchemaRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterSchemaRequest proto.InternalMessageInfo

func (m *RegisterSchemaRequest) GetDBID() string {
	if m != nil {
		return m.DBID
	}
	return ""
}

func (m *RegisterSchemaRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *RegisterSchemaRequest) GetSchema() string {
	if m != nil {
		return m.Schema
	}
	return ""
}

func (m *RegisterSchemaRequest) GetIndexes() []*RegisterSchemaRequest_IndexConfig {
	if m != nil {
		return m.Indexes
	}
	return nil
}

type RegisterSchemaRequest_IndexConfig struct {
	Path                 string   `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Unique               bool     `protobuf:"varint,2,opt,name=unique,proto3" json:"unique,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterSchemaRequest_IndexConfig) Reset()         { *m = RegisterSchemaRequest_IndexConfig{} }
func (m *RegisterSchemaRequest_IndexConfig) String() string { return proto.CompactTextString(m) }
func (*RegisterSchemaRequest_IndexConfig) ProtoMessage()    {}
func (*RegisterSchemaRequest_IndexConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{2, 0}
}

func (m *RegisterSchemaRequest_IndexConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterSchemaRequest_IndexConfig.Unmarshal(m, b)
}
func (m *RegisterSchemaRequest_IndexConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterSchemaRequest_IndexConfig.Marshal(b, m, deterministic)
}
func (m *RegisterSchemaRequest_IndexConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterSchemaRequest_IndexConfig.Merge(m, src)
}
func (m *RegisterSchemaRequest_IndexConfig) XXX_Size() int {
	return xxx_messageInfo_RegisterSchemaRequest_IndexConfig.Size(m)
}
func (m *RegisterSchemaRequest_IndexConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterSchemaRequest_IndexConfig.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterSchemaRequest_IndexConfig proto.InternalMessageInfo

func (m *RegisterSchemaRequest_IndexConfig) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *RegisterSchemaRequest_IndexConfig) GetUnique() bool {
	if m != nil {
		return m.Unique
	}
	return false
}

type RegisterSchemaReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterSchemaReply) Reset()         { *m = RegisterSchemaReply{} }
func (m *RegisterSchemaReply) String() string { return proto.CompactTextString(m) }
func (*RegisterSchemaReply) ProtoMessage()    {}
func (*RegisterSchemaReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{3}
}

func (m *RegisterSchemaReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterSchemaReply.Unmarshal(m, b)
}
func (m *RegisterSchemaReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterSchemaReply.Marshal(b, m, deterministic)
}
func (m *RegisterSchemaReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterSchemaReply.Merge(m, src)
}
func (m *RegisterSchemaReply) XXX_Size() int {
	return xxx_messageInfo_RegisterSchemaReply.Size(m)
}
func (m *RegisterSchemaReply) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterSchemaReply.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterSchemaReply proto.InternalMessageInfo

type StartRequest struct {
	DBID                 string   `protobuf:"bytes,1,opt,name=DBID,proto3" json:"DBID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StartRequest) Reset()         { *m = StartRequest{} }
func (m *StartRequest) String() string { return proto.CompactTextString(m) }
func (*StartRequest) ProtoMessage()    {}
func (*StartRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{4}
}

func (m *StartRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartRequest.Unmarshal(m, b)
}
func (m *StartRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartRequest.Marshal(b, m, deterministic)
}
func (m *StartRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartRequest.Merge(m, src)
}
func (m *StartRequest) XXX_Size() int {
	return xxx_messageInfo_StartRequest.Size(m)
}
func (m *StartRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StartRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StartRequest proto.InternalMessageInfo

func (m *StartRequest) GetDBID() string {
	if m != nil {
		return m.DBID
	}
	return ""
}

type StartReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StartReply) Reset()         { *m = StartReply{} }
func (m *StartReply) String() string { return proto.CompactTextString(m) }
func (*StartReply) ProtoMessage()    {}
func (*StartReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{5}
}

func (m *StartReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartReply.Unmarshal(m, b)
}
func (m *StartReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartReply.Marshal(b, m, deterministic)
}
func (m *StartReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartReply.Merge(m, src)
}
func (m *StartReply) XXX_Size() int {
	return xxx_messageInfo_StartReply.Size(m)
}
func (m *StartReply) XXX_DiscardUnknown() {
	xxx_messageInfo_StartReply.DiscardUnknown(m)
}

var xxx_messageInfo_StartReply proto.InternalMessageInfo

type StartFromAddressRequest struct {
	DBID                 string   `protobuf:"bytes,1,opt,name=DBID,proto3" json:"DBID,omitempty"`
	Address              string   `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	FollowKey            []byte   `protobuf:"bytes,3,opt,name=followKey,proto3" json:"followKey,omitempty"`
	ReadKey              []byte   `protobuf:"bytes,4,opt,name=readKey,proto3" json:"readKey,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StartFromAddressRequest) Reset()         { *m = StartFromAddressRequest{} }
func (m *StartFromAddressRequest) String() string { return proto.CompactTextString(m) }
func (*StartFromAddressRequest) ProtoMessage()    {}
func (*StartFromAddressRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{6}
}

func (m *StartFromAddressRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartFromAddressRequest.Unmarshal(m, b)
}
func (m *StartFromAddressRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartFromAddressRequest.Marshal(b, m, deterministic)
}
func (m *StartFromAddressRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartFromAddressRequest.Merge(m, src)
}
func (m *StartFromAddressRequest) XXX_Size() int {
	return xxx_messageInfo_StartFromAddressRequest.Size(m)
}
func (m *StartFromAddressRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StartFromAddressRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StartFromAddressRequest proto.InternalMessageInfo

func (m *StartFromAddressRequest) GetDBID() string {
	if m != nil {
		return m.DBID
	}
	return ""
}

func (m *StartFromAddressRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *StartFromAddressRequest) GetFollowKey() []byte {
	if m != nil {
		return m.FollowKey
	}
	return nil
}

func (m *StartFromAddressRequest) GetReadKey() []byte {
	if m != nil {
		return m.ReadKey
	}
	return nil
}

type StartFromAddressReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StartFromAddressReply) Reset()         { *m = StartFromAddressReply{} }
func (m *StartFromAddressReply) String() string { return proto.CompactTextString(m) }
func (*StartFromAddressReply) ProtoMessage()    {}
func (*StartFromAddressReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{7}
}

func (m *StartFromAddressReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartFromAddressReply.Unmarshal(m, b)
}
func (m *StartFromAddressReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartFromAddressReply.Marshal(b, m, deterministic)
}
func (m *StartFromAddressReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartFromAddressReply.Merge(m, src)
}
func (m *StartFromAddressReply) XXX_Size() int {
	return xxx_messageInfo_StartFromAddressReply.Size(m)
}
func (m *StartFromAddressReply) XXX_DiscardUnknown() {
	xxx_messageInfo_StartFromAddressReply.DiscardUnknown(m)
}

var xxx_messageInfo_StartFromAddressReply proto.InternalMessageInfo

type GetDBLinkRequest struct {
	DBID                 string   `protobuf:"bytes,1,opt,name=DBID,proto3" json:"DBID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDBLinkRequest) Reset()         { *m = GetDBLinkRequest{} }
func (m *GetDBLinkRequest) String() string { return proto.CompactTextString(m) }
func (*GetDBLinkRequest) ProtoMessage()    {}
func (*GetDBLinkRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{8}
}

func (m *GetDBLinkRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDBLinkRequest.Unmarshal(m, b)
}
func (m *GetDBLinkRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDBLinkRequest.Marshal(b, m, deterministic)
}
func (m *GetDBLinkRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDBLinkRequest.Merge(m, src)
}
func (m *GetDBLinkRequest) XXX_Size() int {
	return xxx_messageInfo_GetDBLinkRequest.Size(m)
}
func (m *GetDBLinkRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDBLinkRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetDBLinkRequest proto.InternalMessageInfo

func (m *GetDBLinkRequest) GetDBID() string {
	if m != nil {
		return m.DBID
	}
	return ""
}

type GetDBLinkReply struct {
	Addresses            []string `protobuf:"bytes,1,rep,name=addresses,proto3" json:"addresses,omitempty"`
	FollowKey            []byte   `protobuf:"bytes,2,opt,name=followKey,proto3" json:"followKey,omitempty"`
	ReadKey              []byte   `protobuf:"bytes,3,opt,name=readKey,proto3" json:"readKey,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDBLinkReply) Reset()         { *m = GetDBLinkReply{} }
func (m *GetDBLinkReply) String() string { return proto.CompactTextString(m) }
func (*GetDBLinkReply) ProtoMessage()    {}
func (*GetDBLinkReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{9}
}

func (m *GetDBLinkReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDBLinkReply.Unmarshal(m, b)
}
func (m *GetDBLinkReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDBLinkReply.Marshal(b, m, deterministic)
}
func (m *GetDBLinkReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDBLinkReply.Merge(m, src)
}
func (m *GetDBLinkReply) XXX_Size() int {
	return xxx_messageInfo_GetDBLinkReply.Size(m)
}
func (m *GetDBLinkReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDBLinkReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetDBLinkReply proto.InternalMessageInfo

func (m *GetDBLinkReply) GetAddresses() []string {
	if m != nil {
		return m.Addresses
	}
	return nil
}

func (m *GetDBLinkReply) GetFollowKey() []byte {
	if m != nil {
		return m.FollowKey
	}
	return nil
}

func (m *GetDBLinkReply) GetReadKey() []byte {
	if m != nil {
		return m.ReadKey
	}
	return nil
}

type ModelCreateRequest struct {
	DBID                 string   `protobuf:"bytes,1,opt,name=DBID,proto3" json:"DBID,omitempty"`
	ModelName            string   `protobuf:"bytes,2,opt,name=modelName,proto3" json:"modelName,omitempty"`
	Values               []string `protobuf:"bytes,3,rep,name=values,proto3" json:"values,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ModelCreateRequest) Reset()         { *m = ModelCreateRequest{} }
func (m *ModelCreateRequest) String() string { return proto.CompactTextString(m) }
func (*ModelCreateRequest) ProtoMessage()    {}
func (*ModelCreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{10}
}

func (m *ModelCreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ModelCreateRequest.Unmarshal(m, b)
}
func (m *ModelCreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ModelCreateRequest.Marshal(b, m, deterministic)
}
func (m *ModelCreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ModelCreateRequest.Merge(m, src)
}
func (m *ModelCreateRequest) XXX_Size() int {
	return xxx_messageInfo_ModelCreateRequest.Size(m)
}
func (m *ModelCreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ModelCreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ModelCreateRequest proto.InternalMessageInfo

func (m *ModelCreateRequest) GetDBID() string {
	if m != nil {
		return m.DBID
	}
	return ""
}

func (m *ModelCreateRequest) GetModelName() string {
	if m != nil {
		return m.ModelName
	}
	return ""
}

func (m *ModelCreateRequest) GetValues() []string {
	if m != nil {
		return m.Values
	}
	return nil
}

type ModelCreateReply struct {
	Entities             []string `protobuf:"bytes,1,rep,name=entities,proto3" json:"entities,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ModelCreateReply) Reset()         { *m = ModelCreateReply{} }
func (m *ModelCreateReply) String() string { return proto.CompactTextString(m) }
func (*ModelCreateReply) ProtoMessage()    {}
func (*ModelCreateReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{11}
}

func (m *ModelCreateReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ModelCreateReply.Unmarshal(m, b)
}
func (m *ModelCreateReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ModelCreateReply.Marshal(b, m, deterministic)
}
func (m *ModelCreateReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ModelCreateReply.Merge(m, src)
}
func (m *ModelCreateReply) XXX_Size() int {
	return xxx_messageInfo_ModelCreateReply.Size(m)
}
func (m *ModelCreateReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ModelCreateReply.DiscardUnknown(m)
}

var xxx_messageInfo_ModelCreateReply proto.InternalMessageInfo

func (m *ModelCreateReply) GetEntities() []string {
	if m != nil {
		return m.Entities
	}
	return nil
}

type ModelSaveRequest struct {
	DBID                 string   `protobuf:"bytes,1,opt,name=DBID,proto3" json:"DBID,omitempty"`
	ModelName            string   `protobuf:"bytes,2,opt,name=modelName,proto3" json:"modelName,omitempty"`
	Values               []string `protobuf:"bytes,3,rep,name=values,proto3" json:"values,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ModelSaveRequest) Reset()         { *m = ModelSaveRequest{} }
func (m *ModelSaveRequest) String() string { return proto.CompactTextString(m) }
func (*ModelSaveRequest) ProtoMessage()    {}
func (*ModelSaveRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{12}
}

func (m *ModelSaveRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ModelSaveRequest.Unmarshal(m, b)
}
func (m *ModelSaveRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ModelSaveRequest.Marshal(b, m, deterministic)
}
func (m *ModelSaveRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ModelSaveRequest.Merge(m, src)
}
func (m *ModelSaveRequest) XXX_Size() int {
	return xxx_messageInfo_ModelSaveRequest.Size(m)
}
func (m *ModelSaveRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ModelSaveRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ModelSaveRequest proto.InternalMessageInfo

func (m *ModelSaveRequest) GetDBID() string {
	if m != nil {
		return m.DBID
	}
	return ""
}

func (m *ModelSaveRequest) GetModelName() string {
	if m != nil {
		return m.ModelName
	}
	return ""
}

func (m *ModelSaveRequest) GetValues() []string {
	if m != nil {
		return m.Values
	}
	return nil
}

type ModelSaveReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ModelSaveReply) Reset()         { *m = ModelSaveReply{} }
func (m *ModelSaveReply) String() string { return proto.CompactTextString(m) }
func (*ModelSaveReply) ProtoMessage()    {}
func (*ModelSaveReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{13}
}

func (m *ModelSaveReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ModelSaveReply.Unmarshal(m, b)
}
func (m *ModelSaveReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ModelSaveReply.Marshal(b, m, deterministic)
}
func (m *ModelSaveReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ModelSaveReply.Merge(m, src)
}
func (m *ModelSaveReply) XXX_Size() int {
	return xxx_messageInfo_ModelSaveReply.Size(m)
}
func (m *ModelSaveReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ModelSaveReply.DiscardUnknown(m)
}

var xxx_messageInfo_ModelSaveReply proto.InternalMessageInfo

type ModelDeleteRequest struct {
	DBID                 string   `protobuf:"bytes,1,opt,name=DBID,proto3" json:"DBID,omitempty"`
	ModelName            string   `protobuf:"bytes,2,opt,name=modelName,proto3" json:"modelName,omitempty"`
	EntityIDs            []string `protobuf:"bytes,3,rep,name=entityIDs,proto3" json:"entityIDs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ModelDeleteRequest) Reset()         { *m = ModelDeleteRequest{} }
func (m *ModelDeleteRequest) String() string { return proto.CompactTextString(m) }
func (*ModelDeleteRequest) ProtoMessage()    {}
func (*ModelDeleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{14}
}

func (m *ModelDeleteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ModelDeleteRequest.Unmarshal(m, b)
}
func (m *ModelDeleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ModelDeleteRequest.Marshal(b, m, deterministic)
}
func (m *ModelDeleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ModelDeleteRequest.Merge(m, src)
}
func (m *ModelDeleteRequest) XXX_Size() int {
	return xxx_messageInfo_ModelDeleteRequest.Size(m)
}
func (m *ModelDeleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ModelDeleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ModelDeleteRequest proto.InternalMessageInfo

func (m *ModelDeleteRequest) GetDBID() string {
	if m != nil {
		return m.DBID
	}
	return ""
}

func (m *ModelDeleteRequest) GetModelName() string {
	if m != nil {
		return m.ModelName
	}
	return ""
}

func (m *ModelDeleteRequest) GetEntityIDs() []string {
	if m != nil {
		return m.EntityIDs
	}
	return nil
}

type ModelDeleteReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ModelDeleteReply) Reset()         { *m = ModelDeleteReply{} }
func (m *ModelDeleteReply) String() string { return proto.CompactTextString(m) }
func (*ModelDeleteReply) ProtoMessage()    {}
func (*ModelDeleteReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{15}
}

func (m *ModelDeleteReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ModelDeleteReply.Unmarshal(m, b)
}
func (m *ModelDeleteReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ModelDeleteReply.Marshal(b, m, deterministic)
}
func (m *ModelDeleteReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ModelDeleteReply.Merge(m, src)
}
func (m *ModelDeleteReply) XXX_Size() int {
	return xxx_messageInfo_ModelDeleteReply.Size(m)
}
func (m *ModelDeleteReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ModelDeleteReply.DiscardUnknown(m)
}

var xxx_messageInfo_ModelDeleteReply proto.InternalMessageInfo

type ModelHasRequest struct {
	DBID                 string   `protobuf:"bytes,1,opt,name=DBID,proto3" json:"DBID,omitempty"`
	ModelName            string   `protobuf:"bytes,2,opt,name=modelName,proto3" json:"modelName,omitempty"`
	EntityIDs            []string `protobuf:"bytes,3,rep,name=entityIDs,proto3" json:"entityIDs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ModelHasRequest) Reset()         { *m = ModelHasRequest{} }
func (m *ModelHasRequest) String() string { return proto.CompactTextString(m) }
func (*ModelHasRequest) ProtoMessage()    {}
func (*ModelHasRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{16}
}

func (m *ModelHasRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ModelHasRequest.Unmarshal(m, b)
}
func (m *ModelHasRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ModelHasRequest.Marshal(b, m, deterministic)
}
func (m *ModelHasRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ModelHasRequest.Merge(m, src)
}
func (m *ModelHasRequest) XXX_Size() int {
	return xxx_messageInfo_ModelHasRequest.Size(m)
}
func (m *ModelHasRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ModelHasRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ModelHasRequest proto.InternalMessageInfo

func (m *ModelHasRequest) GetDBID() string {
	if m != nil {
		return m.DBID
	}
	return ""
}

func (m *ModelHasRequest) GetModelName() string {
	if m != nil {
		return m.ModelName
	}
	return ""
}

func (m *ModelHasRequest) GetEntityIDs() []string {
	if m != nil {
		return m.EntityIDs
	}
	return nil
}

type ModelHasReply struct {
	Exists               bool     `protobuf:"varint,1,opt,name=exists,proto3" json:"exists,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ModelHasReply) Reset()         { *m = ModelHasReply{} }
func (m *ModelHasReply) String() string { return proto.CompactTextString(m) }
func (*ModelHasReply) ProtoMessage()    {}
func (*ModelHasReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{17}
}

func (m *ModelHasReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ModelHasReply.Unmarshal(m, b)
}
func (m *ModelHasReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ModelHasReply.Marshal(b, m, deterministic)
}
func (m *ModelHasReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ModelHasReply.Merge(m, src)
}
func (m *ModelHasReply) XXX_Size() int {
	return xxx_messageInfo_ModelHasReply.Size(m)
}
func (m *ModelHasReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ModelHasReply.DiscardUnknown(m)
}

var xxx_messageInfo_ModelHasReply proto.InternalMessageInfo

func (m *ModelHasReply) GetExists() bool {
	if m != nil {
		return m.Exists
	}
	return false
}

type ModelFindRequest struct {
	DBID                 string   `protobuf:"bytes,1,opt,name=DBID,proto3" json:"DBID,omitempty"`
	ModelName            string   `protobuf:"bytes,2,opt,name=modelName,proto3" json:"modelName,omitempty"`
	QueryJSON            []byte   `protobuf:"bytes,3,opt,name=queryJSON,proto3" json:"queryJSON,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ModelFindRequest) Reset()         { *m = ModelFindRequest{} }
func (m *ModelFindRequest) String() string { return proto.CompactTextString(m) }
func (*ModelFindRequest) ProtoMessage()    {}
func (*ModelFindRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{18}
}

func (m *ModelFindRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ModelFindRequest.Unmarshal(m, b)
}
func (m *ModelFindRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ModelFindRequest.Marshal(b, m, deterministic)
}
func (m *ModelFindRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ModelFindRequest.Merge(m, src)
}
func (m *ModelFindRequest) XXX_Size() int {
	return xxx_messageInfo_ModelFindRequest.Size(m)
}
func (m *ModelFindRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ModelFindRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ModelFindRequest proto.InternalMessageInfo

func (m *ModelFindRequest) GetDBID() string {
	if m != nil {
		return m.DBID
	}
	return ""
}

func (m *ModelFindRequest) GetModelName() string {
	if m != nil {
		return m.ModelName
	}
	return ""
}

func (m *ModelFindRequest) GetQueryJSON() []byte {
	if m != nil {
		return m.QueryJSON
	}
	return nil
}

type ModelFindReply struct {
	Entities             [][]byte `protobuf:"bytes,1,rep,name=entities,proto3" json:"entities,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ModelFindReply) Reset()         { *m = ModelFindReply{} }
func (m *ModelFindReply) String() string { return proto.CompactTextString(m) }
func (*ModelFindReply) ProtoMessage()    {}
func (*ModelFindReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{19}
}

func (m *ModelFindReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ModelFindReply.Unmarshal(m, b)
}
func (m *ModelFindReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ModelFindReply.Marshal(b, m, deterministic)
}
func (m *ModelFindReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ModelFindReply.Merge(m, src)
}
func (m *ModelFindReply) XXX_Size() int {
	return xxx_messageInfo_ModelFindReply.Size(m)
}
func (m *ModelFindReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ModelFindReply.DiscardUnknown(m)
}

var xxx_messageInfo_ModelFindReply proto.InternalMessageInfo

func (m *ModelFindReply) GetEntities() [][]byte {
	if m != nil {
		return m.Entities
	}
	return nil
}

type ModelFindByIDRequest struct {
	DBID                 string   `protobuf:"bytes,1,opt,name=DBID,proto3" json:"DBID,omitempty"`
	ModelName            string   `protobuf:"bytes,2,opt,name=modelName,proto3" json:"modelName,omitempty"`
	EntityID             string   `protobuf:"bytes,3,opt,name=entityID,proto3" json:"entityID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ModelFindByIDRequest) Reset()         { *m = ModelFindByIDRequest{} }
func (m *ModelFindByIDRequest) String() string { return proto.CompactTextString(m) }
func (*ModelFindByIDRequest) ProtoMessage()    {}
func (*ModelFindByIDRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{20}
}

func (m *ModelFindByIDRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ModelFindByIDRequest.Unmarshal(m, b)
}
func (m *ModelFindByIDRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ModelFindByIDRequest.Marshal(b, m, deterministic)
}
func (m *ModelFindByIDRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ModelFindByIDRequest.Merge(m, src)
}
func (m *ModelFindByIDRequest) XXX_Size() int {
	return xxx_messageInfo_ModelFindByIDRequest.Size(m)
}
func (m *ModelFindByIDRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ModelFindByIDRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ModelFindByIDRequest proto.InternalMessageInfo

func (m *ModelFindByIDRequest) GetDBID() string {
	if m != nil {
		return m.DBID
	}
	return ""
}

func (m *ModelFindByIDRequest) GetModelName() string {
	if m != nil {
		return m.ModelName
	}
	return ""
}

func (m *ModelFindByIDRequest) GetEntityID() string {
	if m != nil {
		return m.EntityID
	}
	return ""
}

type ModelFindByIDReply struct {
	Entity               string   `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ModelFindByIDReply) Reset()         { *m = ModelFindByIDReply{} }
func (m *ModelFindByIDReply) String() string { return proto.CompactTextString(m) }
func (*ModelFindByIDReply) ProtoMessage()    {}
func (*ModelFindByIDReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{21}
}

func (m *ModelFindByIDReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ModelFindByIDReply.Unmarshal(m, b)
}
func (m *ModelFindByIDReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ModelFindByIDReply.Marshal(b, m, deterministic)
}
func (m *ModelFindByIDReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ModelFindByIDReply.Merge(m, src)
}
func (m *ModelFindByIDReply) XXX_Size() int {
	return xxx_messageInfo_ModelFindByIDReply.Size(m)
}
func (m *ModelFindByIDReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ModelFindByIDReply.DiscardUnknown(m)
}

var xxx_messageInfo_ModelFindByIDReply proto.InternalMessageInfo

func (m *ModelFindByIDReply) GetEntity() string {
	if m != nil {
		return m.Entity
	}
	return ""
}

type StartTransactionRequest struct {
	DBID                 string   `protobuf:"bytes,1,opt,name=DBID,proto3" json:"DBID,omitempty"`
	ModelName            string   `protobuf:"bytes,2,opt,name=modelName,proto3" json:"modelName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StartTransactionRequest) Reset()         { *m = StartTransactionRequest{} }
func (m *StartTransactionRequest) String() string { return proto.CompactTextString(m) }
func (*StartTransactionRequest) ProtoMessage()    {}
func (*StartTransactionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{22}
}

func (m *StartTransactionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartTransactionRequest.Unmarshal(m, b)
}
func (m *StartTransactionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartTransactionRequest.Marshal(b, m, deterministic)
}
func (m *StartTransactionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartTransactionRequest.Merge(m, src)
}
func (m *StartTransactionRequest) XXX_Size() int {
	return xxx_messageInfo_StartTransactionRequest.Size(m)
}
func (m *StartTransactionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StartTransactionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StartTransactionRequest proto.InternalMessageInfo

func (m *StartTransactionRequest) GetDBID() string {
	if m != nil {
		return m.DBID
	}
	return ""
}

func (m *StartTransactionRequest) GetModelName() string {
	if m != nil {
		return m.ModelName
	}
	return ""
}

type ReadTransactionRequest struct {
	// Types that are valid to be assigned to Option:
	//	*ReadTransactionRequest_StartTransactionRequest
	//	*ReadTransactionRequest_ModelHasRequest
	//	*ReadTransactionRequest_ModelFindRequest
	//	*ReadTransactionRequest_ModelFindByIDRequest
	Option               isReadTransactionRequest_Option `protobuf_oneof:"option"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *ReadTransactionRequest) Reset()         { *m = ReadTransactionRequest{} }
func (m *ReadTransactionRequest) String() string { return proto.CompactTextString(m) }
func (*ReadTransactionRequest) ProtoMessage()    {}
func (*ReadTransactionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{23}
}

func (m *ReadTransactionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadTransactionRequest.Unmarshal(m, b)
}
func (m *ReadTransactionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadTransactionRequest.Marshal(b, m, deterministic)
}
func (m *ReadTransactionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadTransactionRequest.Merge(m, src)
}
func (m *ReadTransactionRequest) XXX_Size() int {
	return xxx_messageInfo_ReadTransactionRequest.Size(m)
}
func (m *ReadTransactionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadTransactionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReadTransactionRequest proto.InternalMessageInfo

type isReadTransactionRequest_Option interface {
	isReadTransactionRequest_Option()
}

type ReadTransactionRequest_StartTransactionRequest struct {
	StartTransactionRequest *StartTransactionRequest `protobuf:"bytes,1,opt,name=startTransactionRequest,proto3,oneof"`
}

type ReadTransactionRequest_ModelHasRequest struct {
	ModelHasRequest *ModelHasRequest `protobuf:"bytes,2,opt,name=modelHasRequest,proto3,oneof"`
}

type ReadTransactionRequest_ModelFindRequest struct {
	ModelFindRequest *ModelFindRequest `protobuf:"bytes,3,opt,name=modelFindRequest,proto3,oneof"`
}

type ReadTransactionRequest_ModelFindByIDRequest struct {
	ModelFindByIDRequest *ModelFindByIDRequest `protobuf:"bytes,4,opt,name=modelFindByIDRequest,proto3,oneof"`
}

func (*ReadTransactionRequest_StartTransactionRequest) isReadTransactionRequest_Option() {}

func (*ReadTransactionRequest_ModelHasRequest) isReadTransactionRequest_Option() {}

func (*ReadTransactionRequest_ModelFindRequest) isReadTransactionRequest_Option() {}

func (*ReadTransactionRequest_ModelFindByIDRequest) isReadTransactionRequest_Option() {}

func (m *ReadTransactionRequest) GetOption() isReadTransactionRequest_Option {
	if m != nil {
		return m.Option
	}
	return nil
}

func (m *ReadTransactionRequest) GetStartTransactionRequest() *StartTransactionRequest {
	if x, ok := m.GetOption().(*ReadTransactionRequest_StartTransactionRequest); ok {
		return x.StartTransactionRequest
	}
	return nil
}

func (m *ReadTransactionRequest) GetModelHasRequest() *ModelHasRequest {
	if x, ok := m.GetOption().(*ReadTransactionRequest_ModelHasRequest); ok {
		return x.ModelHasRequest
	}
	return nil
}

func (m *ReadTransactionRequest) GetModelFindRequest() *ModelFindRequest {
	if x, ok := m.GetOption().(*ReadTransactionRequest_ModelFindRequest); ok {
		return x.ModelFindRequest
	}
	return nil
}

func (m *ReadTransactionRequest) GetModelFindByIDRequest() *ModelFindByIDRequest {
	if x, ok := m.GetOption().(*ReadTransactionRequest_ModelFindByIDRequest); ok {
		return x.ModelFindByIDRequest
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ReadTransactionRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ReadTransactionRequest_StartTransactionRequest)(nil),
		(*ReadTransactionRequest_ModelHasRequest)(nil),
		(*ReadTransactionRequest_ModelFindRequest)(nil),
		(*ReadTransactionRequest_ModelFindByIDRequest)(nil),
	}
}

type ReadTransactionReply struct {
	// Types that are valid to be assigned to Option:
	//	*ReadTransactionReply_ModelHasReply
	//	*ReadTransactionReply_ModelFindReply
	//	*ReadTransactionReply_ModelFindByIDReply
	Option               isReadTransactionReply_Option `protobuf_oneof:"option"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *ReadTransactionReply) Reset()         { *m = ReadTransactionReply{} }
func (m *ReadTransactionReply) String() string { return proto.CompactTextString(m) }
func (*ReadTransactionReply) ProtoMessage()    {}
func (*ReadTransactionReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{24}
}

func (m *ReadTransactionReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadTransactionReply.Unmarshal(m, b)
}
func (m *ReadTransactionReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadTransactionReply.Marshal(b, m, deterministic)
}
func (m *ReadTransactionReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadTransactionReply.Merge(m, src)
}
func (m *ReadTransactionReply) XXX_Size() int {
	return xxx_messageInfo_ReadTransactionReply.Size(m)
}
func (m *ReadTransactionReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadTransactionReply.DiscardUnknown(m)
}

var xxx_messageInfo_ReadTransactionReply proto.InternalMessageInfo

type isReadTransactionReply_Option interface {
	isReadTransactionReply_Option()
}

type ReadTransactionReply_ModelHasReply struct {
	ModelHasReply *ModelHasReply `protobuf:"bytes,1,opt,name=modelHasReply,proto3,oneof"`
}

type ReadTransactionReply_ModelFindReply struct {
	ModelFindReply *ModelFindReply `protobuf:"bytes,2,opt,name=modelFindReply,proto3,oneof"`
}

type ReadTransactionReply_ModelFindByIDReply struct {
	ModelFindByIDReply *ModelFindByIDReply `protobuf:"bytes,3,opt,name=modelFindByIDReply,proto3,oneof"`
}

func (*ReadTransactionReply_ModelHasReply) isReadTransactionReply_Option() {}

func (*ReadTransactionReply_ModelFindReply) isReadTransactionReply_Option() {}

func (*ReadTransactionReply_ModelFindByIDReply) isReadTransactionReply_Option() {}

func (m *ReadTransactionReply) GetOption() isReadTransactionReply_Option {
	if m != nil {
		return m.Option
	}
	return nil
}

func (m *ReadTransactionReply) GetModelHasReply() *ModelHasReply {
	if x, ok := m.GetOption().(*ReadTransactionReply_ModelHasReply); ok {
		return x.ModelHasReply
	}
	return nil
}

func (m *ReadTransactionReply) GetModelFindReply() *ModelFindReply {
	if x, ok := m.GetOption().(*ReadTransactionReply_ModelFindReply); ok {
		return x.ModelFindReply
	}
	return nil
}

func (m *ReadTransactionReply) GetModelFindByIDReply() *ModelFindByIDReply {
	if x, ok := m.GetOption().(*ReadTransactionReply_ModelFindByIDReply); ok {
		return x.ModelFindByIDReply
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ReadTransactionReply) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ReadTransactionReply_ModelHasReply)(nil),
		(*ReadTransactionReply_ModelFindReply)(nil),
		(*ReadTransactionReply_ModelFindByIDReply)(nil),
	}
}

type WriteTransactionRequest struct {
	// Types that are valid to be assigned to Option:
	//	*WriteTransactionRequest_StartTransactionRequest
	//	*WriteTransactionRequest_ModelCreateRequest
	//	*WriteTransactionRequest_ModelSaveRequest
	//	*WriteTransactionRequest_ModelDeleteRequest
	//	*WriteTransactionRequest_ModelHasRequest
	//	*WriteTransactionRequest_ModelFindRequest
	//	*WriteTransactionRequest_ModelFindByIDRequest
	Option               isWriteTransactionRequest_Option `protobuf_oneof:"option"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *WriteTransactionRequest) Reset()         { *m = WriteTransactionRequest{} }
func (m *WriteTransactionRequest) String() string { return proto.CompactTextString(m) }
func (*WriteTransactionRequest) ProtoMessage()    {}
func (*WriteTransactionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{25}
}

func (m *WriteTransactionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteTransactionRequest.Unmarshal(m, b)
}
func (m *WriteTransactionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteTransactionRequest.Marshal(b, m, deterministic)
}
func (m *WriteTransactionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteTransactionRequest.Merge(m, src)
}
func (m *WriteTransactionRequest) XXX_Size() int {
	return xxx_messageInfo_WriteTransactionRequest.Size(m)
}
func (m *WriteTransactionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteTransactionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WriteTransactionRequest proto.InternalMessageInfo

type isWriteTransactionRequest_Option interface {
	isWriteTransactionRequest_Option()
}

type WriteTransactionRequest_StartTransactionRequest struct {
	StartTransactionRequest *StartTransactionRequest `protobuf:"bytes,1,opt,name=startTransactionRequest,proto3,oneof"`
}

type WriteTransactionRequest_ModelCreateRequest struct {
	ModelCreateRequest *ModelCreateRequest `protobuf:"bytes,2,opt,name=modelCreateRequest,proto3,oneof"`
}

type WriteTransactionRequest_ModelSaveRequest struct {
	ModelSaveRequest *ModelSaveRequest `protobuf:"bytes,3,opt,name=modelSaveRequest,proto3,oneof"`
}

type WriteTransactionRequest_ModelDeleteRequest struct {
	ModelDeleteRequest *ModelDeleteRequest `protobuf:"bytes,4,opt,name=modelDeleteRequest,proto3,oneof"`
}

type WriteTransactionRequest_ModelHasRequest struct {
	ModelHasRequest *ModelHasRequest `protobuf:"bytes,5,opt,name=modelHasRequest,proto3,oneof"`
}

type WriteTransactionRequest_ModelFindRequest struct {
	ModelFindRequest *ModelFindRequest `protobuf:"bytes,6,opt,name=modelFindRequest,proto3,oneof"`
}

type WriteTransactionRequest_ModelFindByIDRequest struct {
	ModelFindByIDRequest *ModelFindByIDRequest `protobuf:"bytes,7,opt,name=modelFindByIDRequest,proto3,oneof"`
}

func (*WriteTransactionRequest_StartTransactionRequest) isWriteTransactionRequest_Option() {}

func (*WriteTransactionRequest_ModelCreateRequest) isWriteTransactionRequest_Option() {}

func (*WriteTransactionRequest_ModelSaveRequest) isWriteTransactionRequest_Option() {}

func (*WriteTransactionRequest_ModelDeleteRequest) isWriteTransactionRequest_Option() {}

func (*WriteTransactionRequest_ModelHasRequest) isWriteTransactionRequest_Option() {}

func (*WriteTransactionRequest_ModelFindRequest) isWriteTransactionRequest_Option() {}

func (*WriteTransactionRequest_ModelFindByIDRequest) isWriteTransactionRequest_Option() {}

func (m *WriteTransactionRequest) GetOption() isWriteTransactionRequest_Option {
	if m != nil {
		return m.Option
	}
	return nil
}

func (m *WriteTransactionRequest) GetStartTransactionRequest() *StartTransactionRequest {
	if x, ok := m.GetOption().(*WriteTransactionRequest_StartTransactionRequest); ok {
		return x.StartTransactionRequest
	}
	return nil
}

func (m *WriteTransactionRequest) GetModelCreateRequest() *ModelCreateRequest {
	if x, ok := m.GetOption().(*WriteTransactionRequest_ModelCreateRequest); ok {
		return x.ModelCreateRequest
	}
	return nil
}

func (m *WriteTransactionRequest) GetModelSaveRequest() *ModelSaveRequest {
	if x, ok := m.GetOption().(*WriteTransactionRequest_ModelSaveRequest); ok {
		return x.ModelSaveRequest
	}
	return nil
}

func (m *WriteTransactionRequest) GetModelDeleteRequest() *ModelDeleteRequest {
	if x, ok := m.GetOption().(*WriteTransactionRequest_ModelDeleteRequest); ok {
		return x.ModelDeleteRequest
	}
	return nil
}

func (m *WriteTransactionRequest) GetModelHasRequest() *ModelHasRequest {
	if x, ok := m.GetOption().(*WriteTransactionRequest_ModelHasRequest); ok {
		return x.ModelHasRequest
	}
	return nil
}

func (m *WriteTransactionRequest) GetModelFindRequest() *ModelFindRequest {
	if x, ok := m.GetOption().(*WriteTransactionRequest_ModelFindRequest); ok {
		return x.ModelFindRequest
	}
	return nil
}

func (m *WriteTransactionRequest) GetModelFindByIDRequest() *ModelFindByIDRequest {
	if x, ok := m.GetOption().(*WriteTransactionRequest_ModelFindByIDRequest); ok {
		return x.ModelFindByIDRequest
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*WriteTransactionRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*WriteTransactionRequest_StartTransactionRequest)(nil),
		(*WriteTransactionRequest_ModelCreateRequest)(nil),
		(*WriteTransactionRequest_ModelSaveRequest)(nil),
		(*WriteTransactionRequest_ModelDeleteRequest)(nil),
		(*WriteTransactionRequest_ModelHasRequest)(nil),
		(*WriteTransactionRequest_ModelFindRequest)(nil),
		(*WriteTransactionRequest_ModelFindByIDRequest)(nil),
	}
}

type WriteTransactionReply struct {
	// Types that are valid to be assigned to Option:
	//	*WriteTransactionReply_ModelCreateReply
	//	*WriteTransactionReply_ModelSaveReply
	//	*WriteTransactionReply_ModelDeleteReply
	//	*WriteTransactionReply_ModelHasReply
	//	*WriteTransactionReply_ModelFindReply
	//	*WriteTransactionReply_ModelFindByIDReply
	Option               isWriteTransactionReply_Option `protobuf_oneof:"option"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *WriteTransactionReply) Reset()         { *m = WriteTransactionReply{} }
func (m *WriteTransactionReply) String() string { return proto.CompactTextString(m) }
func (*WriteTransactionReply) ProtoMessage()    {}
func (*WriteTransactionReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{26}
}

func (m *WriteTransactionReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteTransactionReply.Unmarshal(m, b)
}
func (m *WriteTransactionReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteTransactionReply.Marshal(b, m, deterministic)
}
func (m *WriteTransactionReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteTransactionReply.Merge(m, src)
}
func (m *WriteTransactionReply) XXX_Size() int {
	return xxx_messageInfo_WriteTransactionReply.Size(m)
}
func (m *WriteTransactionReply) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteTransactionReply.DiscardUnknown(m)
}

var xxx_messageInfo_WriteTransactionReply proto.InternalMessageInfo

type isWriteTransactionReply_Option interface {
	isWriteTransactionReply_Option()
}

type WriteTransactionReply_ModelCreateReply struct {
	ModelCreateReply *ModelCreateReply `protobuf:"bytes,1,opt,name=modelCreateReply,proto3,oneof"`
}

type WriteTransactionReply_ModelSaveReply struct {
	ModelSaveReply *ModelSaveReply `protobuf:"bytes,2,opt,name=modelSaveReply,proto3,oneof"`
}

type WriteTransactionReply_ModelDeleteReply struct {
	ModelDeleteReply *ModelDeleteReply `protobuf:"bytes,3,opt,name=modelDeleteReply,proto3,oneof"`
}

type WriteTransactionReply_ModelHasReply struct {
	ModelHasReply *ModelHasReply `protobuf:"bytes,4,opt,name=modelHasReply,proto3,oneof"`
}

type WriteTransactionReply_ModelFindReply struct {
	ModelFindReply *ModelFindReply `protobuf:"bytes,5,opt,name=modelFindReply,proto3,oneof"`
}

type WriteTransactionReply_ModelFindByIDReply struct {
	ModelFindByIDReply *ModelFindByIDReply `protobuf:"bytes,6,opt,name=modelFindByIDReply,proto3,oneof"`
}

func (*WriteTransactionReply_ModelCreateReply) isWriteTransactionReply_Option() {}

func (*WriteTransactionReply_ModelSaveReply) isWriteTransactionReply_Option() {}

func (*WriteTransactionReply_ModelDeleteReply) isWriteTransactionReply_Option() {}

func (*WriteTransactionReply_ModelHasReply) isWriteTransactionReply_Option() {}

func (*WriteTransactionReply_ModelFindReply) isWriteTransactionReply_Option() {}

func (*WriteTransactionReply_ModelFindByIDReply) isWriteTransactionReply_Option() {}

func (m *WriteTransactionReply) GetOption() isWriteTransactionReply_Option {
	if m != nil {
		return m.Option
	}
	return nil
}

func (m *WriteTransactionReply) GetModelCreateReply() *ModelCreateReply {
	if x, ok := m.GetOption().(*WriteTransactionReply_ModelCreateReply); ok {
		return x.ModelCreateReply
	}
	return nil
}

func (m *WriteTransactionReply) GetModelSaveReply() *ModelSaveReply {
	if x, ok := m.GetOption().(*WriteTransactionReply_ModelSaveReply); ok {
		return x.ModelSaveReply
	}
	return nil
}

func (m *WriteTransactionReply) GetModelDeleteReply() *ModelDeleteReply {
	if x, ok := m.GetOption().(*WriteTransactionReply_ModelDeleteReply); ok {
		return x.ModelDeleteReply
	}
	return nil
}

func (m *WriteTransactionReply) GetModelHasReply() *ModelHasReply {
	if x, ok := m.GetOption().(*WriteTransactionReply_ModelHasReply); ok {
		return x.ModelHasReply
	}
	return nil
}

func (m *WriteTransactionReply) GetModelFindReply() *ModelFindReply {
	if x, ok := m.GetOption().(*WriteTransactionReply_ModelFindReply); ok {
		return x.ModelFindReply
	}
	return nil
}

func (m *WriteTransactionReply) GetModelFindByIDReply() *ModelFindByIDReply {
	if x, ok := m.GetOption().(*WriteTransactionReply_ModelFindByIDReply); ok {
		return x.ModelFindByIDReply
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*WriteTransactionReply) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*WriteTransactionReply_ModelCreateReply)(nil),
		(*WriteTransactionReply_ModelSaveReply)(nil),
		(*WriteTransactionReply_ModelDeleteReply)(nil),
		(*WriteTransactionReply_ModelHasReply)(nil),
		(*WriteTransactionReply_ModelFindReply)(nil),
		(*WriteTransactionReply_ModelFindByIDReply)(nil),
	}
}

type ListenRequest struct {
	DBID                 string                  `protobuf:"bytes,1,opt,name=DBID,proto3" json:"DBID,omitempty"`
	Filters              []*ListenRequest_Filter `protobuf:"bytes,2,rep,name=filters,proto3" json:"filters,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *ListenRequest) Reset()         { *m = ListenRequest{} }
func (m *ListenRequest) String() string { return proto.CompactTextString(m) }
func (*ListenRequest) ProtoMessage()    {}
func (*ListenRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{27}
}

func (m *ListenRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListenRequest.Unmarshal(m, b)
}
func (m *ListenRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListenRequest.Marshal(b, m, deterministic)
}
func (m *ListenRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListenRequest.Merge(m, src)
}
func (m *ListenRequest) XXX_Size() int {
	return xxx_messageInfo_ListenRequest.Size(m)
}
func (m *ListenRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListenRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListenRequest proto.InternalMessageInfo

func (m *ListenRequest) GetDBID() string {
	if m != nil {
		return m.DBID
	}
	return ""
}

func (m *ListenRequest) GetFilters() []*ListenRequest_Filter {
	if m != nil {
		return m.Filters
	}
	return nil
}

type ListenRequest_Filter struct {
	ModelName            string                      `protobuf:"bytes,1,opt,name=modelName,proto3" json:"modelName,omitempty"`
	EntityID             string                      `protobuf:"bytes,2,opt,name=entityID,proto3" json:"entityID,omitempty"`
	Action               ListenRequest_Filter_Action `protobuf:"varint,3,opt,name=action,proto3,enum=api.pb.ListenRequest_Filter_Action" json:"action,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *ListenRequest_Filter) Reset()         { *m = ListenRequest_Filter{} }
func (m *ListenRequest_Filter) String() string { return proto.CompactTextString(m) }
func (*ListenRequest_Filter) ProtoMessage()    {}
func (*ListenRequest_Filter) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{27, 0}
}

func (m *ListenRequest_Filter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListenRequest_Filter.Unmarshal(m, b)
}
func (m *ListenRequest_Filter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListenRequest_Filter.Marshal(b, m, deterministic)
}
func (m *ListenRequest_Filter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListenRequest_Filter.Merge(m, src)
}
func (m *ListenRequest_Filter) XXX_Size() int {
	return xxx_messageInfo_ListenRequest_Filter.Size(m)
}
func (m *ListenRequest_Filter) XXX_DiscardUnknown() {
	xxx_messageInfo_ListenRequest_Filter.DiscardUnknown(m)
}

var xxx_messageInfo_ListenRequest_Filter proto.InternalMessageInfo

func (m *ListenRequest_Filter) GetModelName() string {
	if m != nil {
		return m.ModelName
	}
	return ""
}

func (m *ListenRequest_Filter) GetEntityID() string {
	if m != nil {
		return m.EntityID
	}
	return ""
}

func (m *ListenRequest_Filter) GetAction() ListenRequest_Filter_Action {
	if m != nil {
		return m.Action
	}
	return ListenRequest_Filter_ALL
}

type ListenReply struct {
	ModelName            string             `protobuf:"bytes,1,opt,name=modelName,proto3" json:"modelName,omitempty"`
	EntityID             string             `protobuf:"bytes,2,opt,name=entityID,proto3" json:"entityID,omitempty"`
	Action               ListenReply_Action `protobuf:"varint,3,opt,name=action,proto3,enum=api.pb.ListenReply_Action" json:"action,omitempty"`
	Entity               []byte             `protobuf:"bytes,4,opt,name=entity,proto3" json:"entity,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *ListenReply) Reset()         { *m = ListenReply{} }
func (m *ListenReply) String() string { return proto.CompactTextString(m) }
func (*ListenReply) ProtoMessage()    {}
func (*ListenReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{28}
}

func (m *ListenReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListenReply.Unmarshal(m, b)
}
func (m *ListenReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListenReply.Marshal(b, m, deterministic)
}
func (m *ListenReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListenReply.Merge(m, src)
}
func (m *ListenReply) XXX_Size() int {
	return xxx_messageInfo_ListenReply.Size(m)
}
func (m *ListenReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ListenReply.DiscardUnknown(m)
}

var xxx_messageInfo_ListenReply proto.InternalMessageInfo

func (m *ListenReply) GetModelName() string {
	if m != nil {
		return m.ModelName
	}
	return ""
}

func (m *ListenReply) GetEntityID() string {
	if m != nil {
		return m.EntityID
	}
	return ""
}

func (m *ListenReply) GetAction() ListenReply_Action {
	if m != nil {
		return m.Action
	}
	return ListenReply_CREATE
}

func (m *ListenReply) GetEntity() []byte {
	if m != nil {
		return m.Entity
	}
	return nil
}

func init() {
	proto.RegisterEnum("api.pb.ListenRequest_Filter_Action", ListenRequest_Filter_Action_name, ListenRequest_Filter_Action_value)
	proto.RegisterEnum("api.pb.ListenReply_Action", ListenReply_Action_name, ListenReply_Action_value)
	proto.RegisterType((*NewDBRequest)(nil), "api.pb.NewDBRequest")
	proto.RegisterType((*NewDBReply)(nil), "api.pb.NewDBReply")
	proto.RegisterType((*RegisterSchemaRequest)(nil), "api.pb.RegisterSchemaRequest")
	proto.RegisterType((*RegisterSchemaRequest_IndexConfig)(nil), "api.pb.RegisterSchemaRequest.IndexConfig")
	proto.RegisterType((*RegisterSchemaReply)(nil), "api.pb.RegisterSchemaReply")
	proto.RegisterType((*StartRequest)(nil), "api.pb.StartRequest")
	proto.RegisterType((*StartReply)(nil), "api.pb.StartReply")
	proto.RegisterType((*StartFromAddressRequest)(nil), "api.pb.StartFromAddressRequest")
	proto.RegisterType((*StartFromAddressReply)(nil), "api.pb.StartFromAddressReply")
	proto.RegisterType((*GetDBLinkRequest)(nil), "api.pb.GetDBLinkRequest")
	proto.RegisterType((*GetDBLinkReply)(nil), "api.pb.GetDBLinkReply")
	proto.RegisterType((*ModelCreateRequest)(nil), "api.pb.ModelCreateRequest")
	proto.RegisterType((*ModelCreateReply)(nil), "api.pb.ModelCreateReply")
	proto.RegisterType((*ModelSaveRequest)(nil), "api.pb.ModelSaveRequest")
	proto.RegisterType((*ModelSaveReply)(nil), "api.pb.ModelSaveReply")
	proto.RegisterType((*ModelDeleteRequest)(nil), "api.pb.ModelDeleteRequest")
	proto.RegisterType((*ModelDeleteReply)(nil), "api.pb.ModelDeleteReply")
	proto.RegisterType((*ModelHasRequest)(nil), "api.pb.ModelHasRequest")
	proto.RegisterType((*ModelHasReply)(nil), "api.pb.ModelHasReply")
	proto.RegisterType((*ModelFindRequest)(nil), "api.pb.ModelFindRequest")
	proto.RegisterType((*ModelFindReply)(nil), "api.pb.ModelFindReply")
	proto.RegisterType((*ModelFindByIDRequest)(nil), "api.pb.ModelFindByIDRequest")
	proto.RegisterType((*ModelFindByIDReply)(nil), "api.pb.ModelFindByIDReply")
	proto.RegisterType((*StartTransactionRequest)(nil), "api.pb.StartTransactionRequest")
	proto.RegisterType((*ReadTransactionRequest)(nil), "api.pb.ReadTransactionRequest")
	proto.RegisterType((*ReadTransactionReply)(nil), "api.pb.ReadTransactionReply")
	proto.RegisterType((*WriteTransactionRequest)(nil), "api.pb.WriteTransactionRequest")
	proto.RegisterType((*WriteTransactionReply)(nil), "api.pb.WriteTransactionReply")
	proto.RegisterType((*ListenRequest)(nil), "api.pb.ListenRequest")
	proto.RegisterType((*ListenRequest_Filter)(nil), "api.pb.ListenRequest.Filter")
	proto.RegisterType((*ListenReply)(nil), "api.pb.ListenReply")
}

func init() { proto.RegisterFile("api.proto", fileDescriptor_00212fb1f9d3bf1c) }

var fileDescriptor_00212fb1f9d3bf1c = []byte{
	// 1260 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x58, 0xdd, 0x6e, 0xeb, 0x44,
	0x10, 0xb6, 0x93, 0xd4, 0x49, 0x26, 0x6d, 0x1a, 0xed, 0x69, 0x9a, 0xc8, 0xe4, 0x40, 0xb5, 0x48,
	0x50, 0x50, 0x15, 0x1d, 0xa5, 0x12, 0x02, 0x01, 0x82, 0xa6, 0x49, 0x49, 0x68, 0x28, 0x47, 0x4e,
	0xf8, 0x91, 0x40, 0x20, 0xb7, 0xd9, 0xb6, 0x16, 0xce, 0x4f, 0x6d, 0xf7, 0x9c, 0xe6, 0x8a, 0x77,
	0xe0, 0x11, 0x78, 0x06, 0xee, 0x91, 0x90, 0x78, 0x06, 0x6e, 0xb8, 0xe0, 0x0d, 0x78, 0x05, 0xb4,
	0xeb, 0xf5, 0x7a, 0xed, 0xd8, 0xbe, 0x68, 0x7b, 0xb8, 0xcb, 0xce, 0xce, 0xce, 0x7c, 0x33, 0x9e,
	0xfd, 0x66, 0x27, 0x50, 0x36, 0x97, 0x56, 0x7b, 0xe9, 0x2c, 0xbc, 0x05, 0xd2, 0xd8, 0xcf, 0x73,
	0x5c, 0x85, 0xcd, 0x33, 0xf2, 0xb2, 0xd7, 0x35, 0xc8, 0xcd, 0x2d, 0x71, 0x3d, 0xdc, 0x02, 0xe0,
	0xeb, 0xa5, 0xbd, 0x42, 0x55, 0xc8, 0x0d, 0x7b, 0x4d, 0x75, 0x4f, 0xdd, 0x2f, 0x1b, 0xb9, 0x61,
	0x0f, 0xff, 0xa5, 0x42, 0xdd, 0x20, 0x57, 0x96, 0xeb, 0x11, 0x67, 0x7c, 0x71, 0x4d, 0x66, 0x26,
	0x3f, 0x87, 0x10, 0x14, 0x7a, 0x5d, 0xa1, 0xcb, 0x7e, 0x53, 0xd9, 0xdc, 0x9c, 0x91, 0x66, 0xce,
	0x97, 0xd1, 0xdf, 0x68, 0x17, 0x34, 0x97, 0x1d, 0x6c, 0xe6, 0x99, 0x94, 0xaf, 0xd0, 0x31, 0x14,
	0xad, 0xf9, 0x94, 0xdc, 0x11, 0xb7, 0x59, 0xd8, 0xcb, 0xef, 0x57, 0x3a, 0xef, 0xb4, 0x7d, 0x84,
	0xed, 0x44, 0x7f, 0xed, 0x21, 0x55, 0x3e, 0x5e, 0xcc, 0x2f, 0xad, 0x2b, 0x23, 0x38, 0xa9, 0x7f,
	0x00, 0x15, 0x49, 0x4e, 0xfd, 0x2f, 0x4d, 0xef, 0x3a, 0xc0, 0x44, 0x7f, 0x53, 0xff, 0xb7, 0x73,
	0xeb, 0xe6, 0xd6, 0x47, 0x55, 0x32, 0xf8, 0x0a, 0xd7, 0xe1, 0x49, 0xdc, 0xd1, 0xd2, 0x5e, 0x61,
	0x0c, 0x9b, 0x63, 0xcf, 0x74, 0xbc, 0x8c, 0x30, 0xf1, 0x26, 0x00, 0xd7, 0xa1, 0x27, 0x7e, 0x86,
	0x06, 0x5b, 0x9d, 0x38, 0x8b, 0xd9, 0xd1, 0x74, 0xea, 0x10, 0xd7, 0xcd, 0xca, 0x51, 0x13, 0x8a,
	0xa6, 0xaf, 0xc5, 0xd3, 0x14, 0x2c, 0x51, 0x0b, 0xca, 0x97, 0x0b, 0xdb, 0x5e, 0xbc, 0x3c, 0x25,
	0x2b, 0x96, 0xac, 0x4d, 0x23, 0x14, 0xd0, 0x73, 0x0e, 0x31, 0xa7, 0x74, 0xaf, 0xc0, 0xf6, 0x82,
	0x25, 0x6e, 0x40, 0x7d, 0x1d, 0x00, 0x45, 0xf6, 0x16, 0xd4, 0x3e, 0x23, 0x5e, 0xaf, 0x3b, 0xb2,
	0xe6, 0x3f, 0x65, 0xc5, 0x73, 0x09, 0x55, 0x49, 0x8f, 0x96, 0x41, 0x0b, 0xca, 0x1c, 0x15, 0x71,
	0x9b, 0xea, 0x5e, 0x7e, 0xbf, 0x6c, 0x84, 0x82, 0x28, 0xd0, 0x5c, 0x06, 0xd0, 0x7c, 0x14, 0xe8,
	0x0f, 0x80, 0xbe, 0x58, 0x4c, 0x89, 0x7d, 0xec, 0x10, 0xd3, 0x23, 0x59, 0x49, 0x6a, 0x41, 0x79,
	0x46, 0x35, 0xcf, 0xc2, 0x6a, 0x0a, 0x05, 0xf4, 0x93, 0xbe, 0x30, 0xed, 0x5b, 0xe2, 0x36, 0xf3,
	0x0c, 0x1a, 0x5f, 0xe1, 0x36, 0xd4, 0x22, 0xf6, 0x69, 0x24, 0x3a, 0x94, 0xc8, 0xdc, 0xb3, 0x3c,
	0x4b, 0x04, 0x22, 0xd6, 0xf8, 0x7b, 0xae, 0x3f, 0x36, 0x5f, 0xbc, 0x02, 0x34, 0x35, 0xa8, 0x4a,
	0xd6, 0xe9, 0xf7, 0x98, 0xf2, 0xf8, 0x7b, 0xc4, 0x26, 0x0f, 0x89, 0xbf, 0x05, 0x65, 0x16, 0xc3,
	0x6a, 0xd8, 0x0b, 0x9c, 0x86, 0x02, 0x8c, 0x78, 0x54, 0x81, 0x17, 0xea, 0xd9, 0x84, 0x6d, 0x26,
	0x1b, 0x98, 0xee, 0xab, 0x72, 0xfb, 0x36, 0x6c, 0x85, 0x2e, 0x68, 0xe6, 0x77, 0x41, 0x23, 0x77,
	0x96, 0xeb, 0xb9, 0xcc, 0x45, 0xc9, 0xe0, 0x2b, 0x7c, 0xce, 0xf1, 0x9d, 0x58, 0xf3, 0xe9, 0x83,
	0xc0, 0xdc, 0xdc, 0x12, 0x67, 0xf5, 0xf9, 0xf8, 0xcb, 0xb3, 0xe0, 0xb2, 0x08, 0x01, 0x3e, 0xe0,
	0xb9, 0xf7, 0x7d, 0x24, 0xd5, 0xc1, 0xa6, 0x54, 0x07, 0x53, 0xd8, 0x11, 0xda, 0xdd, 0xd5, 0xb0,
	0x77, 0x7f, 0x54, 0x81, 0x97, 0xd5, 0xb0, 0xc7, 0xe9, 0x4e, 0xac, 0xf1, 0x01, 0xff, 0xfa, 0xa1,
	0x97, 0x20, 0x4b, 0x4c, 0x83, 0x7b, 0xe1, 0x2b, 0x7c, 0xca, 0x59, 0x65, 0xe2, 0x98, 0x73, 0xd7,
	0xbc, 0xf0, 0xac, 0xc5, 0xfc, 0xde, 0xb0, 0xf0, 0x3f, 0x39, 0xd8, 0x35, 0x88, 0x39, 0x4d, 0x30,
	0xf6, 0x1d, 0x34, 0xdc, 0x64, 0x3f, 0xcc, 0x7e, 0xa5, 0xf3, 0x46, 0x40, 0xcb, 0x29, 0x70, 0x06,
	0x8a, 0x91, 0x66, 0x01, 0x1d, 0xc3, 0xf6, 0x2c, 0x5a, 0x76, 0x0c, 0x5b, 0xa5, 0xd3, 0x08, 0x8c,
	0xc6, 0xaa, 0x72, 0xa0, 0x18, 0xf1, 0x13, 0xe8, 0x04, 0x6a, 0xb3, 0x58, 0xbd, 0xb0, 0xdc, 0x56,
	0x3a, 0xcd, 0x88, 0x15, 0x69, 0x7f, 0xa0, 0x18, 0x6b, 0x67, 0x90, 0x01, 0x3b, 0xb3, 0x84, 0xaf,
	0xcc, 0xd8, 0xb4, 0xd2, 0x69, 0xad, 0xd9, 0x92, 0x74, 0x06, 0x8a, 0x91, 0x78, 0xb6, 0x5b, 0x02,
	0x6d, 0xb1, 0xa4, 0x11, 0xe3, 0x7f, 0x55, 0xd8, 0x59, 0x4b, 0x31, 0xfd, 0xc0, 0x1f, 0xc3, 0xd6,
	0x4c, 0xbe, 0x17, 0x3c, 0xad, 0xf5, 0xf5, 0x0c, 0x2c, 0xed, 0xd5, 0x40, 0x31, 0xa2, 0xda, 0xe8,
	0x53, 0xa8, 0xce, 0x22, 0x95, 0xcc, 0x33, 0xb8, 0x9b, 0x10, 0xbb, 0x6f, 0x20, 0xa6, 0x8f, 0x46,
	0x80, 0x66, 0x6b, 0x75, 0xc7, 0x33, 0xa8, 0xa7, 0x44, 0xed, 0x5b, 0x4a, 0x38, 0x27, 0x45, 0xfc,
	0x67, 0x01, 0x1a, 0xdf, 0x38, 0x96, 0x47, 0xfe, 0xef, 0xaa, 0x0a, 0x02, 0x8a, 0xb4, 0x11, 0x9e,
	0x96, 0x68, 0x40, 0x11, 0x0d, 0x11, 0x50, 0xb4, 0xfd, 0x04, 0xe5, 0x25, 0x35, 0x81, 0xc4, 0xf2,
	0x92, 0xf6, 0x45, 0x79, 0xc9, 0x8d, 0x23, 0x40, 0x15, 0x21, 0x77, 0x5e, 0x5c, 0x51, 0x54, 0x11,
	0x0d, 0x81, 0x2a, 0xda, 0x14, 0x12, 0x6e, 0xce, 0xc6, 0xa3, 0xdc, 0x1c, 0xed, 0x11, 0x6f, 0x4e,
	0xf1, 0x51, 0x6e, 0xce, 0x1f, 0x79, 0xa8, 0xaf, 0xd7, 0x11, 0xad, 0xdc, 0x00, 0xbf, 0xd4, 0xcf,
	0x79, 0xf9, 0x34, 0x13, 0x3f, 0xb3, 0x5f, 0xb5, 0x6b, 0x67, 0xc4, 0x1d, 0x12, 0x9d, 0x38, 0xf1,
	0x0e, 0x89, 0x5d, 0x71, 0x87, 0x84, 0x44, 0x20, 0x91, 0x7a, 0x6a, 0x62, 0x91, 0x48, 0xfb, 0x02,
	0x89, 0x24, 0x5b, 0x27, 0x83, 0xc2, 0x03, 0xc9, 0x60, 0xe3, 0x51, 0xc8, 0x40, 0x7b, 0x30, 0x19,
	0xfc, 0x92, 0x83, 0xad, 0x11, 0x7d, 0x4c, 0x67, 0x76, 0xa9, 0xf7, 0xa0, 0x78, 0x69, 0xd9, 0x1e,
	0x71, 0xe8, 0xdb, 0x37, 0x2f, 0xd7, 0x4e, 0xe4, 0x6c, 0xfb, 0x84, 0x29, 0x19, 0x81, 0xb2, 0xfe,
	0x9b, 0x0a, 0x9a, 0x2f, 0x8b, 0x36, 0x3a, 0x35, 0xab, 0xff, 0xe6, 0xa2, 0xfd, 0x17, 0x7d, 0x08,
	0x9a, 0x5f, 0x5c, 0xec, 0xcb, 0x55, 0x3b, 0x6f, 0x66, 0xf9, 0x6e, 0x1f, 0xf9, 0x75, 0xc8, 0x8f,
	0xe0, 0x43, 0xd0, 0x7c, 0x09, 0x2a, 0x42, 0xfe, 0x68, 0x34, 0xaa, 0x29, 0x08, 0x40, 0x3b, 0x36,
	0xfa, 0x47, 0x93, 0x7e, 0x4d, 0x45, 0x25, 0x28, 0x8c, 0x8f, 0xbe, 0xee, 0xd7, 0x72, 0x54, 0xda,
	0xeb, 0x8f, 0xfa, 0x93, 0x7e, 0x2d, 0x8f, 0x7f, 0x57, 0xa1, 0x12, 0x18, 0xe7, 0xaf, 0xea, 0x7b,
	0x62, 0xef, 0xc4, 0xb0, 0xeb, 0x71, 0xec, 0x4b, 0x7b, 0x15, 0x83, 0x2c, 0xbd, 0x2c, 0xfc, 0x79,
	0x21, 0x78, 0x59, 0xbc, 0x2b, 0x42, 0x09, 0x23, 0x50, 0x44, 0x04, 0xaa, 0x14, 0x41, 0xae, 0xf3,
	0x37, 0x8d, 0xf6, 0xf9, 0x10, 0x1d, 0xc2, 0x06, 0x1b, 0x12, 0xd1, 0x4e, 0xe0, 0x58, 0x9e, 0x21,
	0x75, 0x14, 0x93, 0xd2, 0x27, 0xa7, 0x82, 0xce, 0xa0, 0x1a, 0x9d, 0xb0, 0xd0, 0xd3, 0xcc, 0x11,
	0x4f, 0x7f, 0x2d, 0x6d, 0xdb, 0xb7, 0x77, 0x08, 0x1b, 0xac, 0x5b, 0x84, 0x20, 0xe4, 0x49, 0x2d,
	0x04, 0x21, 0xcd, 0x66, 0x0a, 0x9a, 0x40, 0x2d, 0x3e, 0x1c, 0xa1, 0x68, 0xf3, 0x59, 0x9f, 0xdb,
	0xf4, 0xa7, 0xe9, 0x0a, 0xbe, 0xd5, 0x4f, 0xa0, 0x2c, 0x26, 0x26, 0x24, 0x28, 0x20, 0x3e, 0x6c,
	0xe9, 0xbb, 0x09, 0x3b, 0xbe, 0x81, 0x3e, 0x54, 0x24, 0xea, 0x42, 0x19, 0x6d, 0x4b, 0x4f, 0xe5,
	0x3a, 0x1f, 0x87, 0xe0, 0x2e, 0x94, 0xda, 0xaf, 0xf4, 0x14, 0xa2, 0x93, 0x70, 0xf8, 0x24, 0x85,
	0x32, 0x1a, 0x95, 0x9e, 0xca, 0x74, 0x58, 0x41, 0x1f, 0x41, 0x29, 0xa0, 0x2e, 0x94, 0xd6, 0xa1,
	0xf4, 0x64, 0x96, 0x93, 0xa2, 0xa0, 0xe4, 0x82, 0x52, 0x5b, 0x93, 0x9e, 0xc2, 0x72, 0x58, 0x41,
	0xa7, 0x7c, 0xf6, 0x08, 0xd8, 0x09, 0x65, 0xf6, 0x24, 0x3d, 0x83, 0xe8, 0xb0, 0x82, 0xbe, 0x82,
	0xed, 0xd8, 0x43, 0x0e, 0xbd, 0x1e, 0x16, 0x66, 0xd2, 0x23, 0x5a, 0x6f, 0xa5, 0xee, 0x33, 0x93,
	0xfb, 0xea, 0x33, 0x15, 0x7d, 0x0b, 0xb5, 0x78, 0x97, 0x0b, 0x0b, 0x31, 0xe5, 0x1d, 0x15, 0x16,
	0x62, 0x62, 0x83, 0xe4, 0x96, 0xdf, 0x07, 0xcd, 0xa7, 0x01, 0x54, 0x4f, 0xa4, 0x34, 0xfd, 0x49,
	0x02, 0x5b, 0x60, 0xe5, 0x99, 0xda, 0x3d, 0x80, 0x86, 0xb5, 0x68, 0x7b, 0xe4, 0xce, 0xb3, 0x6c,
	0xd2, 0xf6, 0xae, 0xe9, 0xa0, 0xee, 0xfe, 0x78, 0xe5, 0x2c, 0x2f, 0xba, 0xc5, 0x89, 0xbf, 0x7a,
	0xae, 0xfe, 0x9a, 0xdb, 0x98, 0x0c, 0x8c, 0xde, 0xf8, 0x5c, 0x63, 0x7f, 0x24, 0x1d, 0xfe, 0x17,
	0x00, 0x00, 0xff, 0xff, 0x00, 0xb0, 0x4a, 0x70, 0x55, 0x12, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// APIClient is the client API for API service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type APIClient interface {
	NewDB(ctx context.Context, in *NewDBRequest, opts ...grpc.CallOption) (*NewDBReply, error)
	RegisterSchema(ctx context.Context, in *RegisterSchemaRequest, opts ...grpc.CallOption) (*RegisterSchemaReply, error)
	Start(ctx context.Context, in *StartRequest, opts ...grpc.CallOption) (*StartReply, error)
	StartFromAddress(ctx context.Context, in *StartFromAddressRequest, opts ...grpc.CallOption) (*StartFromAddressReply, error)
	GetDBLink(ctx context.Context, in *GetDBLinkRequest, opts ...grpc.CallOption) (*GetDBLinkReply, error)
	ModelCreate(ctx context.Context, in *ModelCreateRequest, opts ...grpc.CallOption) (*ModelCreateReply, error)
	ModelSave(ctx context.Context, in *ModelSaveRequest, opts ...grpc.CallOption) (*ModelSaveReply, error)
	ModelDelete(ctx context.Context, in *ModelDeleteRequest, opts ...grpc.CallOption) (*ModelDeleteReply, error)
	ModelHas(ctx context.Context, in *ModelHasRequest, opts ...grpc.CallOption) (*ModelHasReply, error)
	ModelFind(ctx context.Context, in *ModelFindRequest, opts ...grpc.CallOption) (*ModelFindReply, error)
	ModelFindByID(ctx context.Context, in *ModelFindByIDRequest, opts ...grpc.CallOption) (*ModelFindByIDReply, error)
	ReadTransaction(ctx context.Context, opts ...grpc.CallOption) (API_ReadTransactionClient, error)
	WriteTransaction(ctx context.Context, opts ...grpc.CallOption) (API_WriteTransactionClient, error)
	Listen(ctx context.Context, in *ListenRequest, opts ...grpc.CallOption) (API_ListenClient, error)
}

type aPIClient struct {
	cc *grpc.ClientConn
}

func NewAPIClient(cc *grpc.ClientConn) APIClient {
	return &aPIClient{cc}
}

func (c *aPIClient) NewDB(ctx context.Context, in *NewDBRequest, opts ...grpc.CallOption) (*NewDBReply, error) {
	out := new(NewDBReply)
	err := c.cc.Invoke(ctx, "/api.pb.API/NewDB", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) RegisterSchema(ctx context.Context, in *RegisterSchemaRequest, opts ...grpc.CallOption) (*RegisterSchemaReply, error) {
	out := new(RegisterSchemaReply)
	err := c.cc.Invoke(ctx, "/api.pb.API/RegisterSchema", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) Start(ctx context.Context, in *StartRequest, opts ...grpc.CallOption) (*StartReply, error) {
	out := new(StartReply)
	err := c.cc.Invoke(ctx, "/api.pb.API/Start", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) StartFromAddress(ctx context.Context, in *StartFromAddressRequest, opts ...grpc.CallOption) (*StartFromAddressReply, error) {
	out := new(StartFromAddressReply)
	err := c.cc.Invoke(ctx, "/api.pb.API/StartFromAddress", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) GetDBLink(ctx context.Context, in *GetDBLinkRequest, opts ...grpc.CallOption) (*GetDBLinkReply, error) {
	out := new(GetDBLinkReply)
	err := c.cc.Invoke(ctx, "/api.pb.API/GetDBLink", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) ModelCreate(ctx context.Context, in *ModelCreateRequest, opts ...grpc.CallOption) (*ModelCreateReply, error) {
	out := new(ModelCreateReply)
	err := c.cc.Invoke(ctx, "/api.pb.API/ModelCreate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) ModelSave(ctx context.Context, in *ModelSaveRequest, opts ...grpc.CallOption) (*ModelSaveReply, error) {
	out := new(ModelSaveReply)
	err := c.cc.Invoke(ctx, "/api.pb.API/ModelSave", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) ModelDelete(ctx context.Context, in *ModelDeleteRequest, opts ...grpc.CallOption) (*ModelDeleteReply, error) {
	out := new(ModelDeleteReply)
	err := c.cc.Invoke(ctx, "/api.pb.API/ModelDelete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) ModelHas(ctx context.Context, in *ModelHasRequest, opts ...grpc.CallOption) (*ModelHasReply, error) {
	out := new(ModelHasReply)
	err := c.cc.Invoke(ctx, "/api.pb.API/ModelHas", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) ModelFind(ctx context.Context, in *ModelFindRequest, opts ...grpc.CallOption) (*ModelFindReply, error) {
	out := new(ModelFindReply)
	err := c.cc.Invoke(ctx, "/api.pb.API/ModelFind", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) ModelFindByID(ctx context.Context, in *ModelFindByIDRequest, opts ...grpc.CallOption) (*ModelFindByIDReply, error) {
	out := new(ModelFindByIDReply)
	err := c.cc.Invoke(ctx, "/api.pb.API/ModelFindByID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) ReadTransaction(ctx context.Context, opts ...grpc.CallOption) (API_ReadTransactionClient, error) {
	stream, err := c.cc.NewStream(ctx, &_API_serviceDesc.Streams[0], "/api.pb.API/ReadTransaction", opts...)
	if err != nil {
		return nil, err
	}
	x := &aPIReadTransactionClient{stream}
	return x, nil
}

type API_ReadTransactionClient interface {
	Send(*ReadTransactionRequest) error
	Recv() (*ReadTransactionReply, error)
	grpc.ClientStream
}

type aPIReadTransactionClient struct {
	grpc.ClientStream
}

func (x *aPIReadTransactionClient) Send(m *ReadTransactionRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *aPIReadTransactionClient) Recv() (*ReadTransactionReply, error) {
	m := new(ReadTransactionReply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *aPIClient) WriteTransaction(ctx context.Context, opts ...grpc.CallOption) (API_WriteTransactionClient, error) {
	stream, err := c.cc.NewStream(ctx, &_API_serviceDesc.Streams[1], "/api.pb.API/WriteTransaction", opts...)
	if err != nil {
		return nil, err
	}
	x := &aPIWriteTransactionClient{stream}
	return x, nil
}

type API_WriteTransactionClient interface {
	Send(*WriteTransactionRequest) error
	Recv() (*WriteTransactionReply, error)
	grpc.ClientStream
}

type aPIWriteTransactionClient struct {
	grpc.ClientStream
}

func (x *aPIWriteTransactionClient) Send(m *WriteTransactionRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *aPIWriteTransactionClient) Recv() (*WriteTransactionReply, error) {
	m := new(WriteTransactionReply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *aPIClient) Listen(ctx context.Context, in *ListenRequest, opts ...grpc.CallOption) (API_ListenClient, error) {
	stream, err := c.cc.NewStream(ctx, &_API_serviceDesc.Streams[2], "/api.pb.API/Listen", opts...)
	if err != nil {
		return nil, err
	}
	x := &aPIListenClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type API_ListenClient interface {
	Recv() (*ListenReply, error)
	grpc.ClientStream
}

type aPIListenClient struct {
	grpc.ClientStream
}

func (x *aPIListenClient) Recv() (*ListenReply, error) {
	m := new(ListenReply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// APIServer is the server API for API service.
type APIServer interface {
	NewDB(context.Context, *NewDBRequest) (*NewDBReply, error)
	RegisterSchema(context.Context, *RegisterSchemaRequest) (*RegisterSchemaReply, error)
	Start(context.Context, *StartRequest) (*StartReply, error)
	StartFromAddress(context.Context, *StartFromAddressRequest) (*StartFromAddressReply, error)
	GetDBLink(context.Context, *GetDBLinkRequest) (*GetDBLinkReply, error)
	ModelCreate(context.Context, *ModelCreateRequest) (*ModelCreateReply, error)
	ModelSave(context.Context, *ModelSaveRequest) (*ModelSaveReply, error)
	ModelDelete(context.Context, *ModelDeleteRequest) (*ModelDeleteReply, error)
	ModelHas(context.Context, *ModelHasRequest) (*ModelHasReply, error)
	ModelFind(context.Context, *ModelFindRequest) (*ModelFindReply, error)
	ModelFindByID(context.Context, *ModelFindByIDRequest) (*ModelFindByIDReply, error)
	ReadTransaction(API_ReadTransactionServer) error
	WriteTransaction(API_WriteTransactionServer) error
	Listen(*ListenRequest, API_ListenServer) error
}

// UnimplementedAPIServer can be embedded to have forward compatible implementations.
type UnimplementedAPIServer struct {
}

func (*UnimplementedAPIServer) NewDB(ctx context.Context, req *NewDBRequest) (*NewDBReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NewDB not implemented")
}
func (*UnimplementedAPIServer) RegisterSchema(ctx context.Context, req *RegisterSchemaRequest) (*RegisterSchemaReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterSchema not implemented")
}
func (*UnimplementedAPIServer) Start(ctx context.Context, req *StartRequest) (*StartReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Start not implemented")
}
func (*UnimplementedAPIServer) StartFromAddress(ctx context.Context, req *StartFromAddressRequest) (*StartFromAddressReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StartFromAddress not implemented")
}
func (*UnimplementedAPIServer) GetDBLink(ctx context.Context, req *GetDBLinkRequest) (*GetDBLinkReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDBLink not implemented")
}
func (*UnimplementedAPIServer) ModelCreate(ctx context.Context, req *ModelCreateRequest) (*ModelCreateReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ModelCreate not implemented")
}
func (*UnimplementedAPIServer) ModelSave(ctx context.Context, req *ModelSaveRequest) (*ModelSaveReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ModelSave not implemented")
}
func (*UnimplementedAPIServer) ModelDelete(ctx context.Context, req *ModelDeleteRequest) (*ModelDeleteReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ModelDelete not implemented")
}
func (*UnimplementedAPIServer) ModelHas(ctx context.Context, req *ModelHasRequest) (*ModelHasReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ModelHas not implemented")
}
func (*UnimplementedAPIServer) ModelFind(ctx context.Context, req *ModelFindRequest) (*ModelFindReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ModelFind not implemented")
}
func (*UnimplementedAPIServer) ModelFindByID(ctx context.Context, req *ModelFindByIDRequest) (*ModelFindByIDReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ModelFindByID not implemented")
}
func (*UnimplementedAPIServer) ReadTransaction(srv API_ReadTransactionServer) error {
	return status.Errorf(codes.Unimplemented, "method ReadTransaction not implemented")
}
func (*UnimplementedAPIServer) WriteTransaction(srv API_WriteTransactionServer) error {
	return status.Errorf(codes.Unimplemented, "method WriteTransaction not implemented")
}
func (*UnimplementedAPIServer) Listen(req *ListenRequest, srv API_ListenServer) error {
	return status.Errorf(codes.Unimplemented, "method Listen not implemented")
}

func RegisterAPIServer(s *grpc.Server, srv APIServer) {
	s.RegisterService(&_API_serviceDesc, srv)
}

func _API_NewDB_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewDBRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).NewDB(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.pb.API/NewDB",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).NewDB(ctx, req.(*NewDBRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_RegisterSchema_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterSchemaRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).RegisterSchema(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.pb.API/RegisterSchema",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).RegisterSchema(ctx, req.(*RegisterSchemaRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_Start_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StartRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).Start(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.pb.API/Start",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).Start(ctx, req.(*StartRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_StartFromAddress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StartFromAddressRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).StartFromAddress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.pb.API/StartFromAddress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).StartFromAddress(ctx, req.(*StartFromAddressRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_GetDBLink_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDBLinkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).GetDBLink(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.pb.API/GetDBLink",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).GetDBLink(ctx, req.(*GetDBLinkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_ModelCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ModelCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).ModelCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.pb.API/ModelCreate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).ModelCreate(ctx, req.(*ModelCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_ModelSave_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ModelSaveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).ModelSave(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.pb.API/ModelSave",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).ModelSave(ctx, req.(*ModelSaveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_ModelDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ModelDeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).ModelDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.pb.API/ModelDelete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).ModelDelete(ctx, req.(*ModelDeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_ModelHas_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ModelHasRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).ModelHas(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.pb.API/ModelHas",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).ModelHas(ctx, req.(*ModelHasRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_ModelFind_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ModelFindRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).ModelFind(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.pb.API/ModelFind",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).ModelFind(ctx, req.(*ModelFindRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_ModelFindByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ModelFindByIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).ModelFindByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.pb.API/ModelFindByID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).ModelFindByID(ctx, req.(*ModelFindByIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_ReadTransaction_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(APIServer).ReadTransaction(&aPIReadTransactionServer{stream})
}

type API_ReadTransactionServer interface {
	Send(*ReadTransactionReply) error
	Recv() (*ReadTransactionRequest, error)
	grpc.ServerStream
}

type aPIReadTransactionServer struct {
	grpc.ServerStream
}

func (x *aPIReadTransactionServer) Send(m *ReadTransactionReply) error {
	return x.ServerStream.SendMsg(m)
}

func (x *aPIReadTransactionServer) Recv() (*ReadTransactionRequest, error) {
	m := new(ReadTransactionRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _API_WriteTransaction_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(APIServer).WriteTransaction(&aPIWriteTransactionServer{stream})
}

type API_WriteTransactionServer interface {
	Send(*WriteTransactionReply) error
	Recv() (*WriteTransactionRequest, error)
	grpc.ServerStream
}

type aPIWriteTransactionServer struct {
	grpc.ServerStream
}

func (x *aPIWriteTransactionServer) Send(m *WriteTransactionReply) error {
	return x.ServerStream.SendMsg(m)
}

func (x *aPIWriteTransactionServer) Recv() (*WriteTransactionRequest, error) {
	m := new(WriteTransactionRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _API_Listen_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListenRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(APIServer).Listen(m, &aPIListenServer{stream})
}

type API_ListenServer interface {
	Send(*ListenReply) error
	grpc.ServerStream
}

type aPIListenServer struct {
	grpc.ServerStream
}

func (x *aPIListenServer) Send(m *ListenReply) error {
	return x.ServerStream.SendMsg(m)
}

var _API_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.pb.API",
	HandlerType: (*APIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "NewDB",
			Handler:    _API_NewDB_Handler,
		},
		{
			MethodName: "RegisterSchema",
			Handler:    _API_RegisterSchema_Handler,
		},
		{
			MethodName: "Start",
			Handler:    _API_Start_Handler,
		},
		{
			MethodName: "StartFromAddress",
			Handler:    _API_StartFromAddress_Handler,
		},
		{
			MethodName: "GetDBLink",
			Handler:    _API_GetDBLink_Handler,
		},
		{
			MethodName: "ModelCreate",
			Handler:    _API_ModelCreate_Handler,
		},
		{
			MethodName: "ModelSave",
			Handler:    _API_ModelSave_Handler,
		},
		{
			MethodName: "ModelDelete",
			Handler:    _API_ModelDelete_Handler,
		},
		{
			MethodName: "ModelHas",
			Handler:    _API_ModelHas_Handler,
		},
		{
			MethodName: "ModelFind",
			Handler:    _API_ModelFind_Handler,
		},
		{
			MethodName: "ModelFindByID",
			Handler:    _API_ModelFindByID_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ReadTransaction",
			Handler:       _API_ReadTransaction_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "WriteTransaction",
			Handler:       _API_WriteTransaction_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "Listen",
			Handler:       _API_Listen_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "api.proto",
}
