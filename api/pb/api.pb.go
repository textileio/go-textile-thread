// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api.proto

package api_pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ListenRequest_Filter_Action int32

const (
	ListenRequest_Filter_ALL    ListenRequest_Filter_Action = 0
	ListenRequest_Filter_CREATE ListenRequest_Filter_Action = 1
	ListenRequest_Filter_SAVE   ListenRequest_Filter_Action = 2
	ListenRequest_Filter_DELETE ListenRequest_Filter_Action = 3
)

var ListenRequest_Filter_Action_name = map[int32]string{
	0: "ALL",
	1: "CREATE",
	2: "SAVE",
	3: "DELETE",
}

var ListenRequest_Filter_Action_value = map[string]int32{
	"ALL":    0,
	"CREATE": 1,
	"SAVE":   2,
	"DELETE": 3,
}

func (x ListenRequest_Filter_Action) String() string {
	return proto.EnumName(ListenRequest_Filter_Action_name, int32(x))
}

func (ListenRequest_Filter_Action) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{25, 0, 0}
}

type ListenReply_Action int32

const (
	ListenReply_CREATE ListenReply_Action = 0
	ListenReply_SAVE   ListenReply_Action = 1
	ListenReply_DELETE ListenReply_Action = 2
)

var ListenReply_Action_name = map[int32]string{
	0: "CREATE",
	1: "SAVE",
	2: "DELETE",
}

var ListenReply_Action_value = map[string]int32{
	"CREATE": 0,
	"SAVE":   1,
	"DELETE": 2,
}

func (x ListenReply_Action) String() string {
	return proto.EnumName(ListenReply_Action_name, int32(x))
}

func (ListenReply_Action) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{26, 0}
}

type NewDBRequest struct {
	DbID                 string   `protobuf:"bytes,1,opt,name=dbID,proto3" json:"dbID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewDBRequest) Reset()         { *m = NewDBRequest{} }
func (m *NewDBRequest) String() string { return proto.CompactTextString(m) }
func (*NewDBRequest) ProtoMessage()    {}
func (*NewDBRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{0}
}

func (m *NewDBRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewDBRequest.Unmarshal(m, b)
}
func (m *NewDBRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewDBRequest.Marshal(b, m, deterministic)
}
func (m *NewDBRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewDBRequest.Merge(m, src)
}
func (m *NewDBRequest) XXX_Size() int {
	return xxx_messageInfo_NewDBRequest.Size(m)
}
func (m *NewDBRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NewDBRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NewDBRequest proto.InternalMessageInfo

func (m *NewDBRequest) GetDbID() string {
	if m != nil {
		return m.DbID
	}
	return ""
}

type CollectionConfig struct {
	Name                 string                          `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Schema               string                          `protobuf:"bytes,2,opt,name=schema,proto3" json:"schema,omitempty"`
	Indexes              []*CollectionConfig_IndexConfig `protobuf:"bytes,3,rep,name=indexes,proto3" json:"indexes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *CollectionConfig) Reset()         { *m = CollectionConfig{} }
func (m *CollectionConfig) String() string { return proto.CompactTextString(m) }
func (*CollectionConfig) ProtoMessage()    {}
func (*CollectionConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{1}
}

func (m *CollectionConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CollectionConfig.Unmarshal(m, b)
}
func (m *CollectionConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CollectionConfig.Marshal(b, m, deterministic)
}
func (m *CollectionConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CollectionConfig.Merge(m, src)
}
func (m *CollectionConfig) XXX_Size() int {
	return xxx_messageInfo_CollectionConfig.Size(m)
}
func (m *CollectionConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_CollectionConfig.DiscardUnknown(m)
}

var xxx_messageInfo_CollectionConfig proto.InternalMessageInfo

func (m *CollectionConfig) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CollectionConfig) GetSchema() string {
	if m != nil {
		return m.Schema
	}
	return ""
}

func (m *CollectionConfig) GetIndexes() []*CollectionConfig_IndexConfig {
	if m != nil {
		return m.Indexes
	}
	return nil
}

type CollectionConfig_IndexConfig struct {
	Path                 string   `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Unique               bool     `protobuf:"varint,2,opt,name=unique,proto3" json:"unique,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CollectionConfig_IndexConfig) Reset()         { *m = CollectionConfig_IndexConfig{} }
func (m *CollectionConfig_IndexConfig) String() string { return proto.CompactTextString(m) }
func (*CollectionConfig_IndexConfig) ProtoMessage()    {}
func (*CollectionConfig_IndexConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{1, 0}
}

func (m *CollectionConfig_IndexConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CollectionConfig_IndexConfig.Unmarshal(m, b)
}
func (m *CollectionConfig_IndexConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CollectionConfig_IndexConfig.Marshal(b, m, deterministic)
}
func (m *CollectionConfig_IndexConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CollectionConfig_IndexConfig.Merge(m, src)
}
func (m *CollectionConfig_IndexConfig) XXX_Size() int {
	return xxx_messageInfo_CollectionConfig_IndexConfig.Size(m)
}
func (m *CollectionConfig_IndexConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_CollectionConfig_IndexConfig.DiscardUnknown(m)
}

var xxx_messageInfo_CollectionConfig_IndexConfig proto.InternalMessageInfo

func (m *CollectionConfig_IndexConfig) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *CollectionConfig_IndexConfig) GetUnique() bool {
	if m != nil {
		return m.Unique
	}
	return false
}

type NewDBFromAddrRequest struct {
	DbAddr               string              `protobuf:"bytes,1,opt,name=dbAddr,proto3" json:"dbAddr,omitempty"`
	FollowKey            []byte              `protobuf:"bytes,2,opt,name=followKey,proto3" json:"followKey,omitempty"`
	ReadKey              []byte              `protobuf:"bytes,3,opt,name=readKey,proto3" json:"readKey,omitempty"`
	Collections          []*CollectionConfig `protobuf:"bytes,4,rep,name=collections,proto3" json:"collections,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *NewDBFromAddrRequest) Reset()         { *m = NewDBFromAddrRequest{} }
func (m *NewDBFromAddrRequest) String() string { return proto.CompactTextString(m) }
func (*NewDBFromAddrRequest) ProtoMessage()    {}
func (*NewDBFromAddrRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{2}
}

func (m *NewDBFromAddrRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewDBFromAddrRequest.Unmarshal(m, b)
}
func (m *NewDBFromAddrRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewDBFromAddrRequest.Marshal(b, m, deterministic)
}
func (m *NewDBFromAddrRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewDBFromAddrRequest.Merge(m, src)
}
func (m *NewDBFromAddrRequest) XXX_Size() int {
	return xxx_messageInfo_NewDBFromAddrRequest.Size(m)
}
func (m *NewDBFromAddrRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NewDBFromAddrRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NewDBFromAddrRequest proto.InternalMessageInfo

func (m *NewDBFromAddrRequest) GetDbAddr() string {
	if m != nil {
		return m.DbAddr
	}
	return ""
}

func (m *NewDBFromAddrRequest) GetFollowKey() []byte {
	if m != nil {
		return m.FollowKey
	}
	return nil
}

func (m *NewDBFromAddrRequest) GetReadKey() []byte {
	if m != nil {
		return m.ReadKey
	}
	return nil
}

func (m *NewDBFromAddrRequest) GetCollections() []*CollectionConfig {
	if m != nil {
		return m.Collections
	}
	return nil
}

type NewDBReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewDBReply) Reset()         { *m = NewDBReply{} }
func (m *NewDBReply) String() string { return proto.CompactTextString(m) }
func (*NewDBReply) ProtoMessage()    {}
func (*NewDBReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{3}
}

func (m *NewDBReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewDBReply.Unmarshal(m, b)
}
func (m *NewDBReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewDBReply.Marshal(b, m, deterministic)
}
func (m *NewDBReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewDBReply.Merge(m, src)
}
func (m *NewDBReply) XXX_Size() int {
	return xxx_messageInfo_NewDBReply.Size(m)
}
func (m *NewDBReply) XXX_DiscardUnknown() {
	xxx_messageInfo_NewDBReply.DiscardUnknown(m)
}

var xxx_messageInfo_NewDBReply proto.InternalMessageInfo

type GetDBInfoRequest struct {
	DbID                 string   `protobuf:"bytes,1,opt,name=dbID,proto3" json:"dbID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDBInfoRequest) Reset()         { *m = GetDBInfoRequest{} }
func (m *GetDBInfoRequest) String() string { return proto.CompactTextString(m) }
func (*GetDBInfoRequest) ProtoMessage()    {}
func (*GetDBInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{4}
}

func (m *GetDBInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDBInfoRequest.Unmarshal(m, b)
}
func (m *GetDBInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDBInfoRequest.Marshal(b, m, deterministic)
}
func (m *GetDBInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDBInfoRequest.Merge(m, src)
}
func (m *GetDBInfoRequest) XXX_Size() int {
	return xxx_messageInfo_GetDBInfoRequest.Size(m)
}
func (m *GetDBInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDBInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetDBInfoRequest proto.InternalMessageInfo

func (m *GetDBInfoRequest) GetDbID() string {
	if m != nil {
		return m.DbID
	}
	return ""
}

type GetDBInfoReply struct {
	Addresses            []string `protobuf:"bytes,1,rep,name=addresses,proto3" json:"addresses,omitempty"`
	FollowKey            []byte   `protobuf:"bytes,2,opt,name=followKey,proto3" json:"followKey,omitempty"`
	ReadKey              []byte   `protobuf:"bytes,3,opt,name=readKey,proto3" json:"readKey,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDBInfoReply) Reset()         { *m = GetDBInfoReply{} }
func (m *GetDBInfoReply) String() string { return proto.CompactTextString(m) }
func (*GetDBInfoReply) ProtoMessage()    {}
func (*GetDBInfoReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{5}
}

func (m *GetDBInfoReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDBInfoReply.Unmarshal(m, b)
}
func (m *GetDBInfoReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDBInfoReply.Marshal(b, m, deterministic)
}
func (m *GetDBInfoReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDBInfoReply.Merge(m, src)
}
func (m *GetDBInfoReply) XXX_Size() int {
	return xxx_messageInfo_GetDBInfoReply.Size(m)
}
func (m *GetDBInfoReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDBInfoReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetDBInfoReply proto.InternalMessageInfo

func (m *GetDBInfoReply) GetAddresses() []string {
	if m != nil {
		return m.Addresses
	}
	return nil
}

func (m *GetDBInfoReply) GetFollowKey() []byte {
	if m != nil {
		return m.FollowKey
	}
	return nil
}

func (m *GetDBInfoReply) GetReadKey() []byte {
	if m != nil {
		return m.ReadKey
	}
	return nil
}

type NewCollectionRequest struct {
	DbID                 string            `protobuf:"bytes,1,opt,name=dbID,proto3" json:"dbID,omitempty"`
	Config               *CollectionConfig `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *NewCollectionRequest) Reset()         { *m = NewCollectionRequest{} }
func (m *NewCollectionRequest) String() string { return proto.CompactTextString(m) }
func (*NewCollectionRequest) ProtoMessage()    {}
func (*NewCollectionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{6}
}

func (m *NewCollectionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewCollectionRequest.Unmarshal(m, b)
}
func (m *NewCollectionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewCollectionRequest.Marshal(b, m, deterministic)
}
func (m *NewCollectionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewCollectionRequest.Merge(m, src)
}
func (m *NewCollectionRequest) XXX_Size() int {
	return xxx_messageInfo_NewCollectionRequest.Size(m)
}
func (m *NewCollectionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NewCollectionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NewCollectionRequest proto.InternalMessageInfo

func (m *NewCollectionRequest) GetDbID() string {
	if m != nil {
		return m.DbID
	}
	return ""
}

func (m *NewCollectionRequest) GetConfig() *CollectionConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

type NewCollectionReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewCollectionReply) Reset()         { *m = NewCollectionReply{} }
func (m *NewCollectionReply) String() string { return proto.CompactTextString(m) }
func (*NewCollectionReply) ProtoMessage()    {}
func (*NewCollectionReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{7}
}

func (m *NewCollectionReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewCollectionReply.Unmarshal(m, b)
}
func (m *NewCollectionReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewCollectionReply.Marshal(b, m, deterministic)
}
func (m *NewCollectionReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewCollectionReply.Merge(m, src)
}
func (m *NewCollectionReply) XXX_Size() int {
	return xxx_messageInfo_NewCollectionReply.Size(m)
}
func (m *NewCollectionReply) XXX_DiscardUnknown() {
	xxx_messageInfo_NewCollectionReply.DiscardUnknown(m)
}

var xxx_messageInfo_NewCollectionReply proto.InternalMessageInfo

type CreateRequest struct {
	DbID                 string   `protobuf:"bytes,1,opt,name=dbID,proto3" json:"dbID,omitempty"`
	CollectionName       string   `protobuf:"bytes,2,opt,name=collectionName,proto3" json:"collectionName,omitempty"`
	Values               []string `protobuf:"bytes,3,rep,name=values,proto3" json:"values,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateRequest) Reset()         { *m = CreateRequest{} }
func (m *CreateRequest) String() string { return proto.CompactTextString(m) }
func (*CreateRequest) ProtoMessage()    {}
func (*CreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{8}
}

func (m *CreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRequest.Unmarshal(m, b)
}
func (m *CreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRequest.Marshal(b, m, deterministic)
}
func (m *CreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRequest.Merge(m, src)
}
func (m *CreateRequest) XXX_Size() int {
	return xxx_messageInfo_CreateRequest.Size(m)
}
func (m *CreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRequest proto.InternalMessageInfo

func (m *CreateRequest) GetDbID() string {
	if m != nil {
		return m.DbID
	}
	return ""
}

func (m *CreateRequest) GetCollectionName() string {
	if m != nil {
		return m.CollectionName
	}
	return ""
}

func (m *CreateRequest) GetValues() []string {
	if m != nil {
		return m.Values
	}
	return nil
}

type CreateReply struct {
	Instances            []string `protobuf:"bytes,1,rep,name=instances,proto3" json:"instances,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateReply) Reset()         { *m = CreateReply{} }
func (m *CreateReply) String() string { return proto.CompactTextString(m) }
func (*CreateReply) ProtoMessage()    {}
func (*CreateReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{9}
}

func (m *CreateReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateReply.Unmarshal(m, b)
}
func (m *CreateReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateReply.Marshal(b, m, deterministic)
}
func (m *CreateReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateReply.Merge(m, src)
}
func (m *CreateReply) XXX_Size() int {
	return xxx_messageInfo_CreateReply.Size(m)
}
func (m *CreateReply) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateReply.DiscardUnknown(m)
}

var xxx_messageInfo_CreateReply proto.InternalMessageInfo

func (m *CreateReply) GetInstances() []string {
	if m != nil {
		return m.Instances
	}
	return nil
}

type SaveRequest struct {
	DbID                 string   `protobuf:"bytes,1,opt,name=dbID,proto3" json:"dbID,omitempty"`
	CollectionName       string   `protobuf:"bytes,2,opt,name=collectionName,proto3" json:"collectionName,omitempty"`
	Values               []string `protobuf:"bytes,3,rep,name=values,proto3" json:"values,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SaveRequest) Reset()         { *m = SaveRequest{} }
func (m *SaveRequest) String() string { return proto.CompactTextString(m) }
func (*SaveRequest) ProtoMessage()    {}
func (*SaveRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{10}
}

func (m *SaveRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SaveRequest.Unmarshal(m, b)
}
func (m *SaveRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SaveRequest.Marshal(b, m, deterministic)
}
func (m *SaveRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SaveRequest.Merge(m, src)
}
func (m *SaveRequest) XXX_Size() int {
	return xxx_messageInfo_SaveRequest.Size(m)
}
func (m *SaveRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SaveRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SaveRequest proto.InternalMessageInfo

func (m *SaveRequest) GetDbID() string {
	if m != nil {
		return m.DbID
	}
	return ""
}

func (m *SaveRequest) GetCollectionName() string {
	if m != nil {
		return m.CollectionName
	}
	return ""
}

func (m *SaveRequest) GetValues() []string {
	if m != nil {
		return m.Values
	}
	return nil
}

type SaveReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SaveReply) Reset()         { *m = SaveReply{} }
func (m *SaveReply) String() string { return proto.CompactTextString(m) }
func (*SaveReply) ProtoMessage()    {}
func (*SaveReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{11}
}

func (m *SaveReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SaveReply.Unmarshal(m, b)
}
func (m *SaveReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SaveReply.Marshal(b, m, deterministic)
}
func (m *SaveReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SaveReply.Merge(m, src)
}
func (m *SaveReply) XXX_Size() int {
	return xxx_messageInfo_SaveReply.Size(m)
}
func (m *SaveReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SaveReply.DiscardUnknown(m)
}

var xxx_messageInfo_SaveReply proto.InternalMessageInfo

type DeleteRequest struct {
	DbID                 string   `protobuf:"bytes,1,opt,name=dbID,proto3" json:"dbID,omitempty"`
	CollectionName       string   `protobuf:"bytes,2,opt,name=collectionName,proto3" json:"collectionName,omitempty"`
	InstanceIDs          []string `protobuf:"bytes,3,rep,name=instanceIDs,proto3" json:"instanceIDs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteRequest) Reset()         { *m = DeleteRequest{} }
func (m *DeleteRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteRequest) ProtoMessage()    {}
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{12}
}

func (m *DeleteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteRequest.Unmarshal(m, b)
}
func (m *DeleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteRequest.Marshal(b, m, deterministic)
}
func (m *DeleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteRequest.Merge(m, src)
}
func (m *DeleteRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteRequest.Size(m)
}
func (m *DeleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteRequest proto.InternalMessageInfo

func (m *DeleteRequest) GetDbID() string {
	if m != nil {
		return m.DbID
	}
	return ""
}

func (m *DeleteRequest) GetCollectionName() string {
	if m != nil {
		return m.CollectionName
	}
	return ""
}

func (m *DeleteRequest) GetInstanceIDs() []string {
	if m != nil {
		return m.InstanceIDs
	}
	return nil
}

type DeleteReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteReply) Reset()         { *m = DeleteReply{} }
func (m *DeleteReply) String() string { return proto.CompactTextString(m) }
func (*DeleteReply) ProtoMessage()    {}
func (*DeleteReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{13}
}

func (m *DeleteReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteReply.Unmarshal(m, b)
}
func (m *DeleteReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteReply.Marshal(b, m, deterministic)
}
func (m *DeleteReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteReply.Merge(m, src)
}
func (m *DeleteReply) XXX_Size() int {
	return xxx_messageInfo_DeleteReply.Size(m)
}
func (m *DeleteReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteReply.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteReply proto.InternalMessageInfo

type HasRequest struct {
	DbID                 string   `protobuf:"bytes,1,opt,name=dbID,proto3" json:"dbID,omitempty"`
	CollectionName       string   `protobuf:"bytes,2,opt,name=collectionName,proto3" json:"collectionName,omitempty"`
	InstanceIDs          []string `protobuf:"bytes,3,rep,name=instanceIDs,proto3" json:"instanceIDs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HasRequest) Reset()         { *m = HasRequest{} }
func (m *HasRequest) String() string { return proto.CompactTextString(m) }
func (*HasRequest) ProtoMessage()    {}
func (*HasRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{14}
}

func (m *HasRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HasRequest.Unmarshal(m, b)
}
func (m *HasRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HasRequest.Marshal(b, m, deterministic)
}
func (m *HasRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HasRequest.Merge(m, src)
}
func (m *HasRequest) XXX_Size() int {
	return xxx_messageInfo_HasRequest.Size(m)
}
func (m *HasRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HasRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HasRequest proto.InternalMessageInfo

func (m *HasRequest) GetDbID() string {
	if m != nil {
		return m.DbID
	}
	return ""
}

func (m *HasRequest) GetCollectionName() string {
	if m != nil {
		return m.CollectionName
	}
	return ""
}

func (m *HasRequest) GetInstanceIDs() []string {
	if m != nil {
		return m.InstanceIDs
	}
	return nil
}

type HasReply struct {
	Exists               bool     `protobuf:"varint,1,opt,name=exists,proto3" json:"exists,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HasReply) Reset()         { *m = HasReply{} }
func (m *HasReply) String() string { return proto.CompactTextString(m) }
func (*HasReply) ProtoMessage()    {}
func (*HasReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{15}
}

func (m *HasReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HasReply.Unmarshal(m, b)
}
func (m *HasReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HasReply.Marshal(b, m, deterministic)
}
func (m *HasReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HasReply.Merge(m, src)
}
func (m *HasReply) XXX_Size() int {
	return xxx_messageInfo_HasReply.Size(m)
}
func (m *HasReply) XXX_DiscardUnknown() {
	xxx_messageInfo_HasReply.DiscardUnknown(m)
}

var xxx_messageInfo_HasReply proto.InternalMessageInfo

func (m *HasReply) GetExists() bool {
	if m != nil {
		return m.Exists
	}
	return false
}

type FindRequest struct {
	DbID                 string   `protobuf:"bytes,1,opt,name=dbID,proto3" json:"dbID,omitempty"`
	CollectionName       string   `protobuf:"bytes,2,opt,name=collectionName,proto3" json:"collectionName,omitempty"`
	QueryJSON            []byte   `protobuf:"bytes,3,opt,name=queryJSON,proto3" json:"queryJSON,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindRequest) Reset()         { *m = FindRequest{} }
func (m *FindRequest) String() string { return proto.CompactTextString(m) }
func (*FindRequest) ProtoMessage()    {}
func (*FindRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{16}
}

func (m *FindRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindRequest.Unmarshal(m, b)
}
func (m *FindRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindRequest.Marshal(b, m, deterministic)
}
func (m *FindRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindRequest.Merge(m, src)
}
func (m *FindRequest) XXX_Size() int {
	return xxx_messageInfo_FindRequest.Size(m)
}
func (m *FindRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FindRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FindRequest proto.InternalMessageInfo

func (m *FindRequest) GetDbID() string {
	if m != nil {
		return m.DbID
	}
	return ""
}

func (m *FindRequest) GetCollectionName() string {
	if m != nil {
		return m.CollectionName
	}
	return ""
}

func (m *FindRequest) GetQueryJSON() []byte {
	if m != nil {
		return m.QueryJSON
	}
	return nil
}

type FindReply struct {
	Instances            [][]byte `protobuf:"bytes,1,rep,name=instances,proto3" json:"instances,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindReply) Reset()         { *m = FindReply{} }
func (m *FindReply) String() string { return proto.CompactTextString(m) }
func (*FindReply) ProtoMessage()    {}
func (*FindReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{17}
}

func (m *FindReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindReply.Unmarshal(m, b)
}
func (m *FindReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindReply.Marshal(b, m, deterministic)
}
func (m *FindReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindReply.Merge(m, src)
}
func (m *FindReply) XXX_Size() int {
	return xxx_messageInfo_FindReply.Size(m)
}
func (m *FindReply) XXX_DiscardUnknown() {
	xxx_messageInfo_FindReply.DiscardUnknown(m)
}

var xxx_messageInfo_FindReply proto.InternalMessageInfo

func (m *FindReply) GetInstances() [][]byte {
	if m != nil {
		return m.Instances
	}
	return nil
}

type FindByIDRequest struct {
	DbID                 string   `protobuf:"bytes,1,opt,name=dbID,proto3" json:"dbID,omitempty"`
	CollectionName       string   `protobuf:"bytes,2,opt,name=collectionName,proto3" json:"collectionName,omitempty"`
	InstanceID           string   `protobuf:"bytes,3,opt,name=instanceID,proto3" json:"instanceID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindByIDRequest) Reset()         { *m = FindByIDRequest{} }
func (m *FindByIDRequest) String() string { return proto.CompactTextString(m) }
func (*FindByIDRequest) ProtoMessage()    {}
func (*FindByIDRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{18}
}

func (m *FindByIDRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindByIDRequest.Unmarshal(m, b)
}
func (m *FindByIDRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindByIDRequest.Marshal(b, m, deterministic)
}
func (m *FindByIDRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindByIDRequest.Merge(m, src)
}
func (m *FindByIDRequest) XXX_Size() int {
	return xxx_messageInfo_FindByIDRequest.Size(m)
}
func (m *FindByIDRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FindByIDRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FindByIDRequest proto.InternalMessageInfo

func (m *FindByIDRequest) GetDbID() string {
	if m != nil {
		return m.DbID
	}
	return ""
}

func (m *FindByIDRequest) GetCollectionName() string {
	if m != nil {
		return m.CollectionName
	}
	return ""
}

func (m *FindByIDRequest) GetInstanceID() string {
	if m != nil {
		return m.InstanceID
	}
	return ""
}

type FindByIDReply struct {
	Instance             string   `protobuf:"bytes,1,opt,name=instance,proto3" json:"instance,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindByIDReply) Reset()         { *m = FindByIDReply{} }
func (m *FindByIDReply) String() string { return proto.CompactTextString(m) }
func (*FindByIDReply) ProtoMessage()    {}
func (*FindByIDReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{19}
}

func (m *FindByIDReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindByIDReply.Unmarshal(m, b)
}
func (m *FindByIDReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindByIDReply.Marshal(b, m, deterministic)
}
func (m *FindByIDReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindByIDReply.Merge(m, src)
}
func (m *FindByIDReply) XXX_Size() int {
	return xxx_messageInfo_FindByIDReply.Size(m)
}
func (m *FindByIDReply) XXX_DiscardUnknown() {
	xxx_messageInfo_FindByIDReply.DiscardUnknown(m)
}

var xxx_messageInfo_FindByIDReply proto.InternalMessageInfo

func (m *FindByIDReply) GetInstance() string {
	if m != nil {
		return m.Instance
	}
	return ""
}

type StartTransactionRequest struct {
	DbID                 string   `protobuf:"bytes,1,opt,name=dbID,proto3" json:"dbID,omitempty"`
	CollectionName       string   `protobuf:"bytes,2,opt,name=collectionName,proto3" json:"collectionName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StartTransactionRequest) Reset()         { *m = StartTransactionRequest{} }
func (m *StartTransactionRequest) String() string { return proto.CompactTextString(m) }
func (*StartTransactionRequest) ProtoMessage()    {}
func (*StartTransactionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{20}
}

func (m *StartTransactionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartTransactionRequest.Unmarshal(m, b)
}
func (m *StartTransactionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartTransactionRequest.Marshal(b, m, deterministic)
}
func (m *StartTransactionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartTransactionRequest.Merge(m, src)
}
func (m *StartTransactionRequest) XXX_Size() int {
	return xxx_messageInfo_StartTransactionRequest.Size(m)
}
func (m *StartTransactionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StartTransactionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StartTransactionRequest proto.InternalMessageInfo

func (m *StartTransactionRequest) GetDbID() string {
	if m != nil {
		return m.DbID
	}
	return ""
}

func (m *StartTransactionRequest) GetCollectionName() string {
	if m != nil {
		return m.CollectionName
	}
	return ""
}

type ReadTransactionRequest struct {
	// Types that are valid to be assigned to Option:
	//	*ReadTransactionRequest_StartTransactionRequest
	//	*ReadTransactionRequest_HasRequest
	//	*ReadTransactionRequest_FindRequest
	//	*ReadTransactionRequest_FindByIDRequest
	Option               isReadTransactionRequest_Option `protobuf_oneof:"option"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *ReadTransactionRequest) Reset()         { *m = ReadTransactionRequest{} }
func (m *ReadTransactionRequest) String() string { return proto.CompactTextString(m) }
func (*ReadTransactionRequest) ProtoMessage()    {}
func (*ReadTransactionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{21}
}

func (m *ReadTransactionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadTransactionRequest.Unmarshal(m, b)
}
func (m *ReadTransactionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadTransactionRequest.Marshal(b, m, deterministic)
}
func (m *ReadTransactionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadTransactionRequest.Merge(m, src)
}
func (m *ReadTransactionRequest) XXX_Size() int {
	return xxx_messageInfo_ReadTransactionRequest.Size(m)
}
func (m *ReadTransactionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadTransactionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReadTransactionRequest proto.InternalMessageInfo

type isReadTransactionRequest_Option interface {
	isReadTransactionRequest_Option()
}

type ReadTransactionRequest_StartTransactionRequest struct {
	StartTransactionRequest *StartTransactionRequest `protobuf:"bytes,1,opt,name=startTransactionRequest,proto3,oneof"`
}

type ReadTransactionRequest_HasRequest struct {
	HasRequest *HasRequest `protobuf:"bytes,2,opt,name=hasRequest,proto3,oneof"`
}

type ReadTransactionRequest_FindRequest struct {
	FindRequest *FindRequest `protobuf:"bytes,3,opt,name=findRequest,proto3,oneof"`
}

type ReadTransactionRequest_FindByIDRequest struct {
	FindByIDRequest *FindByIDRequest `protobuf:"bytes,4,opt,name=findByIDRequest,proto3,oneof"`
}

func (*ReadTransactionRequest_StartTransactionRequest) isReadTransactionRequest_Option() {}

func (*ReadTransactionRequest_HasRequest) isReadTransactionRequest_Option() {}

func (*ReadTransactionRequest_FindRequest) isReadTransactionRequest_Option() {}

func (*ReadTransactionRequest_FindByIDRequest) isReadTransactionRequest_Option() {}

func (m *ReadTransactionRequest) GetOption() isReadTransactionRequest_Option {
	if m != nil {
		return m.Option
	}
	return nil
}

func (m *ReadTransactionRequest) GetStartTransactionRequest() *StartTransactionRequest {
	if x, ok := m.GetOption().(*ReadTransactionRequest_StartTransactionRequest); ok {
		return x.StartTransactionRequest
	}
	return nil
}

func (m *ReadTransactionRequest) GetHasRequest() *HasRequest {
	if x, ok := m.GetOption().(*ReadTransactionRequest_HasRequest); ok {
		return x.HasRequest
	}
	return nil
}

func (m *ReadTransactionRequest) GetFindRequest() *FindRequest {
	if x, ok := m.GetOption().(*ReadTransactionRequest_FindRequest); ok {
		return x.FindRequest
	}
	return nil
}

func (m *ReadTransactionRequest) GetFindByIDRequest() *FindByIDRequest {
	if x, ok := m.GetOption().(*ReadTransactionRequest_FindByIDRequest); ok {
		return x.FindByIDRequest
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ReadTransactionRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ReadTransactionRequest_StartTransactionRequest)(nil),
		(*ReadTransactionRequest_HasRequest)(nil),
		(*ReadTransactionRequest_FindRequest)(nil),
		(*ReadTransactionRequest_FindByIDRequest)(nil),
	}
}

type ReadTransactionReply struct {
	// Types that are valid to be assigned to Option:
	//	*ReadTransactionReply_HasReply
	//	*ReadTransactionReply_FindReply
	//	*ReadTransactionReply_FindByIDReply
	Option               isReadTransactionReply_Option `protobuf_oneof:"option"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *ReadTransactionReply) Reset()         { *m = ReadTransactionReply{} }
func (m *ReadTransactionReply) String() string { return proto.CompactTextString(m) }
func (*ReadTransactionReply) ProtoMessage()    {}
func (*ReadTransactionReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{22}
}

func (m *ReadTransactionReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadTransactionReply.Unmarshal(m, b)
}
func (m *ReadTransactionReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadTransactionReply.Marshal(b, m, deterministic)
}
func (m *ReadTransactionReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadTransactionReply.Merge(m, src)
}
func (m *ReadTransactionReply) XXX_Size() int {
	return xxx_messageInfo_ReadTransactionReply.Size(m)
}
func (m *ReadTransactionReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadTransactionReply.DiscardUnknown(m)
}

var xxx_messageInfo_ReadTransactionReply proto.InternalMessageInfo

type isReadTransactionReply_Option interface {
	isReadTransactionReply_Option()
}

type ReadTransactionReply_HasReply struct {
	HasReply *HasReply `protobuf:"bytes,1,opt,name=hasReply,proto3,oneof"`
}

type ReadTransactionReply_FindReply struct {
	FindReply *FindReply `protobuf:"bytes,2,opt,name=findReply,proto3,oneof"`
}

type ReadTransactionReply_FindByIDReply struct {
	FindByIDReply *FindByIDReply `protobuf:"bytes,3,opt,name=findByIDReply,proto3,oneof"`
}

func (*ReadTransactionReply_HasReply) isReadTransactionReply_Option() {}

func (*ReadTransactionReply_FindReply) isReadTransactionReply_Option() {}

func (*ReadTransactionReply_FindByIDReply) isReadTransactionReply_Option() {}

func (m *ReadTransactionReply) GetOption() isReadTransactionReply_Option {
	if m != nil {
		return m.Option
	}
	return nil
}

func (m *ReadTransactionReply) GetHasReply() *HasReply {
	if x, ok := m.GetOption().(*ReadTransactionReply_HasReply); ok {
		return x.HasReply
	}
	return nil
}

func (m *ReadTransactionReply) GetFindReply() *FindReply {
	if x, ok := m.GetOption().(*ReadTransactionReply_FindReply); ok {
		return x.FindReply
	}
	return nil
}

func (m *ReadTransactionReply) GetFindByIDReply() *FindByIDReply {
	if x, ok := m.GetOption().(*ReadTransactionReply_FindByIDReply); ok {
		return x.FindByIDReply
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ReadTransactionReply) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ReadTransactionReply_HasReply)(nil),
		(*ReadTransactionReply_FindReply)(nil),
		(*ReadTransactionReply_FindByIDReply)(nil),
	}
}

type WriteTransactionRequest struct {
	// Types that are valid to be assigned to Option:
	//	*WriteTransactionRequest_StartTransactionRequest
	//	*WriteTransactionRequest_CreateRequest
	//	*WriteTransactionRequest_SaveRequest
	//	*WriteTransactionRequest_DeleteRequest
	//	*WriteTransactionRequest_HasRequest
	//	*WriteTransactionRequest_FindRequest
	//	*WriteTransactionRequest_FindByIDRequest
	Option               isWriteTransactionRequest_Option `protobuf_oneof:"option"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *WriteTransactionRequest) Reset()         { *m = WriteTransactionRequest{} }
func (m *WriteTransactionRequest) String() string { return proto.CompactTextString(m) }
func (*WriteTransactionRequest) ProtoMessage()    {}
func (*WriteTransactionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{23}
}

func (m *WriteTransactionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteTransactionRequest.Unmarshal(m, b)
}
func (m *WriteTransactionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteTransactionRequest.Marshal(b, m, deterministic)
}
func (m *WriteTransactionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteTransactionRequest.Merge(m, src)
}
func (m *WriteTransactionRequest) XXX_Size() int {
	return xxx_messageInfo_WriteTransactionRequest.Size(m)
}
func (m *WriteTransactionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteTransactionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WriteTransactionRequest proto.InternalMessageInfo

type isWriteTransactionRequest_Option interface {
	isWriteTransactionRequest_Option()
}

type WriteTransactionRequest_StartTransactionRequest struct {
	StartTransactionRequest *StartTransactionRequest `protobuf:"bytes,1,opt,name=startTransactionRequest,proto3,oneof"`
}

type WriteTransactionRequest_CreateRequest struct {
	CreateRequest *CreateRequest `protobuf:"bytes,2,opt,name=createRequest,proto3,oneof"`
}

type WriteTransactionRequest_SaveRequest struct {
	SaveRequest *SaveRequest `protobuf:"bytes,3,opt,name=saveRequest,proto3,oneof"`
}

type WriteTransactionRequest_DeleteRequest struct {
	DeleteRequest *DeleteRequest `protobuf:"bytes,4,opt,name=deleteRequest,proto3,oneof"`
}

type WriteTransactionRequest_HasRequest struct {
	HasRequest *HasRequest `protobuf:"bytes,5,opt,name=hasRequest,proto3,oneof"`
}

type WriteTransactionRequest_FindRequest struct {
	FindRequest *FindRequest `protobuf:"bytes,6,opt,name=findRequest,proto3,oneof"`
}

type WriteTransactionRequest_FindByIDRequest struct {
	FindByIDRequest *FindByIDRequest `protobuf:"bytes,7,opt,name=findByIDRequest,proto3,oneof"`
}

func (*WriteTransactionRequest_StartTransactionRequest) isWriteTransactionRequest_Option() {}

func (*WriteTransactionRequest_CreateRequest) isWriteTransactionRequest_Option() {}

func (*WriteTransactionRequest_SaveRequest) isWriteTransactionRequest_Option() {}

func (*WriteTransactionRequest_DeleteRequest) isWriteTransactionRequest_Option() {}

func (*WriteTransactionRequest_HasRequest) isWriteTransactionRequest_Option() {}

func (*WriteTransactionRequest_FindRequest) isWriteTransactionRequest_Option() {}

func (*WriteTransactionRequest_FindByIDRequest) isWriteTransactionRequest_Option() {}

func (m *WriteTransactionRequest) GetOption() isWriteTransactionRequest_Option {
	if m != nil {
		return m.Option
	}
	return nil
}

func (m *WriteTransactionRequest) GetStartTransactionRequest() *StartTransactionRequest {
	if x, ok := m.GetOption().(*WriteTransactionRequest_StartTransactionRequest); ok {
		return x.StartTransactionRequest
	}
	return nil
}

func (m *WriteTransactionRequest) GetCreateRequest() *CreateRequest {
	if x, ok := m.GetOption().(*WriteTransactionRequest_CreateRequest); ok {
		return x.CreateRequest
	}
	return nil
}

func (m *WriteTransactionRequest) GetSaveRequest() *SaveRequest {
	if x, ok := m.GetOption().(*WriteTransactionRequest_SaveRequest); ok {
		return x.SaveRequest
	}
	return nil
}

func (m *WriteTransactionRequest) GetDeleteRequest() *DeleteRequest {
	if x, ok := m.GetOption().(*WriteTransactionRequest_DeleteRequest); ok {
		return x.DeleteRequest
	}
	return nil
}

func (m *WriteTransactionRequest) GetHasRequest() *HasRequest {
	if x, ok := m.GetOption().(*WriteTransactionRequest_HasRequest); ok {
		return x.HasRequest
	}
	return nil
}

func (m *WriteTransactionRequest) GetFindRequest() *FindRequest {
	if x, ok := m.GetOption().(*WriteTransactionRequest_FindRequest); ok {
		return x.FindRequest
	}
	return nil
}

func (m *WriteTransactionRequest) GetFindByIDRequest() *FindByIDRequest {
	if x, ok := m.GetOption().(*WriteTransactionRequest_FindByIDRequest); ok {
		return x.FindByIDRequest
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*WriteTransactionRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*WriteTransactionRequest_StartTransactionRequest)(nil),
		(*WriteTransactionRequest_CreateRequest)(nil),
		(*WriteTransactionRequest_SaveRequest)(nil),
		(*WriteTransactionRequest_DeleteRequest)(nil),
		(*WriteTransactionRequest_HasRequest)(nil),
		(*WriteTransactionRequest_FindRequest)(nil),
		(*WriteTransactionRequest_FindByIDRequest)(nil),
	}
}

type WriteTransactionReply struct {
	// Types that are valid to be assigned to Option:
	//	*WriteTransactionReply_CreateReply
	//	*WriteTransactionReply_SaveReply
	//	*WriteTransactionReply_DeleteReply
	//	*WriteTransactionReply_HasReply
	//	*WriteTransactionReply_FindReply
	//	*WriteTransactionReply_FindByIDReply
	Option               isWriteTransactionReply_Option `protobuf_oneof:"option"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *WriteTransactionReply) Reset()         { *m = WriteTransactionReply{} }
func (m *WriteTransactionReply) String() string { return proto.CompactTextString(m) }
func (*WriteTransactionReply) ProtoMessage()    {}
func (*WriteTransactionReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{24}
}

func (m *WriteTransactionReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteTransactionReply.Unmarshal(m, b)
}
func (m *WriteTransactionReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteTransactionReply.Marshal(b, m, deterministic)
}
func (m *WriteTransactionReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteTransactionReply.Merge(m, src)
}
func (m *WriteTransactionReply) XXX_Size() int {
	return xxx_messageInfo_WriteTransactionReply.Size(m)
}
func (m *WriteTransactionReply) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteTransactionReply.DiscardUnknown(m)
}

var xxx_messageInfo_WriteTransactionReply proto.InternalMessageInfo

type isWriteTransactionReply_Option interface {
	isWriteTransactionReply_Option()
}

type WriteTransactionReply_CreateReply struct {
	CreateReply *CreateReply `protobuf:"bytes,1,opt,name=createReply,proto3,oneof"`
}

type WriteTransactionReply_SaveReply struct {
	SaveReply *SaveReply `protobuf:"bytes,2,opt,name=saveReply,proto3,oneof"`
}

type WriteTransactionReply_DeleteReply struct {
	DeleteReply *DeleteReply `protobuf:"bytes,3,opt,name=deleteReply,proto3,oneof"`
}

type WriteTransactionReply_HasReply struct {
	HasReply *HasReply `protobuf:"bytes,4,opt,name=hasReply,proto3,oneof"`
}

type WriteTransactionReply_FindReply struct {
	FindReply *FindReply `protobuf:"bytes,5,opt,name=findReply,proto3,oneof"`
}

type WriteTransactionReply_FindByIDReply struct {
	FindByIDReply *FindByIDReply `protobuf:"bytes,6,opt,name=findByIDReply,proto3,oneof"`
}

func (*WriteTransactionReply_CreateReply) isWriteTransactionReply_Option() {}

func (*WriteTransactionReply_SaveReply) isWriteTransactionReply_Option() {}

func (*WriteTransactionReply_DeleteReply) isWriteTransactionReply_Option() {}

func (*WriteTransactionReply_HasReply) isWriteTransactionReply_Option() {}

func (*WriteTransactionReply_FindReply) isWriteTransactionReply_Option() {}

func (*WriteTransactionReply_FindByIDReply) isWriteTransactionReply_Option() {}

func (m *WriteTransactionReply) GetOption() isWriteTransactionReply_Option {
	if m != nil {
		return m.Option
	}
	return nil
}

func (m *WriteTransactionReply) GetCreateReply() *CreateReply {
	if x, ok := m.GetOption().(*WriteTransactionReply_CreateReply); ok {
		return x.CreateReply
	}
	return nil
}

func (m *WriteTransactionReply) GetSaveReply() *SaveReply {
	if x, ok := m.GetOption().(*WriteTransactionReply_SaveReply); ok {
		return x.SaveReply
	}
	return nil
}

func (m *WriteTransactionReply) GetDeleteReply() *DeleteReply {
	if x, ok := m.GetOption().(*WriteTransactionReply_DeleteReply); ok {
		return x.DeleteReply
	}
	return nil
}

func (m *WriteTransactionReply) GetHasReply() *HasReply {
	if x, ok := m.GetOption().(*WriteTransactionReply_HasReply); ok {
		return x.HasReply
	}
	return nil
}

func (m *WriteTransactionReply) GetFindReply() *FindReply {
	if x, ok := m.GetOption().(*WriteTransactionReply_FindReply); ok {
		return x.FindReply
	}
	return nil
}

func (m *WriteTransactionReply) GetFindByIDReply() *FindByIDReply {
	if x, ok := m.GetOption().(*WriteTransactionReply_FindByIDReply); ok {
		return x.FindByIDReply
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*WriteTransactionReply) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*WriteTransactionReply_CreateReply)(nil),
		(*WriteTransactionReply_SaveReply)(nil),
		(*WriteTransactionReply_DeleteReply)(nil),
		(*WriteTransactionReply_HasReply)(nil),
		(*WriteTransactionReply_FindReply)(nil),
		(*WriteTransactionReply_FindByIDReply)(nil),
	}
}

type ListenRequest struct {
	DbID                 string                  `protobuf:"bytes,1,opt,name=dbID,proto3" json:"dbID,omitempty"`
	Filters              []*ListenRequest_Filter `protobuf:"bytes,2,rep,name=filters,proto3" json:"filters,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *ListenRequest) Reset()         { *m = ListenRequest{} }
func (m *ListenRequest) String() string { return proto.CompactTextString(m) }
func (*ListenRequest) ProtoMessage()    {}
func (*ListenRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{25}
}

func (m *ListenRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListenRequest.Unmarshal(m, b)
}
func (m *ListenRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListenRequest.Marshal(b, m, deterministic)
}
func (m *ListenRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListenRequest.Merge(m, src)
}
func (m *ListenRequest) XXX_Size() int {
	return xxx_messageInfo_ListenRequest.Size(m)
}
func (m *ListenRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListenRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListenRequest proto.InternalMessageInfo

func (m *ListenRequest) GetDbID() string {
	if m != nil {
		return m.DbID
	}
	return ""
}

func (m *ListenRequest) GetFilters() []*ListenRequest_Filter {
	if m != nil {
		return m.Filters
	}
	return nil
}

type ListenRequest_Filter struct {
	CollectionName       string                      `protobuf:"bytes,1,opt,name=collectionName,proto3" json:"collectionName,omitempty"`
	InstanceID           string                      `protobuf:"bytes,2,opt,name=instanceID,proto3" json:"instanceID,omitempty"`
	Action               ListenRequest_Filter_Action `protobuf:"varint,3,opt,name=action,proto3,enum=api.pb.ListenRequest_Filter_Action" json:"action,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *ListenRequest_Filter) Reset()         { *m = ListenRequest_Filter{} }
func (m *ListenRequest_Filter) String() string { return proto.CompactTextString(m) }
func (*ListenRequest_Filter) ProtoMessage()    {}
func (*ListenRequest_Filter) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{25, 0}
}

func (m *ListenRequest_Filter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListenRequest_Filter.Unmarshal(m, b)
}
func (m *ListenRequest_Filter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListenRequest_Filter.Marshal(b, m, deterministic)
}
func (m *ListenRequest_Filter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListenRequest_Filter.Merge(m, src)
}
func (m *ListenRequest_Filter) XXX_Size() int {
	return xxx_messageInfo_ListenRequest_Filter.Size(m)
}
func (m *ListenRequest_Filter) XXX_DiscardUnknown() {
	xxx_messageInfo_ListenRequest_Filter.DiscardUnknown(m)
}

var xxx_messageInfo_ListenRequest_Filter proto.InternalMessageInfo

func (m *ListenRequest_Filter) GetCollectionName() string {
	if m != nil {
		return m.CollectionName
	}
	return ""
}

func (m *ListenRequest_Filter) GetInstanceID() string {
	if m != nil {
		return m.InstanceID
	}
	return ""
}

func (m *ListenRequest_Filter) GetAction() ListenRequest_Filter_Action {
	if m != nil {
		return m.Action
	}
	return ListenRequest_Filter_ALL
}

type ListenReply struct {
	CollectionName       string             `protobuf:"bytes,1,opt,name=collectionName,proto3" json:"collectionName,omitempty"`
	InstanceID           string             `protobuf:"bytes,2,opt,name=instanceID,proto3" json:"instanceID,omitempty"`
	Action               ListenReply_Action `protobuf:"varint,3,opt,name=action,proto3,enum=api.pb.ListenReply_Action" json:"action,omitempty"`
	Instance             []byte             `protobuf:"bytes,4,opt,name=instance,proto3" json:"instance,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *ListenReply) Reset()         { *m = ListenReply{} }
func (m *ListenReply) String() string { return proto.CompactTextString(m) }
func (*ListenReply) ProtoMessage()    {}
func (*ListenReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{26}
}

func (m *ListenReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListenReply.Unmarshal(m, b)
}
func (m *ListenReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListenReply.Marshal(b, m, deterministic)
}
func (m *ListenReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListenReply.Merge(m, src)
}
func (m *ListenReply) XXX_Size() int {
	return xxx_messageInfo_ListenReply.Size(m)
}
func (m *ListenReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ListenReply.DiscardUnknown(m)
}

var xxx_messageInfo_ListenReply proto.InternalMessageInfo

func (m *ListenReply) GetCollectionName() string {
	if m != nil {
		return m.CollectionName
	}
	return ""
}

func (m *ListenReply) GetInstanceID() string {
	if m != nil {
		return m.InstanceID
	}
	return ""
}

func (m *ListenReply) GetAction() ListenReply_Action {
	if m != nil {
		return m.Action
	}
	return ListenReply_CREATE
}

func (m *ListenReply) GetInstance() []byte {
	if m != nil {
		return m.Instance
	}
	return nil
}

func init() {
	proto.RegisterEnum("api.pb.ListenRequest_Filter_Action", ListenRequest_Filter_Action_name, ListenRequest_Filter_Action_value)
	proto.RegisterEnum("api.pb.ListenReply_Action", ListenReply_Action_name, ListenReply_Action_value)
	proto.RegisterType((*NewDBRequest)(nil), "api.pb.NewDBRequest")
	proto.RegisterType((*CollectionConfig)(nil), "api.pb.CollectionConfig")
	proto.RegisterType((*CollectionConfig_IndexConfig)(nil), "api.pb.CollectionConfig.IndexConfig")
	proto.RegisterType((*NewDBFromAddrRequest)(nil), "api.pb.NewDBFromAddrRequest")
	proto.RegisterType((*NewDBReply)(nil), "api.pb.NewDBReply")
	proto.RegisterType((*GetDBInfoRequest)(nil), "api.pb.GetDBInfoRequest")
	proto.RegisterType((*GetDBInfoReply)(nil), "api.pb.GetDBInfoReply")
	proto.RegisterType((*NewCollectionRequest)(nil), "api.pb.NewCollectionRequest")
	proto.RegisterType((*NewCollectionReply)(nil), "api.pb.NewCollectionReply")
	proto.RegisterType((*CreateRequest)(nil), "api.pb.CreateRequest")
	proto.RegisterType((*CreateReply)(nil), "api.pb.CreateReply")
	proto.RegisterType((*SaveRequest)(nil), "api.pb.SaveRequest")
	proto.RegisterType((*SaveReply)(nil), "api.pb.SaveReply")
	proto.RegisterType((*DeleteRequest)(nil), "api.pb.DeleteRequest")
	proto.RegisterType((*DeleteReply)(nil), "api.pb.DeleteReply")
	proto.RegisterType((*HasRequest)(nil), "api.pb.HasRequest")
	proto.RegisterType((*HasReply)(nil), "api.pb.HasReply")
	proto.RegisterType((*FindRequest)(nil), "api.pb.FindRequest")
	proto.RegisterType((*FindReply)(nil), "api.pb.FindReply")
	proto.RegisterType((*FindByIDRequest)(nil), "api.pb.FindByIDRequest")
	proto.RegisterType((*FindByIDReply)(nil), "api.pb.FindByIDReply")
	proto.RegisterType((*StartTransactionRequest)(nil), "api.pb.StartTransactionRequest")
	proto.RegisterType((*ReadTransactionRequest)(nil), "api.pb.ReadTransactionRequest")
	proto.RegisterType((*ReadTransactionReply)(nil), "api.pb.ReadTransactionReply")
	proto.RegisterType((*WriteTransactionRequest)(nil), "api.pb.WriteTransactionRequest")
	proto.RegisterType((*WriteTransactionReply)(nil), "api.pb.WriteTransactionReply")
	proto.RegisterType((*ListenRequest)(nil), "api.pb.ListenRequest")
	proto.RegisterType((*ListenRequest_Filter)(nil), "api.pb.ListenRequest.Filter")
	proto.RegisterType((*ListenReply)(nil), "api.pb.ListenReply")
}

func init() { proto.RegisterFile("api.proto", fileDescriptor_00212fb1f9d3bf1c) }

var fileDescriptor_00212fb1f9d3bf1c = []byte{
	// 1244 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x58, 0xdd, 0x6e, 0xdb, 0x36,
	0x14, 0x96, 0x6c, 0x47, 0xb6, 0x8e, 0xe2, 0xc4, 0x63, 0xd3, 0xc4, 0x10, 0xb2, 0x2e, 0xe0, 0x86,
	0x22, 0x5b, 0x37, 0x23, 0x73, 0x86, 0x76, 0x7f, 0xdd, 0xe0, 0xbf, 0xcc, 0x5e, 0x83, 0xac, 0x50,
	0xd2, 0x6d, 0xc0, 0x06, 0x0c, 0x8a, 0x45, 0x27, 0x1a, 0x14, 0xcb, 0x91, 0xe4, 0x36, 0x7e, 0x9b,
	0xa1, 0xaf, 0xb0, 0xab, 0xde, 0xf6, 0x0d, 0xf6, 0x16, 0x03, 0xf6, 0x12, 0x03, 0x29, 0x51, 0xa2,
	0x64, 0xd9, 0xeb, 0xd2, 0xb4, 0x77, 0xe6, 0xd1, 0x21, 0x3f, 0x9e, 0x73, 0x3e, 0x7e, 0x87, 0x34,
	0xa8, 0xe6, 0xc4, 0x6e, 0x4c, 0x3c, 0x37, 0x70, 0x91, 0xc2, 0x7e, 0x9e, 0x62, 0x0c, 0xab, 0x47,
	0xe4, 0x59, 0xb7, 0x6d, 0x90, 0xcb, 0x29, 0xf1, 0x03, 0x84, 0xa0, 0x64, 0x9d, 0x0e, 0xba, 0x75,
	0x79, 0x47, 0xde, 0x55, 0x0d, 0xf6, 0x1b, 0xbf, 0x90, 0xa1, 0xd6, 0x71, 0x1d, 0x87, 0x0c, 0x03,
	0xdb, 0x1d, 0x77, 0xdc, 0xf1, 0xc8, 0x3e, 0xa3, 0x8e, 0x63, 0xf3, 0x82, 0x70, 0x47, 0xfa, 0x1b,
	0x6d, 0x82, 0xe2, 0x0f, 0xcf, 0xc9, 0x85, 0x59, 0x2f, 0x30, 0x6b, 0x34, 0x42, 0xdf, 0x40, 0xd9,
	0x1e, 0x5b, 0xe4, 0x8a, 0xf8, 0xf5, 0xe2, 0x4e, 0x71, 0x57, 0x6b, 0x7e, 0xd0, 0x08, 0xe1, 0x1b,
	0xd9, 0x65, 0x1b, 0x03, 0xea, 0x17, 0xfe, 0x36, 0xf8, 0x24, 0xfd, 0x0b, 0xd0, 0x04, 0x3b, 0x85,
	0x9e, 0x98, 0xc1, 0x39, 0x87, 0xa6, 0xbf, 0x29, 0xf4, 0x74, 0x6c, 0x5f, 0x4e, 0x09, 0x83, 0xae,
	0x18, 0xd1, 0x08, 0x3f, 0x97, 0x61, 0x83, 0x05, 0x78, 0xe0, 0xb9, 0x17, 0x2d, 0xcb, 0xf2, 0x78,
	0xa0, 0x9b, 0xa0, 0x58, 0xa7, 0xd4, 0x10, 0x2d, 0x13, 0x8d, 0xd0, 0x36, 0xa8, 0x23, 0xd7, 0x71,
	0xdc, 0x67, 0x8f, 0xc8, 0x8c, 0xad, 0xb5, 0x6a, 0x24, 0x06, 0x54, 0x87, 0xb2, 0x47, 0x4c, 0x8b,
	0x7e, 0x2b, 0xb2, 0x6f, 0x7c, 0x88, 0xbe, 0x04, 0x6d, 0x18, 0x07, 0xe3, 0xd7, 0x4b, 0x2c, 0xce,
	0xfa, 0xa2, 0x38, 0x0d, 0xd1, 0x19, 0xaf, 0x02, 0x44, 0x45, 0x98, 0x38, 0x33, 0x7c, 0x17, 0x6a,
	0xdf, 0x91, 0xa0, 0xdb, 0x1e, 0x8c, 0x47, 0xee, 0xb2, 0xb2, 0x8c, 0x60, 0x4d, 0xf0, 0x9b, 0x38,
	0x33, 0xba, 0x77, 0xd3, 0xb2, 0x3c, 0xe2, 0xfb, 0xc4, 0xaf, 0xcb, 0x3b, 0xc5, 0x5d, 0xd5, 0x48,
	0x0c, 0xd7, 0x8d, 0x0c, 0xff, 0xca, 0x32, 0x98, 0x44, 0xb0, 0x64, 0x4f, 0x68, 0x0f, 0x94, 0x21,
	0x0b, 0x90, 0x01, 0x2c, 0x4b, 0x40, 0xe4, 0x87, 0x37, 0x00, 0x65, 0x56, 0xa7, 0x39, 0x18, 0x42,
	0xb5, 0xe3, 0x11, 0x33, 0x20, 0xcb, 0xc0, 0xee, 0xc2, 0x5a, 0x92, 0xc5, 0x23, 0x4a, 0xc6, 0x90,
	0x76, 0x19, 0x2b, 0x2d, 0xf5, 0x53, 0xd3, 0x99, 0x46, 0xec, 0x53, 0x8d, 0x68, 0x84, 0xef, 0x81,
	0xc6, 0x41, 0xa2, 0xec, 0xd9, 0x63, 0x3f, 0x30, 0xc7, 0xc3, 0x24, 0x7b, 0xb1, 0x01, 0x9b, 0xa0,
	0x1d, 0x9b, 0x4f, 0xdf, 0xe8, 0x7e, 0x34, 0x50, 0x43, 0x08, 0x9a, 0x81, 0x0b, 0xa8, 0x76, 0x89,
	0x43, 0x6e, 0x26, 0x03, 0x3b, 0xa0, 0xf1, 0x48, 0x06, 0x5d, 0x0e, 0x2b, 0x9a, 0x70, 0x15, 0x34,
	0x0e, 0x47, 0xd1, 0x7f, 0x07, 0xe8, 0x9b, 0xfe, 0xdb, 0x81, 0xc6, 0x50, 0x61, 0x58, 0xb4, 0x06,
	0x9b, 0xa0, 0x90, 0x2b, 0xdb, 0x0f, 0x7c, 0x86, 0x55, 0x31, 0xa2, 0x11, 0x3e, 0x03, 0xed, 0xc0,
	0x1e, 0x5b, 0x37, 0xb1, 0xa1, 0x6d, 0x50, 0x2f, 0xa7, 0xc4, 0x9b, 0x7d, 0x7f, 0xfc, 0xc3, 0x51,
	0x44, 0xf5, 0xc4, 0x80, 0x3f, 0x04, 0x35, 0x04, 0xca, 0x65, 0xc4, 0xaa, 0xc8, 0x88, 0x0b, 0x58,
	0xa7, 0xae, 0xed, 0xd9, 0xa0, 0x7b, 0x13, 0xfb, 0xba, 0x03, 0x90, 0x64, 0x85, 0x6d, 0x4c, 0x35,
	0x04, 0x0b, 0xbe, 0x07, 0xd5, 0x04, 0x8e, 0xee, 0x4e, 0x87, 0x0a, 0xff, 0x1c, 0x01, 0xc6, 0x63,
	0xfc, 0x04, 0xb6, 0x8e, 0x03, 0xd3, 0x0b, 0x4e, 0x3c, 0x73, 0xec, 0x9b, 0xff, 0x79, 0x6c, 0x5f,
	0x71, 0x8f, 0xf8, 0xcf, 0x02, 0x6c, 0x1a, 0xc4, 0xb4, 0x72, 0x96, 0xfd, 0x05, 0xb6, 0xfc, 0x7c,
	0x44, 0x86, 0xa4, 0x35, 0xdf, 0xe3, 0x52, 0xb0, 0x60, 0x63, 0x7d, 0xc9, 0x58, 0xb4, 0x02, 0xfa,
	0x0c, 0xe0, 0x3c, 0xa6, 0x63, 0x24, 0x2d, 0x88, 0xaf, 0x97, 0x10, 0xb5, 0x2f, 0x19, 0x82, 0x1f,
	0x7a, 0x00, 0xda, 0x28, 0x21, 0x0d, 0x4b, 0xa9, 0xd6, 0xbc, 0xc5, 0xa7, 0x09, 0x7c, 0xea, 0x4b,
	0x86, 0xe8, 0x89, 0x3a, 0xb0, 0x3e, 0x4a, 0x57, 0xb6, 0x5e, 0x62, 0x93, 0xb7, 0xc4, 0xc9, 0xc2,
	0xe7, 0xbe, 0x64, 0x64, 0x67, 0xb4, 0x2b, 0xa0, 0xb8, 0x13, 0x1a, 0x04, 0x7e, 0x29, 0xc3, 0xc6,
	0x5c, 0xd6, 0x68, 0x05, 0x1b, 0x50, 0x39, 0x8f, 0x98, 0x1f, 0x25, 0xa9, 0x96, 0x0a, 0x6a, 0xe2,
	0xcc, 0xfa, 0x92, 0x11, 0xfb, 0xa0, 0x4f, 0x41, 0x1d, 0x71, 0x72, 0x46, 0x59, 0x78, 0x27, 0x1d,
	0x4e, 0x38, 0x23, 0xf1, 0x42, 0x0f, 0xa1, 0x3a, 0x12, 0x59, 0x13, 0x65, 0xe1, 0xf6, 0x7c, 0x20,
	0xe1, 0xd4, 0xb4, 0xb7, 0x10, 0xc4, 0x3f, 0x45, 0xd8, 0xfa, 0xc9, 0xb3, 0x03, 0xf2, 0xb6, 0x6b,
	0xff, 0x10, 0xaa, 0x43, 0xb1, 0x15, 0x44, 0x81, 0xc7, 0x11, 0xa4, 0xfa, 0x04, 0x8d, 0x20, 0xe5,
	0x4d, 0x49, 0xe0, 0x27, 0xba, 0x9d, 0x25, 0x81, 0x20, 0xe9, 0x94, 0x04, 0x82, 0x27, 0xc5, 0xb5,
	0x44, 0x01, 0x8e, 0x28, 0x10, 0xe3, 0xa6, 0xd4, 0x99, 0xe2, 0xa6, 0xbc, 0x33, 0x94, 0x5d, 0xb9,
	0x1e, 0x65, 0x95, 0xd7, 0xa1, 0x6c, 0xf9, 0x35, 0x28, 0xfb, 0x77, 0x01, 0x6e, 0xcf, 0x57, 0x9b,
	0x12, 0xea, 0x01, 0x68, 0xc3, 0xa4, 0x69, 0x46, 0xf5, 0xbd, 0x95, 0x2d, 0x46, 0x48, 0x26, 0xd1,
	0x93, 0x92, 0xd7, 0xe7, 0xdd, 0x2d, 0x4b, 0xde, 0xb8, 0xed, 0x51, 0xf2, 0xc6, 0x5e, 0x14, 0xcb,
	0x4a, 0x9a, 0x52, 0xb6, 0x76, 0x42, 0xbf, 0xa2, 0x58, 0x82, 0x67, 0xea, 0x60, 0x95, 0xfe, 0xef,
	0xc1, 0x5a, 0xb9, 0xde, 0xc1, 0x52, 0xae, 0x79, 0xb0, 0xfe, 0x28, 0x40, 0xf5, 0xd0, 0xf6, 0x03,
	0xb2, 0x54, 0xa1, 0xef, 0x43, 0x79, 0x64, 0x3b, 0x01, 0xf1, 0xfc, 0x7a, 0x81, 0x5d, 0x2d, 0xb7,
	0x39, 0x50, 0x6a, 0x6e, 0xe3, 0x80, 0x39, 0x19, 0xdc, 0x59, 0x7f, 0x29, 0x83, 0x12, 0xda, 0x72,
	0x44, 0x5e, 0x7e, 0x85, 0x46, 0x54, 0xc8, 0x36, 0x22, 0xf4, 0x15, 0x28, 0x21, 0x21, 0x58, 0x41,
	0xd6, 0x9a, 0xef, 0x2f, 0xdb, 0x49, 0xa3, 0x15, 0x72, 0x27, 0x9a, 0x82, 0xf7, 0x41, 0x09, 0x2d,
	0xa8, 0x0c, 0xc5, 0xd6, 0xe1, 0x61, 0x4d, 0x42, 0x00, 0x4a, 0xc7, 0xe8, 0xb5, 0x4e, 0x7a, 0x35,
	0x19, 0x55, 0xa0, 0x74, 0xdc, 0xfa, 0xb1, 0x57, 0x2b, 0x50, 0x6b, 0xb7, 0x77, 0xd8, 0x3b, 0xe9,
	0xd5, 0x8a, 0xf8, 0x2f, 0x19, 0x34, 0xbe, 0x38, 0xcd, 0xfd, 0x4d, 0x45, 0xd2, 0xcc, 0x44, 0xa2,
	0x67, 0x23, 0x99, 0x38, 0xb3, 0x4c, 0x00, 0xa9, 0xae, 0x5b, 0x62, 0xb7, 0x87, 0xa4, 0xeb, 0x7e,
	0x14, 0x07, 0x97, 0xc4, 0x24, 0xc5, 0x31, 0xc9, 0x42, 0x4c, 0x85, 0xe6, 0x0b, 0x05, 0x8a, 0xad,
	0xc7, 0x03, 0xb4, 0x0f, 0x2b, 0xec, 0xee, 0x8f, 0x36, 0x38, 0xb8, 0xf8, 0x1e, 0xd3, 0x51, 0xc6,
	0x4a, 0x2f, 0x67, 0x12, 0xea, 0x40, 0x35, 0xf5, 0xa8, 0x41, 0xdb, 0x29, 0xb7, 0xcc, 0x5b, 0x67,
	0xc1, 0x22, 0xdf, 0x82, 0x1a, 0xbf, 0x1f, 0x50, 0x7c, 0x51, 0xcf, 0x3e, 0x3d, 0xf4, 0xcd, 0x9c,
	0x2f, 0xe1, 0x02, 0x8f, 0xd8, 0x2e, 0x92, 0xab, 0x7b, 0x6a, 0x17, 0x73, 0xef, 0x05, 0x5d, 0x5f,
	0xf0, 0x35, 0x5c, 0xec, 0x3e, 0x28, 0xa1, 0x78, 0xa0, 0x7c, 0x65, 0xd7, 0xf3, 0x34, 0x06, 0x4b,
	0x68, 0x0f, 0x4a, 0x54, 0x3d, 0x50, 0x9e, 0xa4, 0xeb, 0xf3, 0x02, 0x13, 0x22, 0x85, 0xd2, 0x81,
	0xf2, 0xb5, 0x5c, 0xcf, 0x53, 0x18, 0x2c, 0xa1, 0x4f, 0xa0, 0xd8, 0x37, 0x7d, 0x94, 0x23, 0xe2,
	0xfa, 0x9c, 0xba, 0x84, 0x1b, 0xa3, 0x1a, 0x80, 0xf2, 0xd4, 0x5b, 0x9f, 0x57, 0x17, 0x2c, 0xa1,
	0xaf, 0xa1, 0xc2, 0x55, 0x03, 0x2d, 0x92, 0x6d, 0x3d, 0x5f, 0x60, 0xb0, 0x84, 0x9e, 0xc0, 0x7a,
	0xe6, 0x92, 0x81, 0xee, 0x70, 0xdf, 0xfc, 0x3b, 0x9b, 0xbe, 0xbd, 0xf0, 0x3b, 0x5b, 0x72, 0x57,
	0xde, 0x93, 0xd1, 0xcf, 0x50, 0xcb, 0x36, 0x02, 0x14, 0xb7, 0xf3, 0x05, 0x17, 0x02, 0xfd, 0xdd,
	0xc5, 0x0e, 0xc9, 0xca, 0x9f, 0x83, 0x12, 0x9e, 0xb3, 0xa4, 0x0e, 0x29, 0x05, 0x49, 0xea, 0x20,
	0x1c, 0x47, 0x2c, 0xed, 0xc9, 0xed, 0x8f, 0x61, 0xcb, 0x76, 0x1b, 0x01, 0xb9, 0x0a, 0x6c, 0x87,
	0x34, 0x82, 0x73, 0xfa, 0x52, 0xf5, 0x7f, 0x3b, 0xf3, 0x26, 0xc3, 0x76, 0xf9, 0x24, 0x1c, 0x3d,
	0x96, 0x9f, 0x17, 0x56, 0x4e, 0xfa, 0x46, 0xf7, 0xf8, 0x54, 0x61, 0xff, 0x78, 0xec, 0xff, 0x1b,
	0x00, 0x00, 0xff, 0xff, 0x9c, 0xd2, 0xa9, 0x88, 0xfe, 0x10, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// APIClient is the client API for API service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type APIClient interface {
	NewDB(ctx context.Context, in *NewDBRequest, opts ...grpc.CallOption) (*NewDBReply, error)
	NewDBFromAddr(ctx context.Context, in *NewDBFromAddrRequest, opts ...grpc.CallOption) (*NewDBReply, error)
	GetDBInfo(ctx context.Context, in *GetDBInfoRequest, opts ...grpc.CallOption) (*GetDBInfoReply, error)
	NewCollection(ctx context.Context, in *NewCollectionRequest, opts ...grpc.CallOption) (*NewCollectionReply, error)
	Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateReply, error)
	Save(ctx context.Context, in *SaveRequest, opts ...grpc.CallOption) (*SaveReply, error)
	Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*DeleteReply, error)
	Has(ctx context.Context, in *HasRequest, opts ...grpc.CallOption) (*HasReply, error)
	Find(ctx context.Context, in *FindRequest, opts ...grpc.CallOption) (*FindReply, error)
	FindByID(ctx context.Context, in *FindByIDRequest, opts ...grpc.CallOption) (*FindByIDReply, error)
	ReadTransaction(ctx context.Context, opts ...grpc.CallOption) (API_ReadTransactionClient, error)
	WriteTransaction(ctx context.Context, opts ...grpc.CallOption) (API_WriteTransactionClient, error)
	Listen(ctx context.Context, in *ListenRequest, opts ...grpc.CallOption) (API_ListenClient, error)
}

type aPIClient struct {
	cc *grpc.ClientConn
}

func NewAPIClient(cc *grpc.ClientConn) APIClient {
	return &aPIClient{cc}
}

func (c *aPIClient) NewDB(ctx context.Context, in *NewDBRequest, opts ...grpc.CallOption) (*NewDBReply, error) {
	out := new(NewDBReply)
	err := c.cc.Invoke(ctx, "/api.pb.API/NewDB", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) NewDBFromAddr(ctx context.Context, in *NewDBFromAddrRequest, opts ...grpc.CallOption) (*NewDBReply, error) {
	out := new(NewDBReply)
	err := c.cc.Invoke(ctx, "/api.pb.API/NewDBFromAddr", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) GetDBInfo(ctx context.Context, in *GetDBInfoRequest, opts ...grpc.CallOption) (*GetDBInfoReply, error) {
	out := new(GetDBInfoReply)
	err := c.cc.Invoke(ctx, "/api.pb.API/GetDBInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) NewCollection(ctx context.Context, in *NewCollectionRequest, opts ...grpc.CallOption) (*NewCollectionReply, error) {
	out := new(NewCollectionReply)
	err := c.cc.Invoke(ctx, "/api.pb.API/NewCollection", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateReply, error) {
	out := new(CreateReply)
	err := c.cc.Invoke(ctx, "/api.pb.API/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) Save(ctx context.Context, in *SaveRequest, opts ...grpc.CallOption) (*SaveReply, error) {
	out := new(SaveReply)
	err := c.cc.Invoke(ctx, "/api.pb.API/Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*DeleteReply, error) {
	out := new(DeleteReply)
	err := c.cc.Invoke(ctx, "/api.pb.API/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) Has(ctx context.Context, in *HasRequest, opts ...grpc.CallOption) (*HasReply, error) {
	out := new(HasReply)
	err := c.cc.Invoke(ctx, "/api.pb.API/Has", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) Find(ctx context.Context, in *FindRequest, opts ...grpc.CallOption) (*FindReply, error) {
	out := new(FindReply)
	err := c.cc.Invoke(ctx, "/api.pb.API/Find", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) FindByID(ctx context.Context, in *FindByIDRequest, opts ...grpc.CallOption) (*FindByIDReply, error) {
	out := new(FindByIDReply)
	err := c.cc.Invoke(ctx, "/api.pb.API/FindByID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) ReadTransaction(ctx context.Context, opts ...grpc.CallOption) (API_ReadTransactionClient, error) {
	stream, err := c.cc.NewStream(ctx, &_API_serviceDesc.Streams[0], "/api.pb.API/ReadTransaction", opts...)
	if err != nil {
		return nil, err
	}
	x := &aPIReadTransactionClient{stream}
	return x, nil
}

type API_ReadTransactionClient interface {
	Send(*ReadTransactionRequest) error
	Recv() (*ReadTransactionReply, error)
	grpc.ClientStream
}

type aPIReadTransactionClient struct {
	grpc.ClientStream
}

func (x *aPIReadTransactionClient) Send(m *ReadTransactionRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *aPIReadTransactionClient) Recv() (*ReadTransactionReply, error) {
	m := new(ReadTransactionReply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *aPIClient) WriteTransaction(ctx context.Context, opts ...grpc.CallOption) (API_WriteTransactionClient, error) {
	stream, err := c.cc.NewStream(ctx, &_API_serviceDesc.Streams[1], "/api.pb.API/WriteTransaction", opts...)
	if err != nil {
		return nil, err
	}
	x := &aPIWriteTransactionClient{stream}
	return x, nil
}

type API_WriteTransactionClient interface {
	Send(*WriteTransactionRequest) error
	Recv() (*WriteTransactionReply, error)
	grpc.ClientStream
}

type aPIWriteTransactionClient struct {
	grpc.ClientStream
}

func (x *aPIWriteTransactionClient) Send(m *WriteTransactionRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *aPIWriteTransactionClient) Recv() (*WriteTransactionReply, error) {
	m := new(WriteTransactionReply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *aPIClient) Listen(ctx context.Context, in *ListenRequest, opts ...grpc.CallOption) (API_ListenClient, error) {
	stream, err := c.cc.NewStream(ctx, &_API_serviceDesc.Streams[2], "/api.pb.API/Listen", opts...)
	if err != nil {
		return nil, err
	}
	x := &aPIListenClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type API_ListenClient interface {
	Recv() (*ListenReply, error)
	grpc.ClientStream
}

type aPIListenClient struct {
	grpc.ClientStream
}

func (x *aPIListenClient) Recv() (*ListenReply, error) {
	m := new(ListenReply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// APIServer is the server API for API service.
type APIServer interface {
	NewDB(context.Context, *NewDBRequest) (*NewDBReply, error)
	NewDBFromAddr(context.Context, *NewDBFromAddrRequest) (*NewDBReply, error)
	GetDBInfo(context.Context, *GetDBInfoRequest) (*GetDBInfoReply, error)
	NewCollection(context.Context, *NewCollectionRequest) (*NewCollectionReply, error)
	Create(context.Context, *CreateRequest) (*CreateReply, error)
	Save(context.Context, *SaveRequest) (*SaveReply, error)
	Delete(context.Context, *DeleteRequest) (*DeleteReply, error)
	Has(context.Context, *HasRequest) (*HasReply, error)
	Find(context.Context, *FindRequest) (*FindReply, error)
	FindByID(context.Context, *FindByIDRequest) (*FindByIDReply, error)
	ReadTransaction(API_ReadTransactionServer) error
	WriteTransaction(API_WriteTransactionServer) error
	Listen(*ListenRequest, API_ListenServer) error
}

// UnimplementedAPIServer can be embedded to have forward compatible implementations.
type UnimplementedAPIServer struct {
}

func (*UnimplementedAPIServer) NewDB(ctx context.Context, req *NewDBRequest) (*NewDBReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NewDB not implemented")
}
func (*UnimplementedAPIServer) NewDBFromAddr(ctx context.Context, req *NewDBFromAddrRequest) (*NewDBReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NewDBFromAddr not implemented")
}
func (*UnimplementedAPIServer) GetDBInfo(ctx context.Context, req *GetDBInfoRequest) (*GetDBInfoReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDBInfo not implemented")
}
func (*UnimplementedAPIServer) NewCollection(ctx context.Context, req *NewCollectionRequest) (*NewCollectionReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NewCollection not implemented")
}
func (*UnimplementedAPIServer) Create(ctx context.Context, req *CreateRequest) (*CreateReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedAPIServer) Save(ctx context.Context, req *SaveRequest) (*SaveReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Save not implemented")
}
func (*UnimplementedAPIServer) Delete(ctx context.Context, req *DeleteRequest) (*DeleteReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedAPIServer) Has(ctx context.Context, req *HasRequest) (*HasReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Has not implemented")
}
func (*UnimplementedAPIServer) Find(ctx context.Context, req *FindRequest) (*FindReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Find not implemented")
}
func (*UnimplementedAPIServer) FindByID(ctx context.Context, req *FindByIDRequest) (*FindByIDReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindByID not implemented")
}
func (*UnimplementedAPIServer) ReadTransaction(srv API_ReadTransactionServer) error {
	return status.Errorf(codes.Unimplemented, "method ReadTransaction not implemented")
}
func (*UnimplementedAPIServer) WriteTransaction(srv API_WriteTransactionServer) error {
	return status.Errorf(codes.Unimplemented, "method WriteTransaction not implemented")
}
func (*UnimplementedAPIServer) Listen(req *ListenRequest, srv API_ListenServer) error {
	return status.Errorf(codes.Unimplemented, "method Listen not implemented")
}

func RegisterAPIServer(s *grpc.Server, srv APIServer) {
	s.RegisterService(&_API_serviceDesc, srv)
}

func _API_NewDB_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewDBRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).NewDB(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.pb.API/NewDB",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).NewDB(ctx, req.(*NewDBRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_NewDBFromAddr_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewDBFromAddrRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).NewDBFromAddr(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.pb.API/NewDBFromAddr",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).NewDBFromAddr(ctx, req.(*NewDBFromAddrRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_GetDBInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDBInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).GetDBInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.pb.API/GetDBInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).GetDBInfo(ctx, req.(*GetDBInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_NewCollection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewCollectionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).NewCollection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.pb.API/NewCollection",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).NewCollection(ctx, req.(*NewCollectionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.pb.API/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).Create(ctx, req.(*CreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SaveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.pb.API/Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).Save(ctx, req.(*SaveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.pb.API/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).Delete(ctx, req.(*DeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_Has_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HasRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).Has(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.pb.API/Has",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).Has(ctx, req.(*HasRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_Find_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).Find(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.pb.API/Find",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).Find(ctx, req.(*FindRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_FindByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindByIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).FindByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.pb.API/FindByID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).FindByID(ctx, req.(*FindByIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_ReadTransaction_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(APIServer).ReadTransaction(&aPIReadTransactionServer{stream})
}

type API_ReadTransactionServer interface {
	Send(*ReadTransactionReply) error
	Recv() (*ReadTransactionRequest, error)
	grpc.ServerStream
}

type aPIReadTransactionServer struct {
	grpc.ServerStream
}

func (x *aPIReadTransactionServer) Send(m *ReadTransactionReply) error {
	return x.ServerStream.SendMsg(m)
}

func (x *aPIReadTransactionServer) Recv() (*ReadTransactionRequest, error) {
	m := new(ReadTransactionRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _API_WriteTransaction_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(APIServer).WriteTransaction(&aPIWriteTransactionServer{stream})
}

type API_WriteTransactionServer interface {
	Send(*WriteTransactionReply) error
	Recv() (*WriteTransactionRequest, error)
	grpc.ServerStream
}

type aPIWriteTransactionServer struct {
	grpc.ServerStream
}

func (x *aPIWriteTransactionServer) Send(m *WriteTransactionReply) error {
	return x.ServerStream.SendMsg(m)
}

func (x *aPIWriteTransactionServer) Recv() (*WriteTransactionRequest, error) {
	m := new(WriteTransactionRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _API_Listen_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListenRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(APIServer).Listen(m, &aPIListenServer{stream})
}

type API_ListenServer interface {
	Send(*ListenReply) error
	grpc.ServerStream
}

type aPIListenServer struct {
	grpc.ServerStream
}

func (x *aPIListenServer) Send(m *ListenReply) error {
	return x.ServerStream.SendMsg(m)
}

var _API_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.pb.API",
	HandlerType: (*APIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "NewDB",
			Handler:    _API_NewDB_Handler,
		},
		{
			MethodName: "NewDBFromAddr",
			Handler:    _API_NewDBFromAddr_Handler,
		},
		{
			MethodName: "GetDBInfo",
			Handler:    _API_GetDBInfo_Handler,
		},
		{
			MethodName: "NewCollection",
			Handler:    _API_NewCollection_Handler,
		},
		{
			MethodName: "Create",
			Handler:    _API_Create_Handler,
		},
		{
			MethodName: "Save",
			Handler:    _API_Save_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _API_Delete_Handler,
		},
		{
			MethodName: "Has",
			Handler:    _API_Has_Handler,
		},
		{
			MethodName: "Find",
			Handler:    _API_Find_Handler,
		},
		{
			MethodName: "FindByID",
			Handler:    _API_FindByID_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ReadTransaction",
			Handler:       _API_ReadTransaction_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "WriteTransaction",
			Handler:       _API_WriteTransaction_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "Listen",
			Handler:       _API_Listen_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "api.proto",
}
